import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest12 {

    public static boolean debug = false;

    @Test
    public void test06001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06001");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder54.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getTranslator();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getPollTimeoutMs();
        boolean boolean62 = kafkaSpoutRetryServiceKafkaSpoutConfig59.isConsumerAutoCommitMode();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder47.setProp(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder17.setProp(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setMaxPollRecords(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 200L + "'", long61 == 200L);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test06002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06002");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06003");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        boolean boolean48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder33.setProp(strMap49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        java.lang.String str63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder70.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setSSLKeystore("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + false + "'", boolean48 == false);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNull(str63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test06004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06004");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        java.lang.String str67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.toString();
        boolean boolean68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer70 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getValueDeserializer();
        boolean boolean71 = kafkaSpoutRetryServiceKafkaSpoutConfig63.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer72 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKafkaProps();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder48.setProp(strMap76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 2000L + "'", long69 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer70);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + false + "'", boolean71 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 2147483647 + "'", int75 == 2147483647);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test06005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06005");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strListBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strListSerializableDeserializer5, firstPollOffsetStrategyEnumSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.KafkaSpoutRetryService> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", strSerializableDeserializer2, kafkaSpoutRetryServiceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList11);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList11);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test06006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06006");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder37.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder37.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder49.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder61.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder61.setFirstPollOffsetStrategy(firstPollOffsetStrategy69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder61.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder49.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder27.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder27.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer83 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer84 = null;
        java.util.regex.Pattern pattern85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer83, charSequenceSerializableDeserializer84, pattern85);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder86.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator87);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc89 = null;
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder88.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc89, fields90, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig93 = kafkaSpoutRetryServiceBuilder88.build();
        org.apache.storm.kafka.spout.Subscription subscription94 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService95 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService96 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService97 = kafkaSpoutRetryServiceKafkaSpoutConfig93.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder81.setRetry(kafkaSpoutRetryService97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig93);
        org.junit.Assert.assertNotNull(subscription94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test06007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06007");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder33.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder49.build();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getSubscription();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        java.lang.String str61 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder67.build();
        java.lang.String str69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getKafkaProps();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 200L + "'", long55 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "hi!" + "'", str69, "hi!");
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "hi!" + "'", str71, "hi!");
    }

    @Test
    public void test06008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06008");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
    }

    @Test
    public void test06009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06009");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder14.setProp(strMap33);
        java.lang.Class<?> wildcardClass35 = kafkaSpoutRetryServiceBuilder14.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
    }

    @Test
    public void test06010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06010");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder39.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setMaxPartitionFectchBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
    }

    @Test
    public void test06011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06011");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        java.util.Properties properties61 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder45.setProp(properties61);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test06012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06012");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setOffsetCommitPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        long long58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getPollTimeoutMs();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getPollTimeoutMs();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getOffsetsCommitPeriodMs();
        java.lang.String str61 = kafkaSpoutRetryServiceKafkaSpoutConfig56.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getKafkaProps();
        int int63 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getMaxUncommittedOffsets();
        int int64 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getFirstPollOffsetStrategy();
        boolean boolean66 = kafkaSpoutRetryServiceKafkaSpoutConfig56.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 200L + "'", long58 == 200L);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 30000L + "'", long60 == 30000L);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 10000000 + "'", int63 == 10000000);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + false + "'", boolean66 == false);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test06013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06013");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test06014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06014");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractCollection<java.lang.String>> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractCollection<java.lang.String>>("hi!", strSerializableDeserializer1, strCollectionSerializableDeserializer2, pattern3);
    }

    @Test
    public void test06015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06015");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setFetchMinBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder20.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
    }

    @Test
    public void test06016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06016");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
    }

    @Test
    public void test06017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06017");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(str36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
    }

    @Test
    public void test06018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06018");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder60.setProp(strMap77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder43.setProp(strMap77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder43.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder43.build();
        boolean boolean85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + false + "'", boolean85 == false);
    }

    @Test
    public void test06019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06019");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder38.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder16.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test06020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06020");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
    }

    @Test
    public void test06021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06021");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str26 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNull(str24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2000L + "'", long25 == 2000L);
    }

    @Test
    public void test06022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06022");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Comparable<java.lang.String>> strMapBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Comparable<java.lang.String>>("hi!", strMapSerializableDeserializer1, strComparableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test06023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06023");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(10);
        java.util.Properties properties14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setProp(properties14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test06024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06024");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 200L + "'", long32 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test06025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06025");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder32.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
    }

    @Test
    public void test06026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06026");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test06027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06027");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder18.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder18.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setMaxUncommittedOffsets((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test06028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06028");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder24.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer67 = null;
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer66, charSequenceSerializableDeserializer67, pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator70);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder75.build();
        java.lang.String str79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getKeyDeserializer();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig78.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNull(str79);
        org.junit.Assert.assertNull(charSequenceDeserializer80);
        org.junit.Assert.assertNull(charSequenceDeserializer81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer83);
    }

    @Test
    public void test06029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06029");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test06030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06030");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
    }

    @Test
    public void test06031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06031");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("");
        java.util.Properties properties26 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setProp(properties26);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
    }

    @Test
    public void test06032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06032");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test06033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06033");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
        java.lang.Class<?> wildcardClass29 = kafkaSpoutRetryServiceBuilder28.getClass();
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test06034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06034");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setMaxPartitionFectchBytes(97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder26.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test06035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06035");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test06036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06036");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test06037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06037");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer14 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer13, strArraySerializableDeserializer14, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.Map<java.lang.String, java.lang.Object>> cloneableBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.Map<java.lang.String, java.lang.Object>>("hi!", cloneableSerializableDeserializer10, strMapSerializableDeserializer11, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer7, strIterableSerializableDeserializer8, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> cloneableBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", cloneableSerializableDeserializer4, kafkaSpoutRetryServiceBuilderSerializableDeserializer5, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06038");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.ArrayList<java.lang.String>> serializableBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.ArrayList<java.lang.String>>("hi!", serializableSerializableDeserializer4, strListSerializableDeserializer5, strArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06039");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test06040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06040");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test06041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06041");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Subscription> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.Subscription>("hi!", strSerializableDeserializer4, subscriptionSerializableDeserializer5, strArray13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> kafkaSpoutRetryServiceConsumerRecordFuncBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, strArray13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test06042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06042");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 30000L + "'", long23 == 30000L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 30000L + "'", long24 == 30000L);
    }

    @Test
    public void test06043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06043");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxRetries((int) (byte) -1);
        java.lang.Class<?> wildcardClass51 = kafkaSpoutRetryServiceBuilder50.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test06044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06044");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
    }

    @Test
    public void test06045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06045");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getValueDeserializer();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
    }

    @Test
    public void test06046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06046");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        int int66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder26.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder21.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder73.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 2147483647 + "'", int66 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test06047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06047");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder37.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder54.build();
        int int60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 10000000 + "'", int60 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
    }

    @Test
    public void test06048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06048");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test06049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06049");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer7, firstPollOffsetStrategySerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess> strListBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess>("hi!", strListSerializableDeserializer4, randomAccessSerializableDeserializer5, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06050");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder11.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder11.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getFirstPollOffsetStrategy();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 2000L + "'", long59 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 30000L + "'", long61 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test06051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06051");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder49.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder60.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder60.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder65.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder65.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder43.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 200L + "'", long37 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test06052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06052");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06053");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder10.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setMaxPollRecords((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setMaxRetries((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test06054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06054");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPollTimeoutMs();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPollTimeoutMs();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getOffsetsCommitPeriodMs();
        java.lang.String str47 = kafkaSpoutRetryServiceKafkaSpoutConfig42.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder28.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setProp(strMap48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder66.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder66.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder74.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer79 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer80 = null;
        java.util.regex.Pattern pattern81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer79, charSequenceSerializableDeserializer80, pattern81);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder82.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator83);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc85 = null;
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder84.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc85, fields86, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig89 = kafkaSpoutRetryServiceBuilder84.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig89.getTranslator();
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields91);
        org.apache.storm.tuple.Fields fields93 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields93);
        org.apache.storm.tuple.Fields fields95 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields95, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 30000L + "'", long46 == 30000L);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test06055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06055");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "", "", "", "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test06056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06056");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder36.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder36.setMaxPollRecords(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder54.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder66.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getValueDeserializer();
        int int91 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder72.setProp(strMap92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder36.setProp(strMap92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder17.setProp(strMap92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 200L + "'", long88 == 200L);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNull(charSequenceDeserializer90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10000000 + "'", int91 == 10000000);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
    }

    @Test
    public void test06057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06057");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder36.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setFirstPollOffsetStrategy(firstPollOffsetStrategy60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder24.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder61.setMaxRetries((int) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test06058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06058");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test06059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06059");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(2147483647);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06060");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test06061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06061");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test06062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06062");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer27 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer26, randomAccessSerializableDeserializer27, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer23, randomAccessSerializableDeserializer24, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer18, kafkaSpoutRetryServiceSerializableDeserializer19, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer15, genericDeclarationSerializableDeserializer16, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String> strCollectionBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.String>("hi!", strCollectionSerializableDeserializer9, strSerializableDeserializer10, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strMapBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strMapSerializableDeserializer6, firstPollOffsetStrategySerializableDeserializer7, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test06063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06063");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder17.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getTranslator();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 200L + "'", long22 == 200L);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2000L + "'", long25 == 2000L);
    }

    @Test
    public void test06064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06064");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder5.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder22.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKeyDeserializer();
        int int49 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator50, fields51, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        java.lang.Class<?> wildcardClass55 = kafkaSpoutRetryServiceBuilder54.getClass();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 30000L + "'", long47 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 2147483647 + "'", int49 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass55);
    }

    @Test
    public void test06065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06065");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Iterable<java.lang.String>> strArrayBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Iterable<java.lang.String>>("hi!", strArraySerializableDeserializer4, strIterableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test06066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06066");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test06067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06067");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "", "hi!");
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) strBuilder27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.Subscription subscription41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder28.setProp(strMap45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setSSLKeystore("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(subscription41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
    }

    @Test
    public void test06068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06068");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPartitionRefreshPeriodMs();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator40, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setOffsetCommitPeriodMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes(97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2000L + "'", long37 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test06069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06069");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder55.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder55.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxPartitionFectchBytes((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test06070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06070");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getMaxTupleRetries();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getMaxUncommittedOffsets();
        boolean boolean45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getKeyDeserializer();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getMaxTupleRetries();
        java.lang.String str48 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10000000 + "'", int43 == 10000000);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10000000 + "'", int44 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + false + "'", boolean45 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10000000 + "'", int47 == 10000000);
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "hi!" + "'", str48, "hi!");
    }

    @Test
    public void test06071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06071");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 2147483647 + "'", int14 == 2147483647);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test06072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06072");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
    }

    @Test
    public void test06073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06073");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKeyDeserializer();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getKeyDeserializer();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs((long) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 30000L + "'", long46 == 30000L);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2147483647 + "'", int47 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test06074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06074");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test06075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06075");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test06076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06076");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getMaxUncommittedOffsets();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getOffsetsCommitPeriodMs();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription47 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, subscription47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder24.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 10000000 + "'", int43 == 10000000);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test06077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06077");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        long long48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder35.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder21.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 200L + "'", long48 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
    }

    @Test
    public void test06078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06078");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
    }

    @Test
    public void test06079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06079");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder77.build();
        org.apache.storm.kafka.spout.Subscription subscription79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getSubscription();
        java.lang.String str80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(subscription79);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
    }

    @Test
    public void test06080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06080");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setSSLKeystore("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 200L + "'", long46 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertNull(charSequenceDeserializer50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
    }

    @Test
    public void test06081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06081");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 30000L + "'", long23 == 30000L);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
    }

    @Test
    public void test06082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06082");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer41 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKeyDeserializer();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKeyDeserializer();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getOffsetsCommitPeriodMs();
        int int45 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getRetryService();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder10.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 30000L + "'", long42 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 2147483647 + "'", int45 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 2000L + "'", long47 == 2000L);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test06083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06083");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.toString();
        boolean boolean41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer43 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        boolean boolean44 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder4.setFetchMinBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        java.util.Properties properties52 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setProp(properties52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + false + "'", boolean41 == false);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 2000L + "'", long42 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer43);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + false + "'", boolean44 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test06084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06084");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.Class<?> wildcardClass24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNull(str23);
        org.junit.Assert.assertNotNull(wildcardClass24);
    }

    @Test
    public void test06085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06085");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc54 = null;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKeyDeserializer();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer65 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getValueDeserializer();
        long long66 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder46.setProp(strMap67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setPartitionRefreshPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 30000L + "'", long38 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 30000L + "'", long63 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNull(charSequenceDeserializer65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 2000L + "'", long66 == 2000L);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test06086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06086");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
    }

    @Test
    public void test06087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06087");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
    }

    @Test
    public void test06088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06088");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription47 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getSubscription();
        int int48 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setMaxPartitionFectchBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2147483647 + "'", int48 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test06089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06089");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxPollRecords((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test06090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06090");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder10.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setMaxUncommittedOffsets(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test06091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06091");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPollTimeoutMs();
        boolean boolean51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder60.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder69.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder69.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer83 = null;
        java.util.regex.Pattern pattern84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer82, charSequenceSerializableDeserializer83, pattern84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder89.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig92 = kafkaSpoutRetryServiceBuilder91.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer93 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator95 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator95);
        org.apache.storm.tuple.Fields fields97 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator95, fields97, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + false + "'", boolean51 == false);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig92);
        org.junit.Assert.assertNull(charSequenceDeserializer93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test06092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06092");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strComparableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", strComparableSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, pattern3);
    }

    @Test
    public void test06093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06093");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder13.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs(10L);
        java.lang.Class<?> wildcardClass26 = kafkaSpoutRetryServiceBuilder13.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
    }

    @Test
    public void test06094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06094");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getPollTimeoutMs();
        boolean boolean50 = kafkaSpoutRetryServiceKafkaSpoutConfig47.isConsumerAutoCommitMode();
        java.lang.String str51 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setProp(strMap53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder6.setProp(strMap53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs(2000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs(10L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 200L + "'", long49 == 200L);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + false + "'", boolean50 == false);
        org.junit.Assert.assertNull(str51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test06095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06095");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
    }

    @Test
    public void test06096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06096");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc37 = null;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc37, fields38, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getPollTimeoutMs();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer46 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getValueDeserializer();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder29.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder29.setPollTimeoutMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setPartitionRefreshPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 200L + "'", long43 == 200L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNull(charSequenceDeserializer46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10000000 + "'", int47 == 10000000);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(subscription70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test06097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06097");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator24);
    }

    @Test
    public void test06098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06098");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
    }

    @Test
    public void test06099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06099");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder25.build();
        java.lang.Class<?> wildcardClass27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test06100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06100");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator29, fields30, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder41.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        long long66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getPollTimeoutMs();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getPollTimeoutMs();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getOffsetsCommitPeriodMs();
        java.lang.String str69 = kafkaSpoutRetryServiceKafkaSpoutConfig64.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder50.setProp(strMap70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder50.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder50.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, charSequenceSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc83 = null;
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder82.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc83, fields84, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder82.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getTranslator();
        long long89 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getRetryService();
        int int91 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getMaxUncommittedOffsets();
        long long92 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService93 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder75.setRetry(kafkaSpoutRetryService93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder95.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig98 = kafkaSpoutRetryServiceBuilder97.build();
        java.lang.String str99 = kafkaSpoutRetryServiceKafkaSpoutConfig98.toString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 200L + "'", long66 == 200L);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 30000L + "'", long68 == 30000L);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 200L + "'", long89 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertTrue("'" + int91 + "' != '" + 10000000 + "'", int91 == 10000000);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 30000L + "'", long92 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig98);
    }

    @Test
    public void test06101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06101");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKeyDeserializer();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKeyDeserializer();
        int int79 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getMaxTupleRetries();
        java.lang.String str80 = kafkaSpoutRetryServiceKafkaSpoutConfig73.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder82.setMaxPollRecords((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 200L + "'", long75 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 30000L + "'", long77 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2147483647 + "'", int79 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test06102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06102");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06103");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test06104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06104");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06105");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setMaxUncommittedOffsets((int) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test06106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06106");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test06107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06107");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test06108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06108");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc37 = null;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc37, fields38, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields43);
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getTranslator();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 200L + "'", long51 == 200L);
        org.junit.Assert.assertNotNull(subscription52);
    }

    @Test
    public void test06109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06109");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06110");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig15 = kafkaSpoutRetryServiceBuilder14.build();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig15.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig15.getPartitionRefreshPeriodMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig15.getPartitionRefreshPeriodMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig15.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
    }

    @Test
    public void test06111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06111");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
    }

    @Test
    public void test06112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06112");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2000L + "'", long21 == 2000L);
    }

    @Test
    public void test06113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06113");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.util.regex.Pattern pattern11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, pattern11);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        boolean boolean42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder7.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc54 = null;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder7.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKafkaProps();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription70);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + false + "'", boolean42 == false);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNull(charSequenceDeserializer62);
        org.junit.Assert.assertNull(charSequenceDeserializer63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 30000L + "'", long69 == 30000L);
        org.junit.Assert.assertNotNull(subscription70);
    }

    @Test
    public void test06114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06114");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer18 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer17, randomAccessSerializableDeserializer18, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer14, randomAccessSerializableDeserializer15, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer9, serializableSerializableDeserializer10, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test06115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06115");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
    }

    @Test
    public void test06116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06116");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 30000L + "'", long23 == 30000L);
    }

    @Test
    public void test06117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06117");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getValueDeserializer();
        boolean boolean46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.isConsumerAutoCommitMode();
        java.lang.String str47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder17.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(str44);
        org.junit.Assert.assertNull(charSequenceDeserializer45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + false + "'", boolean46 == false);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
    }

    @Test
    public void test06118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06118");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder39.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getOffsetsCommitPeriodMs();
        java.lang.String str70 = kafkaSpoutRetryServiceKafkaSpoutConfig65.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        int int72 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig65.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75);
        java.util.Properties properties77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder53.setProp(properties77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 30000L + "'", long69 == 30000L);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10000000 + "'", int72 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test06119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06119");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder31.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder44.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setSSLKeystore("", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test06120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06120");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
    }

    @Test
    public void test06121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06121");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        long long45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        int int47 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 200L + "'", long45 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 2147483647 + "'", int47 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test06122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06122");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06123");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKeyDeserializer();
        int int39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getSubscription();
        java.lang.String str75 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78);
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setMaxUncommittedOffsets(10000000);
        java.util.Properties properties84 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setProp(properties84);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 200L + "'", long37 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2147483647 + "'", int39 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription74);
        org.junit.Assert.assertNull(str75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test06124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06124");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder6.setRetry(kafkaSpoutRetryService21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder6.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getSubscription();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        int int71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKafkaProps();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder53.setFirstPollOffsetStrategy(firstPollOffsetStrategy74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 200L + "'", long37 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 2147483647 + "'", int71 == 2147483647);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
    }

    @Test
    public void test06125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06125");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder13.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
    }

    @Test
    public void test06126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06126");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer7 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!", "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type> firstPollOffsetStrategyBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type>("hi!", firstPollOffsetStrategySerializableDeserializer6, typeSerializableDeserializer7, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test06127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06127");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "hi!");
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        long long71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        int int73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxTupleRetries();
        int int74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxTupleRetries();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy76);
        java.util.Properties properties78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setProp(properties78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 200L + "'", long71 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 2147483647 + "'", int73 == 2147483647);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 2147483647 + "'", int74 == 2147483647);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test06128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06128");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder64.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder75.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder75.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder54.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test06129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06129");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder53.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder39.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxUncommittedOffsets((int) (short) 0);
        java.util.Properties properties78 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setProp(properties78);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test06130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06130");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.Object> genericDeclarationBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.Object>("", genericDeclarationSerializableDeserializer1, objSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test06131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06131");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>> strComparableBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strComparableSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 30000L + "'", long23 == 30000L);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test06132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06132");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test06133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06133");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder50.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator69, fields70, "hi!");
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator69, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setPartitionRefreshPeriodMs((long) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test06134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06134");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNull(str18);
    }

    @Test
    public void test06135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06135");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        java.lang.String str34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder43.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(str34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test06136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06136");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
    }

    @Test
    public void test06137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06137");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder13.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxRetries((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test06138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06138");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10000000 + "'", int23 == 10000000);
    }

    @Test
    public void test06139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06139");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer6, strSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test06140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06140");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
    }

    @Test
    public void test06141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06141");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test06142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06142");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getSubscription();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder48.setProp(strMap70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder43.setProp(strMap70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.Subscription subscription74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getSubscription();
        java.lang.String str75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(subscription74);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer77);
    }

    @Test
    public void test06143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06143");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        java.util.Properties properties41 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setProp(properties41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test06144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06144");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setOffsetCommitPeriodMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test06145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06145");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc28 = null;
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc28, fields29, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder27.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder27.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test06146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06146");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.ArrayList<java.lang.String>> charSequenceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.ArrayList<java.lang.String>>("hi!", charSequenceSerializableDeserializer4, strListSerializableDeserializer5, subscription21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> objBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("", objSerializableDeserializer1, kafkaSpoutRetryServiceBuilderSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test06147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06147");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setPartitionRefreshPeriodMs(200L);
        java.util.Properties properties29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setProp(properties29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test06148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06148");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer15, firstPollOffsetStrategySerializableDeserializer16, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.util.ArrayList<java.lang.String>> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.util.ArrayList<java.lang.String>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, strListSerializableDeserializer11, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>> strIterableBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Iterable<java.lang.String>>("hi!", strIterableSerializableDeserializer4, strIterableSerializableDeserializer5, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.ArrayList<java.lang.String>> annotatedElementBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.ArrayList<java.lang.String>>("hi!", annotatedElementSerializableDeserializer1, strListSerializableDeserializer2, strArray21);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test06149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06149");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer9 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess>("hi!", strSerializableDeserializer8, randomAccessSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> genericDeclarationBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", genericDeclarationSerializableDeserializer5, kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.Iterable<java.lang.String>>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, strIterableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        java.lang.Class<?> wildcardClass23 = kafkaSpoutRetryServiceBuilder22.getClass();
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test06150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06150");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test06151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06151");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
    }

    @Test
    public void test06152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06152");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder29.setPollTimeoutMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test06153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06153");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> serializableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>>("hi!", serializableSerializableDeserializer1, kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer2, pattern3);
    }

    @Test
    public void test06154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06154");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.CharSequence> kafkaSpoutRetryServiceBuilderBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type> strIterableBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type>("", strIterableSerializableDeserializer1, typeSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06155");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 2000L + "'", long13 == 2000L);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06156");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.AbstractList<java.lang.String>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.AbstractList<java.lang.String>>("hi!", strListSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test06157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06157");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String> strListBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.String>("hi!", strListSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06158");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test06159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06159");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test06160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06160");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setGroupId("");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test06161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06161");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractList<java.lang.String>> strComparableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractList<java.lang.String>>("hi!", strComparableSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test06162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06162");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPollTimeoutMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("", "", "hi!");
        java.lang.Class<?> wildcardClass47 = kafkaSpoutRetryServiceBuilder40.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test06163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06163");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06164");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
    }

    @Test
    public void test06165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06165");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        int int57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder39.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getRetryService();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder60.setProp(strMap80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 200L + "'", long55 == 200L);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 2147483647 + "'", int57 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 2000L + "'", long79 == 2000L);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
    }

    @Test
    public void test06166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06166");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes((int) (byte) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
    }

    @Test
    public void test06167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06167");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.lang.String[] strArray57 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder58.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator75, fields77, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder50.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test06168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06168");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 2000L + "'", long22 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator23);
    }

    @Test
    public void test06169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06169");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
    }

    @Test
    public void test06170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06170");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getValueDeserializer();
        java.lang.String str38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNull(charSequenceDeserializer36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test06171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06171");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test06172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06172");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.Object obj26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setProp("", obj26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test06173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06173");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer10, strCollectionSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String[]> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String[]>("hi!", strSerializableDeserializer7, strArraySerializableDeserializer8, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.CharSequence> kafkaSpoutRetryServiceBuilderBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.CharSequence>("", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
    }

    @Test
    public void test06174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06174");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer16, randomAccessSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer13, randomAccessSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable> randomAccessBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.io.Serializable>("hi!", randomAccessSerializableDeserializer8, serializableSerializableDeserializer9, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test06175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06175");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy29);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder11.setProp("hi!", (java.lang.Object) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder51.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder51.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder51.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder51.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder41.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test06176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06176");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
    }

    @Test
    public void test06177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06177");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
    }

    @Test
    public void test06178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06178");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "" + "'", str24, "");
    }

    @Test
    public void test06179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06179");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
    }

    @Test
    public void test06180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06180");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig40 = kafkaSpoutRetryServiceBuilder35.build();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getValueDeserializer();
        boolean boolean43 = kafkaSpoutRetryServiceKafkaSpoutConfig40.isConsumerAutoCommitMode();
        java.lang.String str44 = kafkaSpoutRetryServiceKafkaSpoutConfig40.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig40.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig40);
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + false + "'", boolean43 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
    }

    @Test
    public void test06181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06181");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes((int) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
    }

    @Test
    public void test06182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06182");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test06183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06183");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test06184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06184");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields79);
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder83.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        java.lang.String str86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertEquals("'" + str86 + "' != '" + "hi!" + "'", str86, "hi!");
    }

    @Test
    public void test06185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06185");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setFetchMinBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder83.build();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
    }

    @Test
    public void test06186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06186");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setRetry(kafkaSpoutRetryService50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder18.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder18.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setOffsetCommitPeriodMs((long) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
    }

    @Test
    public void test06187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06187");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
    }

    @Test
    public void test06188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06188");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test06189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06189");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder8.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder8.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test06190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06190");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder47.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setSSLKeystore("hi!", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test06191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06191");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
    }

    @Test
    public void test06192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06192");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, (java.util.Collection<java.lang.String>) strList43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder46.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder36.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
    }

    @Test
    public void test06193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06193");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getTranslator();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getMaxUncommittedOffsets();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getOffsetsCommitPeriodMs();
        java.lang.String str42 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder25.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxPollRecords((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 10000000 + "'", int40 == 10000000);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 30000L + "'", long41 == 30000L);
        org.junit.Assert.assertNull(str42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test06194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06194");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test06195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06195");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test06196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06196");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.lang.String[] strArray3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.AbstractCollection<java.lang.String>> genericDeclarationBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.AbstractCollection<java.lang.String>>("", genericDeclarationSerializableDeserializer1, strCollectionSerializableDeserializer2, strArray3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06197");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getSubscription();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        java.lang.String str41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.Subscription subscription58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        boolean boolean62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService63 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator64, fields65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder43.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 200L + "'", long35 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 2147483647 + "'", int38 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + false + "'", boolean62 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test06198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06198");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder21.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder86.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder86.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test06199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06199");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test06200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06200");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        int int40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder14.setProp("", (java.lang.Object) firstPollOffsetStrategy45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 200L + "'", long43 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test06201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06201");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getConsumerGroupId();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.toString();
        org.apache.storm.kafka.spout.Subscription subscription13 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getSubscription();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getValueDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxUncommittedOffsets();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getKafkaProps();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 30000L + "'", long14 == 30000L);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test06202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06202");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer11, randomAccessSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer8, randomAccessSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.List<java.lang.String>> serializableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.List<java.lang.String>>("hi!", serializableSerializableDeserializer2, strListSerializableDeserializer3, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test06203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06203");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder20.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder20.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig64 = kafkaSpoutRetryServiceBuilder59.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getTranslator();
        long long66 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getRetryService();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = kafkaSpoutRetryServiceKafkaSpoutConfig64.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder52.setRetry(kafkaSpoutRetryService69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder52.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc82 = null;
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc82, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setRetry(kafkaSpoutRetryService86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder87.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig90 = kafkaSpoutRetryServiceBuilder89.build();
        long long91 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService92 = kafkaSpoutRetryServiceKafkaSpoutConfig90.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder52.setRetry(kafkaSpoutRetryService92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder20.setRetry(kafkaSpoutRetryService92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 200L + "'", long66 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 2147483647 + "'", int68 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 2000L + "'", long91 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test06204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06204");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        boolean boolean32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder12.setProp("", (java.lang.Object) strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
    }

    @Test
    public void test06205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06205");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxRetries(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getRetryService();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxUncommittedOffsets();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertNull(charSequenceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(charSequenceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
    }

    @Test
    public void test06206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06206");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig10 = kafkaSpoutRetryServiceBuilder9.build();
        java.lang.String str11 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getConsumerGroupId();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxTupleRetries();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig10.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig10);
        org.junit.Assert.assertNull(str11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertNull(str13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
    }

    @Test
    public void test06207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06207");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder22.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test06208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06208");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.Subscription subscription32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getRetryService();
        boolean boolean36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setOffsetCommitPeriodMs(30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + false + "'", boolean36 == false);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test06209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06209");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement> strListBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement>("hi!", strListSerializableDeserializer13, annotatedElementSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.AnnotatedElement> firstPollOffsetStrategyEnumBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.reflect.AnnotatedElement>("hi!", firstPollOffsetStrategyEnumSerializableDeserializer10, annotatedElementSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strListBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer7, strMapSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test06210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06210");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService25);
        java.lang.Class<?> wildcardClass28 = kafkaSpoutRetryServiceBuilder4.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test06211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06211");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        int int34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getSubscription();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPartitionRefreshPeriodMs();
        int int39 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2000L + "'", long38 == 2000L);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 2147483647 + "'", int39 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test06212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06212");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
    }

    @Test
    public void test06213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06213");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getRetryService();
        java.lang.String str55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.toString();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPartitionRefreshPeriodMs();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder41.setProp(strMap59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder15.setProp(strMap59);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer76 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKeyDeserializer();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer78 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getKeyDeserializer();
        long long79 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getOffsetsCommitPeriodMs();
        int int80 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getRetryService();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getPartitionRefreshPeriodMs();
        boolean boolean83 = kafkaSpoutRetryServiceKafkaSpoutConfig73.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder85.setSSLKeystore("hi!", "hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 2000L + "'", long57 == 2000L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10000000 + "'", int58 == 10000000);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 200L + "'", long75 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer76);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 30000L + "'", long77 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 30000L + "'", long79 == 30000L);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 2147483647 + "'", int80 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 2000L + "'", long82 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + false + "'", boolean83 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
    }

    @Test
    public void test06214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06214");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder21.setProp(strMap39);
        java.lang.Class<?> wildcardClass41 = strMap39.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
    }

    @Test
    public void test06215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06215");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer14 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer13, strArraySerializableDeserializer14, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer4, strCollectionSerializableDeserializer5, strArray18);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Cloneable> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.lang.Cloneable>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, cloneableSerializableDeserializer2, strArray18);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test06216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06216");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder58.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder66.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83);
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder51.setFetchMinBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder41.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder88.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder88.setPartitionRefreshPeriodMs((long) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test06217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06217");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPartitionRefreshPeriodMs();
        int int33 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator34, fields35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder50.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder67);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc78 = null;
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc78, fields79, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig82 = kafkaSpoutRetryServiceBuilder77.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService83 = kafkaSpoutRetryServiceKafkaSpoutConfig82.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder68.setRetry(kafkaSpoutRetryService83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setMaxPollRecords((int) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2000L + "'", long32 == 2000L);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 2147483647 + "'", int33 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test06218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06218");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, charSequenceSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator68);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc70 = null;
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc70, fields71, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder69.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getKeyDeserializer();
        int int78 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getMaxTupleRetries();
        boolean boolean79 = kafkaSpoutRetryServiceKafkaSpoutConfig74.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer80 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getKeyDeserializer();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService83 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService84 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder62.setRetry(kafkaSpoutRetryService84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator75);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 200L + "'", long76 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 2147483647 + "'", int78 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + false + "'", boolean79 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 2000L + "'", long81 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test06219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06219");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder36.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder45.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getKeyDeserializer();
        int int72 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields74, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields78);
        java.util.Properties properties80 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder79.setProp(properties80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 200L + "'", long68 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 30000L + "'", long70 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483647 + "'", int72 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test06220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06220");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs((long) 52);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder23.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        long long48 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer49 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getKeyDeserializer();
        int int50 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder59.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getSubscription();
        java.lang.String str86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields89);
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator88, fields91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 200L + "'", long48 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 2147483647 + "'", int50 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 200L + "'", long82 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription85);
        org.junit.Assert.assertNull(str86);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test06221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06221");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
    }

    @Test
    public void test06222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06222");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.lang.Cloneable> kafkaSpoutRetryServiceConsumerRecordFuncBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.lang.Cloneable>("hi!", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer4, cloneableSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray12);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test06223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06223");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        boolean boolean17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + false + "'", boolean17 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
    }

    @Test
    public void test06224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06224");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig15 = kafkaSpoutRetryServiceBuilder14.build();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig15.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.Iterable<java.lang.String>> strCollectionBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.Iterable<java.lang.String>>("", strCollectionSerializableDeserializer1, strIterableSerializableDeserializer2, subscription16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig15);
        org.junit.Assert.assertNotNull(subscription16);
    }

    @Test
    public void test06225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06225");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator41, fields42, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getOffsetsCommitPeriodMs();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.toString();
        java.lang.String str67 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getConsumerGroupId();
        boolean boolean68 = kafkaSpoutRetryServiceKafkaSpoutConfig61.isConsumerAutoCommitMode();
        java.lang.String str69 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder49.setRetry(kafkaSpoutRetryService70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder71.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 30000L + "'", long65 == 30000L);
        org.junit.Assert.assertNull(str67);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + false + "'", boolean68 == false);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNull(charSequenceDeserializer73);
        org.junit.Assert.assertNotNull(subscription74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06226");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 200L + "'", long46 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertNull(charSequenceDeserializer50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test06227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06227");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getOffsetsCommitPeriodMs();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        java.lang.String str33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2000L + "'", long29 == 2000L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 10000000 + "'", int32 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
    }

    @Test
    public void test06228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06228");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
    }

    @Test
    public void test06229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06229");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc42 = null;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc42, fields43, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig46 = kafkaSpoutRetryServiceBuilder41.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig46.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48, "hi!");
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder10.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06230");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test06231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06231");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc18, fields19, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields37, "hi!");
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator36, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder45.setFetchMinBytes((int) (short) 10);
        java.util.Properties properties51 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setProp(properties51);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test06232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06232");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
    }

    @Test
    public void test06233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06233");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        int int79 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 200L + "'", long75 == 200L);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNull(charSequenceDeserializer77);
        org.junit.Assert.assertNotNull(subscription78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 2147483647 + "'", int79 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test06234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06234");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06235");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test06236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06236");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
    }

    @Test
    public void test06237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06237");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator29, fields30, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder9.setFetchMinBytes((int) '4');
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test06238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06238");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test06239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06239");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
    }

    @Test
    public void test06240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06240");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder37.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setPollTimeoutMs(2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
    }

    @Test
    public void test06241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06241");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        boolean boolean34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder19.setProp(strMap35);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        java.lang.String str49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder6.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder19);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder58.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder64.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder67.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder52.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxUncommittedOffsets(10000000);
        java.lang.Class<?> wildcardClass79 = kafkaSpoutRetryServiceBuilder78.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + false + "'", boolean34 == false);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNull(str49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test06242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06242");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer12, strArraySerializableDeserializer13, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Comparable<java.lang.String>> strIterableBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Comparable<java.lang.String>>("hi!", strIterableSerializableDeserializer4, strComparableSerializableDeserializer5, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]> charSequenceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]>("", charSequenceSerializableDeserializer1, strArraySerializableDeserializer2, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test06243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06243");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setPollTimeoutMs((long) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test06244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06244");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
    }

    @Test
    public void test06245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06245");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc16 = null;
        org.apache.storm.tuple.Fields fields17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc16, fields17, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder26.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test06246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06246");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder52.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder52.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder60.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        long long83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getKeyDeserializer();
        long long85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getOffsetsCommitPeriodMs();
        long long86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription87 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getSubscription();
        int int88 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator89 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields91, "hi!");
        org.apache.storm.tuple.Fields fields94 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 200L + "'", long83 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 30000L + "'", long85 == 30000L);
        org.junit.Assert.assertTrue("'" + long86 + "' != '" + 30000L + "'", long86 == 30000L);
        org.junit.Assert.assertNotNull(subscription87);
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 2147483647 + "'", int88 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
    }

    @Test
    public void test06247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06247");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder60.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder60.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder82.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
    }

    @Test
    public void test06248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06248");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
    }

    @Test
    public void test06249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06249");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        java.util.regex.Pattern pattern4 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, pattern4);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        boolean boolean20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder5.setProp(strMap21);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        java.lang.String str35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxPollRecords((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer54 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>> objBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>>("hi!", objSerializableDeserializer53, strCollectionSerializableDeserializer54, (java.util.Collection<java.lang.String>) strList57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, (java.util.Collection<java.lang.String>) strList57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Cloneable> firstPollOffsetStrategyBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Cloneable>("hi!", firstPollOffsetStrategySerializableDeserializer47, cloneableSerializableDeserializer48, (java.util.Collection<java.lang.String>) strList57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder43.setProp("", (java.lang.Object) strList57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + false + "'", boolean20 == false);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNull(str35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test06250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06250");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc50 = null;
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc50, fields51, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder49.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getTranslator();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKeyDeserializer();
        boolean boolean61 = kafkaSpoutRetryServiceKafkaSpoutConfig54.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer62 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getKeyDeserializer();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder70.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder70.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder70.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer83 = null;
        java.util.regex.Pattern pattern84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer82, charSequenceSerializableDeserializer83, pattern84);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator86);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc88 = null;
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder87.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc88, fields89, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig92 = kafkaSpoutRetryServiceBuilder87.build();
        org.apache.storm.kafka.spout.Subscription subscription93 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getSubscription();
        long long94 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer95 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getValueDeserializer();
        int int96 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = kafkaSpoutRetryServiceKafkaSpoutConfig92.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder80.setProp(strMap97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder24.setProp(strMap97);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator38);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 2147483647 + "'", int58 == 2147483647);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer60);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + false + "'", boolean61 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 30000L + "'", long63 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig92);
        org.junit.Assert.assertNotNull(subscription93);
        org.junit.Assert.assertTrue("'" + long94 + "' != '" + 2000L + "'", long94 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer95);
        org.junit.Assert.assertTrue("'" + int96 + "' != '" + 2147483647 + "'", int96 == 2147483647);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test06251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06251");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test06252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06252");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray4);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getTranslator();
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields49, "");
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator48, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder5.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig74 = kafkaSpoutRetryServiceBuilder5.build();
        long long75 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getOffsetsCommitPeriodMs();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig74.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig74);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 30000L + "'", long75 == 30000L);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 2000L + "'", long76 == 2000L);
    }

    @Test
    public void test06253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06253");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder7.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder7.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder45.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getTranslator();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getRetryService();
        int int54 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKafkaProps();
        int int56 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer57 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder37.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.apache.storm.kafka.spout.Subscription subscription61 = kafkaSpoutRetryServiceKafkaSpoutConfig50.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription61);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 200L + "'", long52 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 2147483647 + "'", int54 == 2147483647);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10000000 + "'", int56 == 10000000);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer57);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(subscription61);
    }

    @Test
    public void test06254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06254");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxUncommittedOffsets((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test06255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06255");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test06256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06256");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 200L + "'", long22 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06257");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder19.build();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test06258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06258");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPartitionRefreshPeriodMs();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getFirstPollOffsetStrategy();
        int int46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + (-1L) + "'", long43 == (-1L));
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10000000 + "'", int44 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 10000000 + "'", int46 == 10000000);
    }

    @Test
    public void test06259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06259");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder41.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
    }

    @Test
    public void test06260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06260");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
    }

    @Test
    public void test06261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06261");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test06262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06262");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder55.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setOffsetCommitPeriodMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        int int75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxUncommittedOffsets();
        long long76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getOffsetsCommitPeriodMs();
        long long77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getOffsetsCommitPeriodMs();
        java.lang.String str78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer79 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator82, fields83, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder85.setPollTimeoutMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 10000000 + "'", int75 == 10000000);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 30000L + "'", long76 == 30000L);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 30000L + "'", long77 == 30000L);
        org.junit.Assert.assertNull(str78);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer79);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
    }

    @Test
    public void test06263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06263");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields79);
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder83.build();
        java.util.Properties properties85 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setProp(properties85);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
    }

    @Test
    public void test06264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06264");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test06265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06265");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test06266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06266");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
    }

    @Test
    public void test06267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06267");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes((int) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
    }

    @Test
    public void test06268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06268");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
    }

    @Test
    public void test06269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06269");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNotNull(subscription16);
    }

    @Test
    public void test06270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06270");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs(30000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPollRecords((int) (short) 100);
        java.lang.Class<?> wildcardClass28 = kafkaSpoutRetryServiceBuilder27.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test06271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06271");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.util.regex.Pattern pattern9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, pattern9);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator11);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc13 = null;
        org.apache.storm.tuple.Fields fields14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc13, fields14, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder32.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder40.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder51.build();
        java.lang.String str55 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = kafkaSpoutRetryServiceKafkaSpoutConfig54.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNull(charSequenceDeserializer22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test06272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06272");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
    }

    @Test
    public void test06273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06273");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription41 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getRetryService();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(subscription41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10000000 + "'", int44 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test06274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06274");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
    }

    @Test
    public void test06275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06275");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNull(str21);
    }

    @Test
    public void test06276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06276");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields60, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder33.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder66.build();
        int int68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxUncommittedOffsets();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder23.setProp(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 200L + "'", long52 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 2000L + "'", long69 == 2000L);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
    }

    @Test
    public void test06277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06277");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder6.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setOffsetCommitPeriodMs((long) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test06278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06278");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06279");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.util.regex.Pattern pattern7 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, pattern7);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer30 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer29, randomAccessSerializableDeserializer30, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer26, randomAccessSerializableDeserializer27, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder23.setProp("", (java.lang.Object) strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray32);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray32);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test06280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06280");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNull(charSequenceDeserializer42);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(strMap44);
    }

    @Test
    public void test06281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06281");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder29.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer39 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getKeyDeserializer();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        int int41 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder19.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder19.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59);
        java.lang.Class<?> wildcardClass61 = kafkaSpoutRetryServiceBuilder60.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 30000L + "'", long38 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 30000L + "'", long40 == 30000L);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 2147483647 + "'", int41 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
    }

    @Test
    public void test06282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06282");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 200L + "'", long20 == 200L);
    }

    @Test
    public void test06283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06283");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc12, fields13, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig16 = kafkaSpoutRetryServiceBuilder11.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getPollTimeoutMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig16.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder4.setProp(strMap20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder4.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getSubscription();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getFirstPollOffsetStrategy();
        java.lang.String str46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getConsumerGroupId();
        boolean boolean47 = kafkaSpoutRetryServiceKafkaSpoutConfig39.isConsumerAutoCommitMode();
        int int48 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxTupleRetries();
        long long49 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator50, fields51);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer55, charSequenceSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator59);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc61 = null;
        org.apache.storm.tuple.Fields fields62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc61, fields62, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig65 = kafkaSpoutRetryServiceBuilder60.build();
        long long66 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long68 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPartitionRefreshPeriodMs();
        boolean boolean69 = kafkaSpoutRetryServiceKafkaSpoutConfig65.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getTranslator();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getPollTimeoutMs();
        int int73 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer74 = kafkaSpoutRetryServiceKafkaSpoutConfig65.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder4.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 200L + "'", long40 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str46);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + false + "'", boolean47 == false);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 2147483647 + "'", int48 == 2147483647);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 2000L + "'", long49 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 200L + "'", long66 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 2000L + "'", long68 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + false + "'", boolean69 == false);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 10000000 + "'", int73 == 10000000);
        org.junit.Assert.assertNull(charSequenceDeserializer74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
    }

    @Test
    public void test06284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06284");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder17.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc36 = null;
        org.apache.storm.tuple.Fields fields37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc36, fields37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder42.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        long long59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        int int61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getKeyDeserializer();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getPartitionRefreshPeriodMs();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator66, fields67, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer72 = null;
        java.util.regex.Pattern pattern73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer71, charSequenceSerializableDeserializer72, pattern73);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator75);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc77 = null;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc77, fields78, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig81 = kafkaSpoutRetryServiceBuilder76.build();
        java.lang.String str82 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer83 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getValueDeserializer();
        boolean boolean84 = kafkaSpoutRetryServiceKafkaSpoutConfig81.isConsumerAutoCommitMode();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig81.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig81.getTranslator();
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder69.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields87);
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator86, fields89, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 200L + "'", long59 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 2147483647 + "'", int61 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 2000L + "'", long64 == 2000L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 30000L + "'", long65 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig81);
        org.junit.Assert.assertNull(str82);
        org.junit.Assert.assertNull(charSequenceDeserializer83);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + false + "'", boolean84 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test06285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06285");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test06286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06286");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setFirstPollOffsetStrategy(firstPollOffsetStrategy57);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder39.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setMaxPollRecords(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test06287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06287");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>> annotatedElementBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.List<java.lang.String>>("hi!", annotatedElementSerializableDeserializer7, strListSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.reflect.GenericDeclaration> strCollectionBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.lang.reflect.GenericDeclaration>("", strCollectionSerializableDeserializer1, genericDeclarationSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test06288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06288");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer17 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer16, strArraySerializableDeserializer17, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer8, strCollectionSerializableDeserializer9, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray21);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.util.AbstractList<java.lang.String>> kafkaSpoutRetryServiceConsumerRecordFuncBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>, java.util.AbstractList<java.lang.String>>("", kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer1, strListSerializableDeserializer2, strArray21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test06289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06289");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        java.lang.String str30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getConsumerGroupId();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getOffsetsCommitPeriodMs();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder17.setRetry(kafkaSpoutRetryService33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNull(str30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 30000L + "'", long31 == 30000L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2000L + "'", long32 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test06290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06290");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test06291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06291");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06292");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder11.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder35.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder55.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig73 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig73.getTranslator();
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields75, "hi!");
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields78, "");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator74, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder83.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test06293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06293");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getSubscription();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder21.setProp(strMap39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder21.setPartitionRefreshPeriodMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
    }

    @Test
    public void test06294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06294");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        boolean boolean24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
        org.junit.Assert.assertNull(firstPollOffsetStrategy25);
    }

    @Test
    public void test06295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06295");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
    }

    @Test
    public void test06296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06296");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "hi!", "");
        java.lang.Class<?> wildcardClass33 = kafkaSpoutRetryServiceBuilder32.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass33);
    }

    @Test
    public void test06297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06297");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        java.lang.String str28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNull(str28);
        org.junit.Assert.assertNull(charSequenceDeserializer29);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
    }

    @Test
    public void test06298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06298");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]> subscriptionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.String[]>("hi!", subscriptionSerializableDeserializer6, strArraySerializableDeserializer7, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.ArrayList<java.lang.String>> cloneableBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.ArrayList<java.lang.String>>("", cloneableSerializableDeserializer1, strListSerializableDeserializer2, strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test06299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06299");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        java.lang.String str64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields66, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder41.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder41.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer74 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer75 = null;
        java.util.regex.Pattern pattern76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer74, charSequenceSerializableDeserializer75, pattern76);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc80 = null;
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder79.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc80, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder79.build();
        java.lang.String str85 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = kafkaSpoutRetryServiceKafkaSpoutConfig84.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder72.setProp(strMap90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertNull(str85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer89);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
    }

    @Test
    public void test06300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06300");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder20.setFetchMinBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
    }

    @Test
    public void test06301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06301");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder12.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder39.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        java.lang.String str76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78, "hi!");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields81);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder84.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder88.setPollTimeoutMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder88.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder92.setMaxPartitionFectchBytes(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNull(str76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test06302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06302");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        boolean boolean54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder37.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "");
        java.util.Properties properties60 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setProp(properties60);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + false + "'", boolean54 == false);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test06303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06303");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder11.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06304");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getSubscription();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxUncommittedOffsets(100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
    }

    @Test
    public void test06305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06305");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test06306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06306");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder17.setFirstPollOffsetStrategy(firstPollOffsetStrategy25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder33.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder42.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer48 = null;
        java.util.regex.Pattern pattern49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer47, charSequenceSerializableDeserializer48, pattern49);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator51);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc53 = null;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc53, fields54, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder52.build();
        java.lang.String str58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields60, "hi!");
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields63, "hi!");
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator59, fields66);
        java.util.Properties properties68 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setProp(properties68);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNull(str58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
    }

    @Test
    public void test06307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06307");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06308");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
    }

    @Test
    public void test06309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06309");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getRetryService();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test06310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06310");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test06311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06311");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test06312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06312");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder29.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields71, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder84.build();
        boolean boolean88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.isConsumerAutoCommitMode();
        java.lang.String str89 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator90 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getTranslator();
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator90, fields91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder8.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNull(charSequenceDeserializer67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + false + "'", boolean88 == false);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder96);
    }

    @Test
    public void test06313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06313");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
    }

    @Test
    public void test06314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06314");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06315");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.util.regex.Pattern pattern13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, pattern13);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator15);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc17 = null;
        org.apache.storm.tuple.Fields fields18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc17, fields18, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder45.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder45.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer61 = null;
        java.util.regex.Pattern pattern62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer60, charSequenceSerializableDeserializer61, pattern62);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator64);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig70 = kafkaSpoutRetryServiceBuilder65.build();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getConsumerGroupId();
        long long72 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getPollTimeoutMs();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig70.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig70.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder54.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer78 = null;
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer77, charSequenceSerializableDeserializer78, pattern79);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator81);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc83 = null;
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder82.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc83, fields84, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder82.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getTranslator();
        long long89 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getRetryService();
        long long91 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getPollTimeoutMs();
        long long92 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator93 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getTranslator();
        org.apache.storm.tuple.Fields fields94 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator93, fields94);
        org.apache.storm.tuple.Fields fields96 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder97 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator93, fields96);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder99 = kafkaSpoutRetryServiceBuilder30.setPartitionRefreshPeriodMs(52L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 30000L + "'", long25 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 30000L + "'", long27 == 30000L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig70);
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 200L + "'", long72 == 200L);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 200L + "'", long89 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 200L + "'", long91 == 200L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 30000L + "'", long92 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder99);
    }

    @Test
    public void test06316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06316");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceBuilderSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> kafkaSpoutRetryServiceBuilderBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", kafkaSpoutRetryServiceBuilderSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, pattern3);
    }

    @Test
    public void test06317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06317");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer60 = null;
        java.util.regex.Pattern pattern61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer59, charSequenceSerializableDeserializer60, pattern61);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator63);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc65 = null;
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc65, fields66, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder64.build();
        long long70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder57.setProp(strMap72);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer75 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer76 = null;
        java.util.regex.Pattern pattern77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer75, charSequenceSerializableDeserializer76, pattern77);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator79);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc81 = null;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder80.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc81, fields82, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig85 = kafkaSpoutRetryServiceBuilder80.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator86 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getTranslator();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        int int89 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService90 = kafkaSpoutRetryServiceKafkaSpoutConfig85.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig94 = kafkaSpoutRetryServiceBuilder91.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer95 = kafkaSpoutRetryServiceKafkaSpoutConfig94.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 200L + "'", long70 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 200L + "'", long87 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + int89 + "' != '" + 2147483647 + "'", int89 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig94);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer95);
    }

    @Test
    public void test06318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06318");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        java.lang.Class<?> wildcardClass22 = kafkaSpoutRetryServiceBuilder17.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test06319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06319");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06320");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setBootstrapServers("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
    }

    @Test
    public void test06321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06321");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(subscription19);
    }

    @Test
    public void test06322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06322");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((-1));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 200L + "'", long43 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
    }

    @Test
    public void test06323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06323");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs(2000L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc30 = null;
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder33.build();
        boolean boolean37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPartitionRefreshPeriodMs();
        java.lang.String str39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator40, fields41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig54 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder53.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setOffsetCommitPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setMaxPartitionFectchBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer64 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer65 = null;
        java.util.regex.Pattern pattern66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer64, charSequenceSerializableDeserializer65, pattern66);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc72 = null;
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc72, fields73, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder71.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder71.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder71.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder82.build();
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder62.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder42.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder42.setPartitionRefreshPeriodMs(1L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + false + "'", boolean37 == false);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 2000L + "'", long38 == 2000L);
        org.junit.Assert.assertNull(str39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
    }

    @Test
    public void test06324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06324");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription21);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2000L + "'", long16 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test06325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06325");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder23.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc37 = null;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc37, fields38, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder36.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = kafkaSpoutRetryServiceKafkaSpoutConfig41.getTranslator();
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields43, "hi!");
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator42, fields46, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test06326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06326");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder10.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        long long29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setSSLKeystore("", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 200L + "'", long29 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test06327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06327");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
    }

    @Test
    public void test06328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06328");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields53, "hi!");
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator52, fields59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder60.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder60.setMaxPartitionFectchBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
    }

    @Test
    public void test06329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06329");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.util.regex.Pattern pattern13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, pattern13);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator15);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc17 = null;
        org.apache.storm.tuple.Fields fields18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc17, fields18, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig21 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getTranslator();
        long long23 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer26 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getKeyDeserializer();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getOffsetsCommitPeriodMs();
        int int28 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig21.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setPartitionRefreshPeriodMs(2000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc46 = null;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc46, fields47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc67 = null;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder66.build();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getValueDeserializer();
        java.lang.String str74 = kafkaSpoutRetryServiceKafkaSpoutConfig71.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder56.setProp(strMap75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder30.setProp(strMap75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 200L + "'", long23 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 30000L + "'", long25 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 30000L + "'", long27 == 30000L);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 2147483647 + "'", int28 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNull(charSequenceDeserializer73);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test06330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06330");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06331");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService19);
    }

    @Test
    public void test06332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06332");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getTranslator();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getPollTimeoutMs();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder17.setProp(strMap39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder10.setProp(strMap39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setMaxUncommittedOffsets((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setMaxRetries((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 200L + "'", long37 == 200L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test06333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06333");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test06334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06334");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
    }

    @Test
    public void test06335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06335");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPartitionRefreshPeriodMs();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.toString();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String[]> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String[]>("", strSerializableDeserializer1, strArraySerializableDeserializer2, subscription24);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test06336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06336");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder24.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder24.setFirstPollOffsetStrategy(firstPollOffsetStrategy32);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService49);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        int int67 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setPartitionRefreshPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder71.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setSSLKeystore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 2147483647 + "'", int67 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
    }

    @Test
    public void test06337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06337");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder37.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder23.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setMaxRetries(52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
    }

    @Test
    public void test06338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06338");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getMaxUncommittedOffsets();
        long long21 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getPollTimeoutMs();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer24 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        java.lang.String str25 = kafkaSpoutRetryServiceKafkaSpoutConfig17.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 200L + "'", long21 == 200L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer24);
    }

    @Test
    public void test06339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06339");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator35, fields36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder45.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder45.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc66 = null;
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc66, fields67, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder65.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields85, "hi!");
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator84, fields88, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService91 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder92 = kafkaSpoutRetryServiceBuilder56.setRetry(kafkaSpoutRetryService91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder37.setRetry(kafkaSpoutRetryService91);
        java.util.Properties properties94 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder37.setProp(properties94);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
    }

    @Test
    public void test06340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06340");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPollTimeoutMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setPartitionRefreshPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
    }

    @Test
    public void test06341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06341");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder39.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder39.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder49.build();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder34.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setPollTimeoutMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxUncommittedOffsets((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test06342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06342");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder13.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 200L + "'", long80 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
    }

    @Test
    public void test06343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06343");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig37 = kafkaSpoutRetryServiceBuilder32.build();
        java.lang.String str38 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getConsumerGroupId();
        long long39 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getOffsetsCommitPeriodMs();
        long long40 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getRetryService();
        long long42 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getPollTimeoutMs();
        long long43 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getPollTimeoutMs();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig37.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder25.setProp(strMap45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder25.setMaxRetries((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLTruststore("", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig37);
        org.junit.Assert.assertNull(str38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 30000L + "'", long39 == 30000L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 2000L + "'", long40 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 200L + "'", long42 == 200L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 200L + "'", long43 == 200L);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test06344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06344");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig50 = kafkaSpoutRetryServiceBuilder15.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig50);
    }

    @Test
    public void test06345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06345");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setFirstPollOffsetStrategy(firstPollOffsetStrategy15);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getRetryService();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder14.setProp(strMap34);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder35.setProp("hi!", (java.lang.Object) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder61.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder55.setProp("hi!", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder55.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer73 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer74 = null;
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer73, charSequenceSerializableDeserializer74, pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator77);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc79 = null;
        org.apache.storm.tuple.Fields fields80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder78.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc79, fields80, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder78.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator85 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        int int86 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getMaxUncommittedOffsets();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getOffsetsCommitPeriodMs();
        java.lang.String str88 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer89 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getValueDeserializer();
        java.lang.String str90 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator91 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator92 = kafkaSpoutRetryServiceKafkaSpoutConfig83.getTranslator();
        org.apache.storm.tuple.Fields fields93 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder94 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator92, fields93);
        java.util.Properties properties95 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder96 = kafkaSpoutRetryServiceBuilder55.setProp(properties95);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 200L + "'", long30 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator85);
        org.junit.Assert.assertTrue("'" + int86 + "' != '" + 10000000 + "'", int86 == 10000000);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 30000L + "'", long87 == 30000L);
        org.junit.Assert.assertNull(str88);
        org.junit.Assert.assertNull(charSequenceDeserializer89);
        org.junit.Assert.assertNull(str90);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator91);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator92);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder94);
    }

    @Test
    public void test06346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06346");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.Subscription subscription12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(subscription12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
    }

    @Test
    public void test06347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06347");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
    }

    @Test
    public void test06348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06348");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 2147483647 + "'", int22 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 10000000 + "'", int24 == 10000000);
    }

    @Test
    public void test06349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06349");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder4.setProp("", (java.lang.Object) firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder30.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 200L + "'", long26 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNull(charSequenceDeserializer32);
    }

    @Test
    public void test06350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06350");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig13 = kafkaSpoutRetryServiceBuilder10.build();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig13.isConsumerAutoCommitMode();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig13.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test06351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06351");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setFetchMinBytes((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder23.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder23.setPollTimeoutMs((long) 'a');
        java.lang.Class<?> wildcardClass70 = kafkaSpoutRetryServiceBuilder23.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
    }

    @Test
    public void test06352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06352");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        long long30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder12.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer33 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription34 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2000L + "'", long30 == 2000L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNull(charSequenceDeserializer33);
        org.junit.Assert.assertNotNull(subscription34);
    }

    @Test
    public void test06353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06353");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06354");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer5, strArraySerializableDeserializer6, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
    }

    @Test
    public void test06355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06355");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        java.util.regex.Pattern pattern8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, pattern8);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc32 = null;
        org.apache.storm.tuple.Fields fields33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc32, fields33, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig36 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getTranslator();
        long long38 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getPollTimeoutMs();
        boolean boolean39 = kafkaSpoutRetryServiceKafkaSpoutConfig36.isConsumerAutoCommitMode();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = kafkaSpoutRetryServiceKafkaSpoutConfig36.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder4.setRetry(kafkaSpoutRetryService41);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer60 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 200L + "'", long38 == 200L);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + false + "'", boolean39 == false);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService58);
        org.junit.Assert.assertNull(charSequenceDeserializer59);
        org.junit.Assert.assertNull(charSequenceDeserializer60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
    }

    @Test
    public void test06356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06356");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test06357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06357");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer25 = null;
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer24, charSequenceSerializableDeserializer25, pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder27.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer55 = null;
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer54, charSequenceSerializableDeserializer55, pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc60, fields61, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder63.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder63.build();
        boolean boolean67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.isConsumerAutoCommitMode();
        java.lang.String str68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + false + "'", boolean67 == false);
        org.junit.Assert.assertNull(str68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
    }

    @Test
    public void test06358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06358");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets((int) (byte) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getRetryService();
        int int34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKafkaProps();
        int int36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxUncommittedOffsets();
        long long37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPartitionRefreshPeriodMs();
        boolean boolean38 = kafkaSpoutRetryServiceKafkaSpoutConfig30.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxRetries((int) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 200L + "'", long32 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 2147483647 + "'", int34 == 2147483647);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10000000 + "'", int36 == 10000000);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 2000L + "'", long37 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + false + "'", boolean38 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test06359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06359");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        java.lang.String str29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder46.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields63);
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator62, fields65);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig78 = kafkaSpoutRetryServiceBuilder73.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator79 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getTranslator();
        long long80 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService81 = kafkaSpoutRetryServiceKafkaSpoutConfig78.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder84.setFetchMinBytes((int) (byte) -1);
        java.lang.Class<?> wildcardClass87 = kafkaSpoutRetryServiceBuilder84.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNull(str29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator79);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 200L + "'", long80 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(wildcardClass87);
    }

    @Test
    public void test06360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06360");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
    }

    @Test
    public void test06361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06361");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy22);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder29.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder37.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setMaxUncommittedOffsets((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder21.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig45);
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 30000L + "'", long47 == 30000L);
    }

    @Test
    public void test06362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06362");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder19.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder48.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder48.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setMaxUncommittedOffsets(1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
    }

    @Test
    public void test06363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06363");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs(30000L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer36, charSequenceSerializableDeserializer37, pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder43.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder43.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder31.setProp("", (java.lang.Object) "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder31.setPartitionRefreshPeriodMs((long) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test06364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06364");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        int int52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483647 + "'", int52 == 2147483647);
    }

    @Test
    public void test06365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06365");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer23);
    }

    @Test
    public void test06366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06366");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setFetchMinBytes((int) 'a');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test06367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06367");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer11, firstPollOffsetStrategySerializableDeserializer12, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess>("hi!", strListSerializableDeserializer8, randomAccessSerializableDeserializer9, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer2, charSequenceSerializableDeserializer3, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
    }

    @Test
    public void test06368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06368");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test06369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06369");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder16.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06370");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator21);
    }

    @Test
    public void test06371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06371");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder4.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test06372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06372");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer31 = null;
        java.util.regex.Pattern pattern32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer30, charSequenceSerializableDeserializer31, pattern32);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder33.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRetry(kafkaSpoutRetryService44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer51 = null;
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer50, charSequenceSerializableDeserializer51, pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc56 = null;
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc56, fields57, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig60 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getTranslator();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getPollTimeoutMs();
        boolean boolean63 = kafkaSpoutRetryServiceKafkaSpoutConfig60.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = kafkaSpoutRetryServiceKafkaSpoutConfig60.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder46.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig87 = kafkaSpoutRetryServiceBuilder66.build();
        long long88 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService89 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getRetryService();
        int int90 = kafkaSpoutRetryServiceKafkaSpoutConfig87.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 200L + "'", long62 == 200L);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + false + "'", boolean63 == false);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 200L + "'", long81 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(subscription84);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 100L + "'", long88 == 100L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService89);
        org.junit.Assert.assertTrue("'" + int90 + "' != '" + 2147483647 + "'", int90 == 2147483647);
    }

    @Test
    public void test06373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06373");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder12.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setMaxUncommittedOffsets(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06374");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder28.build();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getTranslator();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = kafkaSpoutRetryServiceKafkaSpoutConfig33.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder19.setRetry(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2000L + "'", long36 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test06375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06375");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getFirstPollOffsetStrategy();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        boolean boolean22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription25 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.Type> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.Type>("", kafkaSpoutRetryServiceSerializableDeserializer1, typeSerializableDeserializer2, subscription25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + false + "'", boolean22 == false);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(subscription25);
    }

    @Test
    public void test06376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06376");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc27, fields28, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig31 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getTranslator();
        long long33 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getPollTimeoutMs();
        long long35 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getOffsetsCommitPeriodMs();
        java.lang.String str36 = kafkaSpoutRetryServiceKafkaSpoutConfig31.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = kafkaSpoutRetryServiceKafkaSpoutConfig31.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder17.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder17.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder40.setRetry(kafkaSpoutRetryService56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder57.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setMaxRetries((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder62.setPartitionRefreshPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder62.setMaxUncommittedOffsets((int) ' ');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 200L + "'", long33 == 200L);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 30000L + "'", long35 == 30000L);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNull(charSequenceDeserializer54);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
    }

    @Test
    public void test06377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06377");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
    }

    @Test
    public void test06378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06378");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test06379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06379");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer38 = null;
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer37, charSequenceSerializableDeserializer38, pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator41);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc43 = null;
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc43, fields44, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig47 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.storm.kafka.spout.Subscription subscription48 = kafkaSpoutRetryServiceKafkaSpoutConfig47.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, subscription48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs(100L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig47);
        org.junit.Assert.assertNotNull(subscription48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test06380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06380");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        int int23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 2147483647 + "'", int23 == 2147483647);
    }

    @Test
    public void test06381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06381");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.util.regex.Pattern pattern15 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer13, charSequenceSerializableDeserializer14, pattern15);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc19, fields20, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig23 = kafkaSpoutRetryServiceBuilder18.build();
        long long24 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        long long26 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getPartitionRefreshPeriodMs();
        boolean boolean27 = kafkaSpoutRetryServiceKafkaSpoutConfig23.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig23.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder11.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder11.setOffsetCommitPeriodMs(10L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig23);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 200L + "'", long24 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2000L + "'", long26 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + false + "'", boolean27 == false);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
    }

    @Test
    public void test06382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06382");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig19 = kafkaSpoutRetryServiceBuilder18.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig19.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder6.setRetry(kafkaSpoutRetryService21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder6.setMaxPartitionFectchBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("", "", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test06383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06383");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig18 = kafkaSpoutRetryServiceBuilder15.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getTranslator();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig18.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig18);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test06384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06384");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder38.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder31.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder31.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.Subscription subscription68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getSubscription();
        java.lang.String str69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getFirstPollOffsetStrategy();
        java.lang.String str71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        int int72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getMaxTupleRetries();
        java.lang.String str73 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder31.setRetry(kafkaSpoutRetryService74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder31.setPollTimeoutMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(subscription68);
        org.junit.Assert.assertNull(str69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 2147483647 + "'", int72 == 2147483647);
        org.junit.Assert.assertNull(str73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
    }

    @Test
    public void test06385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06385");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder26.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder50.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer59 = null;
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer58, charSequenceSerializableDeserializer59, pattern60);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator62);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc64 = null;
        org.apache.storm.tuple.Fields fields65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder63.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc64, fields65, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig68 = kafkaSpoutRetryServiceBuilder63.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = kafkaSpoutRetryServiceKafkaSpoutConfig68.getTranslator();
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator69, fields70, "hi!");
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator69, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder21.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder21.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig83 = kafkaSpoutRetryServiceBuilder21.build();
        java.lang.String str84 = kafkaSpoutRetryServiceKafkaSpoutConfig83.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig83);
    }

    @Test
    public void test06386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06386");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 2000L + "'", long18 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNull(charSequenceDeserializer21);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
        org.junit.Assert.assertNotNull(strMap23);
    }

    @Test
    public void test06387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06387");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder9.setRetry(kafkaSpoutRetryService14);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder22.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getTranslator();
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator29, fields30, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxUncommittedOffsets((int) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder43.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder43.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRetry(kafkaSpoutRetryService54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder55.build();
        org.apache.storm.kafka.spout.Subscription subscription57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.reflect.AnnotatedElement> strArrayBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.reflect.AnnotatedElement>("hi!", strArraySerializableDeserializer37, annotatedElementSerializableDeserializer38, subscription57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder32.setProp("hi!", (java.lang.Object) strArrayBuilder58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder32.setMaxPollRecords((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test06388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06388");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder13.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer27 = null;
        java.util.regex.Pattern pattern28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer26, charSequenceSerializableDeserializer27, pattern28);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder29.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder38.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        java.lang.String str54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getTranslator();
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields56, "hi!");
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator55, fields59, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = kafkaSpoutRetryServiceBuilder8.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs((long) '#');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNull(str54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
    }

    @Test
    public void test06389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06389");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setMaxUncommittedOffsets(10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
    }

    @Test
    public void test06390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06390");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.Subscription subscription27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getSubscription();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getValueDeserializer();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder14.setProp(strMap31);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, (java.util.Collection<java.lang.String>) strList39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder42.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService45);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer48 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer49 = null;
        java.util.regex.Pattern pattern50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer48, charSequenceSerializableDeserializer49, pattern50);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator52);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc54 = null;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder53.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc54, fields55, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig58 = kafkaSpoutRetryServiceBuilder53.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator59 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getTranslator();
        long long60 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer61 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKeyDeserializer();
        long long62 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer63 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKeyDeserializer();
        int int64 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getMaxTupleRetries();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = kafkaSpoutRetryServiceKafkaSpoutConfig58.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder46.setProp(strMap66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder46.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder46.build();
        boolean boolean73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(subscription27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 2000L + "'", long28 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNull(charSequenceDeserializer44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 200L + "'", long60 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer61);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 30000L + "'", long62 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer63);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 2147483647 + "'", int64 == 2147483647);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + false + "'", boolean73 == false);
    }

    @Test
    public void test06391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06391");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 2147483647 + "'", int17 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
    }

    @Test
    public void test06392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06392");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test06393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06393");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06394");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder29.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        java.lang.String str45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47, "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder54.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder62.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer67 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer68 = null;
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer67, charSequenceSerializableDeserializer68, pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator71);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc73 = null;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc73, fields74, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder72.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator78 = kafkaSpoutRetryServiceKafkaSpoutConfig77.getTranslator();
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields79);
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator78, fields81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig84 = kafkaSpoutRetryServiceBuilder83.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder83.setSecurityProtocol("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNull(str45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test06395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06395");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        org.apache.storm.kafka.spout.Subscription subscription53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getRetryService();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(subscription53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
    }

    @Test
    public void test06396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06396");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder68.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder68.setOffsetCommitPeriodMs(97L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig77 = kafkaSpoutRetryServiceBuilder68.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig77);
    }

    @Test
    public void test06397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06397");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06398");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder22.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder48.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields68, "hi!");
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator67, fields74, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder76.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder76.setPollTimeoutMs((long) (short) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
    }

    @Test
    public void test06399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06399");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getRetryService();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKeyDeserializer();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, subscription23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setFetchMinBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setMaxRetries(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
    }

    @Test
    public void test06400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06400");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc28 = null;
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc28, fields29, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder27.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        long long34 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer36 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer37 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setOffsetCommitPeriodMs(200L);
        java.lang.Class<?> wildcardClass46 = kafkaSpoutRetryServiceBuilder41.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 200L + "'", long34 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNull(charSequenceDeserializer36);
        org.junit.Assert.assertNull(charSequenceDeserializer37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
    }

    @Test
    public void test06401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06401");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
    }

    @Test
    public void test06402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06402");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setPollTimeoutMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test06403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06403");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder23.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
    }

    @Test
    public void test06404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06404");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder18.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder18.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder13.setRetry(kafkaSpoutRetryService29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder45.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer52, charSequenceSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator56);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc58 = null;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc58, fields59, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig62 = kafkaSpoutRetryServiceBuilder57.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator63 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getTranslator();
        long long64 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getPollTimeoutMs();
        boolean boolean65 = kafkaSpoutRetryServiceKafkaSpoutConfig62.isConsumerAutoCommitMode();
        java.lang.String str66 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = kafkaSpoutRetryServiceKafkaSpoutConfig62.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder49.setProp("hi!", (java.lang.Object) kafkaSpoutRetryService67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig69 = kafkaSpoutRetryServiceBuilder68.build();
        int int70 = kafkaSpoutRetryServiceKafkaSpoutConfig69.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 200L + "'", long64 == 200L);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + false + "'", boolean65 == false);
        org.junit.Assert.assertNull(str66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 97 + "'", int70 == 97);
    }

    @Test
    public void test06405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06405");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setFetchMinBytes((int) (short) -1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test06406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06406");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer44 = null;
        java.util.regex.Pattern pattern45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer43, charSequenceSerializableDeserializer44, pattern45);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator47);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc49, fields50, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder48.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getRetryService();
        java.lang.String str55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.toString();
        java.lang.String str56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getConsumerGroupId();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPartitionRefreshPeriodMs();
        int int58 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder41.setProp(strMap59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder15.setProp(strMap59);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer63 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer64 = null;
        java.util.regex.Pattern pattern65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer63, charSequenceSerializableDeserializer64, pattern65);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator67);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc69 = null;
        org.apache.storm.tuple.Fields fields70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc69, fields70, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder72.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder72.build();
        boolean boolean76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.isConsumerAutoCommitMode();
        org.apache.storm.kafka.spout.Subscription subscription77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertNull(str56);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 2000L + "'", long57 == 2000L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 10000000 + "'", int58 == 10000000);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + false + "'", boolean76 == false);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test06407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06407");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder28.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder28.build();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getPollTimeoutMs();
        java.lang.String str37 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder22.setProp("", (java.lang.Object) str37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
    }

    @Test
    public void test06408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06408");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setRetry(kafkaSpoutRetryService11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer16, charSequenceSerializableDeserializer17, pattern18);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator20);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc22 = null;
        org.apache.storm.tuple.Fields fields23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc22, fields23, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig26 = kafkaSpoutRetryServiceBuilder21.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getTranslator();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = kafkaSpoutRetryServiceKafkaSpoutConfig26.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder14.setRetry(kafkaSpoutRetryService31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setMaxRetries(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 2147483647 + "'", int30 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
    }

    @Test
    public void test06409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06409");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        boolean boolean15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2000L + "'", long14 == 2000L);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + false + "'", boolean15 == false);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 200L + "'", long18 == 200L);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10000000 + "'", int19 == 10000000);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
    }

    @Test
    public void test06410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06410");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder13.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getRetryService();
        long long46 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator47 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator47, fields48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder28.setPartitionRefreshPeriodMs((long) (short) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 200L + "'", long44 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 200L + "'", long46 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
    }

    @Test
    public void test06411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06411");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder46.setOffsetCommitPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
    }

    @Test
    public void test06412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06412");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder8.setGroupId("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
    }

    @Test
    public void test06413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06413");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder25.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer40 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer41 = null;
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer40, charSequenceSerializableDeserializer41, pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder43.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder43.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig57 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator58 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getRetryService();
        java.lang.String str60 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getConsumerGroupId();
        long long61 = kafkaSpoutRetryServiceKafkaSpoutConfig57.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder37.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder19.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig57);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "hi!" + "'", str60, "hi!");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 30000L + "'", long61 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
    }

    @Test
    public void test06414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06414");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder16.setFetchMinBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setOffsetCommitPeriodMs((long) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer26 = null;
        java.util.regex.Pattern pattern27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer25, charSequenceSerializableDeserializer26, pattern27);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder28.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc33, fields34, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder32.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder32.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder44.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder50.build();
        long long52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPartitionRefreshPeriodMs();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder20.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder56.setSSLKeystore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 200L + "'", long52 == 200L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 2000L + "'", long53 == 2000L);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test06415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06415");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc55 = null;
        org.apache.storm.tuple.Fields fields56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc55, fields56, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder58.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setOffsetCommitPeriodMs((-1L));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder47.setRetry(kafkaSpoutRetryService64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer70 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer71 = null;
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer70, charSequenceSerializableDeserializer71, pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator74);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc76 = null;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder75.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc76, fields77, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder75.build();
        long long81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService84 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder68.setRetry(kafkaSpoutRetryService84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder88 = kafkaSpoutRetryServiceBuilder68.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder90 = kafkaSpoutRetryServiceBuilder88.setMaxUncommittedOffsets(10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertTrue("'" + long81 + "' != '" + 200L + "'", long81 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator82);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy83 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy83.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder88);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder90);
    }

    @Test
    public void test06416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06416");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 200L + "'", long17 == 200L);
    }

    @Test
    public void test06417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06417");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        boolean boolean24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 2147483647 + "'", int20 == 2147483647);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(str22);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + false + "'", boolean24 == false);
    }

    @Test
    public void test06418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06418");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 2147483647 + "'", int19 == 2147483647);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test06419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06419");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder17.setPollTimeoutMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder17.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder29.setMaxPartitionFectchBytes(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
    }

    @Test
    public void test06420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06420");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer37, randomAccessSerializableDeserializer38, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer34, randomAccessSerializableDeserializer35, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer29, kafkaSpoutRetryServiceSerializableDeserializer30, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer26, genericDeclarationSerializableDeserializer27, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable> strIterableBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable>("hi!", strIterableSerializableDeserializer23, cloneableSerializableDeserializer24, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder20.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder20.setMaxPollRecords(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
    }

    @Test
    public void test06421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06421");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        int int20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 30000L + "'", long15 == 30000L);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10000000 + "'", int18 == 10000000);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 10000000 + "'", int20 == 10000000);
        org.junit.Assert.assertNull(str21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator22);
    }

    @Test
    public void test06422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06422");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer3 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> objBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("hi!", objSerializableDeserializer2, firstPollOffsetStrategyEnumSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<?> wildcardClass13 = strList8.getClass();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test06423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06423");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 30000L + "'", long17 == 30000L);
    }

    @Test
    public void test06424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06424");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder31.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder56.setProp("hi!", (java.lang.Object) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer61 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer62 = null;
        java.util.regex.Pattern pattern63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer61, charSequenceSerializableDeserializer62, pattern63);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder64.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator65);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc67 = null;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder66.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc67, fields68, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig71 = kafkaSpoutRetryServiceBuilder66.build();
        java.lang.String str72 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig71.getTranslator();
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields74, "hi!");
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator73, fields77, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder25.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder25.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder84 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder25.setOffsetCommitPeriodMs((long) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig71);
        org.junit.Assert.assertNull(str72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder84);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test06425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06425");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxUncommittedOffsets(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setMaxUncommittedOffsets(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder31.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder31.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder23.setProp("hi!", (java.lang.Object) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getValueDeserializer();
        long long55 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator56 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.tuple.Fields fields57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator56, fields57, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder67.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder59.setProp("", (java.lang.Object) kafkaSpoutRetryServiceBuilder67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder67.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNull(charSequenceDeserializer54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 30000L + "'", long55 == 30000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
    }

    @Test
    public void test06426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06426");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder10.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig34 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getTranslator();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxUncommittedOffsets();
        int int38 = kafkaSpoutRetryServiceKafkaSpoutConfig34.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 10000000 + "'", int37 == 10000000);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10000000 + "'", int38 == 10000000);
    }

    @Test
    public void test06427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06427");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder13.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder13.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setOffsetCommitPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setMaxUncommittedOffsets(2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
    }

    @Test
    public void test06428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06428");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder11.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc28 = null;
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder27.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc28, fields29, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig32 = kafkaSpoutRetryServiceBuilder27.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getTranslator();
        int int35 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getMaxUncommittedOffsets();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getOffsetsCommitPeriodMs();
        java.lang.String str37 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer38 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKafkaProps();
        java.lang.String str40 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription41 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription42 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getSubscription();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig32.toString();
        int int44 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = kafkaSpoutRetryServiceKafkaSpoutConfig32.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder18.setProp(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10000000 + "'", int35 == 10000000);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 30000L + "'", long36 == 30000L);
        org.junit.Assert.assertNull(str37);
        org.junit.Assert.assertNull(charSequenceDeserializer38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(str40);
        org.junit.Assert.assertNotNull(subscription41);
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 2147483647 + "'", int44 == 2147483647);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
    }

    @Test
    public void test06429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06429");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer19 = null;
        java.util.regex.Pattern pattern20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer18, charSequenceSerializableDeserializer19, pattern20);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator22);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig28 = kafkaSpoutRetryServiceBuilder23.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator29 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getTranslator();
        int int31 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getMaxUncommittedOffsets();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getOffsetsCommitPeriodMs();
        java.lang.String str33 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = kafkaSpoutRetryServiceKafkaSpoutConfig28.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder12.setProp(strMap35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder12.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setPartitionRefreshPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig41 = kafkaSpoutRetryServiceBuilder40.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 10000000 + "'", int31 == 10000000);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 30000L + "'", long32 == 30000L);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNull(charSequenceDeserializer34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig41);
    }

    @Test
    public void test06430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06430");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder13.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder13.setMaxUncommittedOffsets(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder13.setSecurityProtocol("");
        java.util.Properties properties28 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder27.setProp(properties28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
    }

    @Test
    public void test06431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06431");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer28, charSequenceSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator32);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc34 = null;
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc34, fields35, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig38 = kafkaSpoutRetryServiceBuilder33.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = kafkaSpoutRetryServiceKafkaSpoutConfig38.getTranslator();
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields40);
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator39, fields42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder52.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder52.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        long long73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder60.setProp(strMap77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder43.setProp(strMap77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = kafkaSpoutRetryServiceBuilder43.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder43.setMaxRetries(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 200L + "'", long73 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder81);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
    }

    @Test
    public void test06432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06432");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder6.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder12.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer35 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 200L + "'", long32 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
    }

    @Test
    public void test06433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06433");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder59.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder59.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer68 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer69 = null;
        java.util.regex.Pattern pattern70 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer68, charSequenceSerializableDeserializer69, pattern70);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder73 = kafkaSpoutRetryServiceBuilder71.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc74 = null;
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder73.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc74, fields75, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder77.setOffsetCommitPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig80 = kafkaSpoutRetryServiceBuilder77.build();
        boolean boolean81 = kafkaSpoutRetryServiceKafkaSpoutConfig80.isConsumerAutoCommitMode();
        long long82 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator83 = kafkaSpoutRetryServiceKafkaSpoutConfig80.getTranslator();
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder86 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator83, fields84, "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder73);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig80);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + false + "'", boolean81 == false);
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 2000L + "'", long82 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder86);
    }

    @Test
    public void test06434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06434");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        long long12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 200L + "'", long12 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
    }

    @Test
    public void test06435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06435");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.Subscription> serializableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.Subscription>("", serializableSerializableDeserializer1, subscriptionSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06436");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        int int18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer16);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy17 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy17.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 2147483647 + "'", int18 == 2147483647);
        org.junit.Assert.assertNull(charSequenceDeserializer19);
    }

    @Test
    public void test06437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06437");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig17 = kafkaSpoutRetryServiceBuilder14.build();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer19 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = kafkaSpoutRetryServiceKafkaSpoutConfig17.getKafkaProps();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "hi!" + "'", str18, "hi!");
        org.junit.Assert.assertNull(charSequenceDeserializer19);
        org.junit.Assert.assertNotNull(strMap20);
    }

    @Test
    public void test06438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06438");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder14.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder22.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder22.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc29 = null;
        org.apache.storm.tuple.Fields fields30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc29, fields30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder33.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder42.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder33.setRetry(kafkaSpoutRetryService53);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        long long69 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService70 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer71 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator72 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder55.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator72, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder75 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder77 = kafkaSpoutRetryServiceBuilder75.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer81 = null;
        java.util.regex.Pattern pattern82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer80, charSequenceSerializableDeserializer81, pattern82);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder89 = kafkaSpoutRetryServiceBuilder83.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder91 = kafkaSpoutRetryServiceBuilder83.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy92 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder93 = kafkaSpoutRetryServiceBuilder91.setFirstPollOffsetStrategy(firstPollOffsetStrategy92);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService94 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder95 = kafkaSpoutRetryServiceBuilder91.setRetry(kafkaSpoutRetryService94);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig96 = kafkaSpoutRetryServiceBuilder95.build();
        org.apache.storm.kafka.spout.Subscription subscription97 = kafkaSpoutRetryServiceKafkaSpoutConfig96.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder77.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig96);
        java.lang.Class<?> wildcardClass99 = kafkaSpoutRetryServiceKafkaSpoutConfig96.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 200L + "'", long69 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService70);
        org.junit.Assert.assertNull(charSequenceDeserializer71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder89);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder91);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy92 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy92.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder93);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService94);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder95);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig96);
        org.junit.Assert.assertNotNull(subscription97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
        org.junit.Assert.assertNotNull(wildcardClass99);
    }

    @Test
    public void test06439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06439");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder20.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder31.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer35, charSequenceSerializableDeserializer36, pattern37);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder40.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc41, fields42, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig45 = kafkaSpoutRetryServiceBuilder40.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        long long47 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService48 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer49 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKeyDeserializer();
        int int50 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator51 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        java.lang.String str52 = kafkaSpoutRetryServiceKafkaSpoutConfig45.toString();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator53 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = kafkaSpoutRetryServiceKafkaSpoutConfig45.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder31.setProp(strMap54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 200L + "'", long47 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService48);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10000000 + "'", int50 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test06440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06440");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement> kafkaSpoutRetryServiceBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.reflect.AnnotatedElement>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, annotatedElementSerializableDeserializer4, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray7);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray7);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test06441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06441");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer12, charSequenceSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer6, charSequenceSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer3, charSequenceSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", (java.util.Collection<java.lang.String>) strList22);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test06442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06442");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder27.setMaxPartitionFectchBytes((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder45.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.util.regex.Pattern pattern53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer51, charSequenceSerializableDeserializer52, pattern53);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator55);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc57 = null;
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc57, fields58, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig61 = kafkaSpoutRetryServiceBuilder56.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator62 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        long long63 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getRetryService();
        long long65 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = kafkaSpoutRetryServiceKafkaSpoutConfig61.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder48.setProp("", (java.lang.Object) kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder48.setOffsetCommitPeriodMs((long) (short) 100);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 200L + "'", long63 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService64);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 200L + "'", long65 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
    }

    @Test
    public void test06443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06443");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder29.build();
        java.lang.String str31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getConsumerGroupId();
        int int32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxTupleRetries();
        java.lang.String str33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getTranslator();
        org.apache.storm.tuple.Fields fields35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator34, fields35, "");
        java.lang.Class<?> wildcardClass38 = kafkaSpoutRetryServiceRecordTranslator34.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 2147483647 + "'", int32 == 2147483647);
        org.junit.Assert.assertNull(str33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
    }

    @Test
    public void test06444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06444");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("hi!", strArraySerializableDeserializer22, randomAccessSerializableDeserializer23, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess> annotatedElementBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.RandomAccess>("hi!", annotatedElementSerializableDeserializer19, randomAccessSerializableDeserializer20, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService> typeBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", typeSerializableDeserializer14, kafkaSpoutRetryServiceSerializableDeserializer15, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration> objBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.reflect.GenericDeclaration>("hi!", objSerializableDeserializer11, genericDeclarationSerializableDeserializer12, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable> strIterableBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Cloneable>("hi!", strIterableSerializableDeserializer8, cloneableSerializableDeserializer9, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Object> strBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Object>("hi!", strSerializableDeserializer1, objSerializableDeserializer2, strArray25);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test06445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06445");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder20.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig43 = kafkaSpoutRetryServiceBuilder38.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig43.getTranslator();
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer50 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer49, charSequenceSerializableDeserializer50, (java.util.Collection<java.lang.String>) strList54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder57.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.UNIT_TEST_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder57.setRetry(kafkaSpoutRetryService62);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer65 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer66 = null;
        java.util.regex.Pattern pattern67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer65, charSequenceSerializableDeserializer66, pattern67);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator69);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder70.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc71, fields72, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getTranslator();
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder57.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields78, "hi!");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator77, fields81, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder85 = kafkaSpoutRetryServiceBuilder83.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig86 = kafkaSpoutRetryServiceBuilder85.build();
        long long87 = kafkaSpoutRetryServiceKafkaSpoutConfig86.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder85);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig86);
        org.junit.Assert.assertTrue("'" + long87 + "' != '" + 2000L + "'", long87 == 2000L);
    }

    @Test
    public void test06446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06446");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder28.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer34, charSequenceSerializableDeserializer35, pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator38);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc40 = null;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder39.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc40, fields41, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig44 = kafkaSpoutRetryServiceBuilder39.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig44.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47);
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields49, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder53 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
    }

    @Test
    public void test06447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06447");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer11, firstPollOffsetStrategySerializableDeserializer12, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable> subscriptionBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable>("hi!", subscriptionSerializableDeserializer7, cloneableSerializableDeserializer8, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.GenericDeclaration> firstPollOffsetStrategyBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.GenericDeclaration>("hi!", firstPollOffsetStrategySerializableDeserializer4, genericDeclarationSerializableDeserializer5, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.String[]> strMapBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.String[]>("", strMapSerializableDeserializer1, strArraySerializableDeserializer2, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test06448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06448");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(2147483647);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer22 = null;
        java.util.regex.Pattern pattern23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer21, charSequenceSerializableDeserializer22, pattern23);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder24.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder15.setRetry(kafkaSpoutRetryService35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer45 = null;
        java.util.regex.Pattern pattern46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer44, charSequenceSerializableDeserializer45, pattern46);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer54 = null;
        java.util.regex.Pattern pattern55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer53, charSequenceSerializableDeserializer54, pattern55);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder56.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc59 = null;
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder58.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc59, fields60, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig63 = kafkaSpoutRetryServiceBuilder58.build();
        java.lang.String str64 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator65 = kafkaSpoutRetryServiceKafkaSpoutConfig63.getTranslator();
        org.apache.storm.tuple.Fields fields66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator65, fields66, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder69 = kafkaSpoutRetryServiceBuilder41.setProp("", (java.lang.Object) "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder41.setSSLTruststore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder72.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder80 = kafkaSpoutRetryServiceBuilder72.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder80.setMaxPollRecords((int) '4');
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig63);
        org.junit.Assert.assertNull(str64);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder69);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder80);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }

    @Test
    public void test06449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06449");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        int int12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 2147483647 + "'", int12 == 2147483647);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 30000L + "'", long13 == 30000L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 2000L + "'", long15 == 2000L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test06450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06450");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder14.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder14.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
    }

    @Test
    public void test06451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06451");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setPollTimeoutMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder32.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder39.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer46 = null;
        java.util.regex.Pattern pattern47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer45, charSequenceSerializableDeserializer46, pattern47);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder48.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc51 = null;
        org.apache.storm.tuple.Fields fields52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc51, fields52, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig55 = kafkaSpoutRetryServiceBuilder50.build();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService59 = kafkaSpoutRetryServiceKafkaSpoutConfig55.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder41.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder63 = kafkaSpoutRetryServiceBuilder61.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder63);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
    }

    @Test
    public void test06452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06452");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setOffsetCommitPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setOffsetCommitPeriodMs((long) 10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder17.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc24 = null;
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc24, fields25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder31 = kafkaSpoutRetryServiceBuilder28.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer34 = null;
        java.util.regex.Pattern pattern35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer33, charSequenceSerializableDeserializer34, pattern35);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder40 = kafkaSpoutRetryServiceBuilder36.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        java.util.regex.Pattern pattern44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer42, charSequenceSerializableDeserializer43, pattern44);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator46);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder47.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc48, fields49, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig52 = kafkaSpoutRetryServiceBuilder47.build();
        java.lang.String str53 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator54 = kafkaSpoutRetryServiceKafkaSpoutConfig52.getTranslator();
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator54, fields55, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder31.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig59 = kafkaSpoutRetryServiceBuilder31.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = kafkaSpoutRetryServiceKafkaSpoutConfig59.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy9 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy9.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder31);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder40);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig52);
        org.junit.Assert.assertNull(str53);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test06453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06453");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer22, charSequenceSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder25.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder17.setProp("hi!", (java.lang.Object) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder39 = kafkaSpoutRetryServiceBuilder35.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer42 = null;
        java.util.regex.Pattern pattern43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer41, charSequenceSerializableDeserializer42, pattern43);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator45);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc47 = null;
        org.apache.storm.tuple.Fields fields48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder46.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc47, fields48, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig51 = kafkaSpoutRetryServiceBuilder46.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator52 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        long long53 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getRetryService();
        int int55 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getMaxUncommittedOffsets();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig51.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 200L + "'", long53 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10000000 + "'", int55 == 10000000);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 200L + "'", long56 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
    }

    @Test
    public void test06454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06454");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder15.setMaxPartitionFectchBytes(0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
    }

    @Test
    public void test06455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06455");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer14 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>> objBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.Collection<java.lang.String>>("hi!", objSerializableDeserializer13, strCollectionSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Cloneable> firstPollOffsetStrategyBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Cloneable>("hi!", firstPollOffsetStrategySerializableDeserializer7, cloneableSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.reflect.Type> strArrayBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.reflect.Type>("hi!", strArraySerializableDeserializer4, typeSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> subscriptionBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", subscriptionSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
    }

    @Test
    public void test06456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06456");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setMaxPartitionFectchBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setOffsetCommitPeriodMs(0L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06457");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder15.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder15.setSSLKeystore("", "", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder27.setRetry(kafkaSpoutRetryService42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder43.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder45.setPollTimeoutMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
    }

    @Test
    public void test06458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06458");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 200L + "'", long15 == 200L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 30000L + "'", long16 == 30000L);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 2000L + "'", long20 == 2000L);
    }

    @Test
    public void test06459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06459");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder12.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder12.setMaxRetries((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc26 = null;
        org.apache.storm.tuple.Fields fields27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc26, fields27, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig30 = kafkaSpoutRetryServiceBuilder25.build();
        java.lang.String str31 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer32 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getValueDeserializer();
        java.lang.String str33 = kafkaSpoutRetryServiceKafkaSpoutConfig30.toString();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer34 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder12.setProp("", (java.lang.Object) kafkaSpoutRetryServiceKafkaSpoutConfig30);
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getPollTimeoutMs();
        int int37 = kafkaSpoutRetryServiceKafkaSpoutConfig30.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig30);
        org.junit.Assert.assertNull(str31);
        org.junit.Assert.assertNull(charSequenceDeserializer32);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 200L + "'", long36 == 200L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 2147483647 + "'", int37 == 2147483647);
    }

    @Test
    public void test06460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06460");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer18 = null;
        java.util.regex.Pattern pattern19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer17, charSequenceSerializableDeserializer18, pattern19);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder24.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.tuple.Fields fields44 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields44, "hi!");
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder15.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator43, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder15.setSSLTruststore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig53 = kafkaSpoutRetryServiceBuilder15.build();
        long long54 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        java.lang.String str55 = kafkaSpoutRetryServiceKafkaSpoutConfig53.toString();
        long long56 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getOffsetsCommitPeriodMs();
        long long57 = kafkaSpoutRetryServiceKafkaSpoutConfig53.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig53);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 200L + "'", long54 == 200L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 30000L + "'", long56 == 30000L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 200L + "'", long57 == 200L);
    }

    @Test
    public void test06461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06461");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc11 = null;
        org.apache.storm.tuple.Fields fields12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc11, fields12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer21 = null;
        java.util.regex.Pattern pattern22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer20, charSequenceSerializableDeserializer21, pattern22);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder23.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder15.setProp("hi!", (java.lang.Object) kafkaSpoutRetryServiceBuilder27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder15.setOffsetCommitPeriodMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder15.setPartitionRefreshPeriodMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig33 = kafkaSpoutRetryServiceBuilder32.build();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig33);
    }

    @Test
    public void test06462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06462");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder23.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder25.setMaxPollRecords((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer30 = null;
        java.util.regex.Pattern pattern31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer29, charSequenceSerializableDeserializer30, pattern31);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator33);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc35 = null;
        org.apache.storm.tuple.Fields fields36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc35, fields36, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig39 = kafkaSpoutRetryServiceBuilder34.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator40 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        long long41 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer42 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getKeyDeserializer();
        int int43 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getMaxTupleRetries();
        long long44 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription45 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator46 = kafkaSpoutRetryServiceKafkaSpoutConfig39.getTranslator();
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = kafkaSpoutRetryServiceBuilder25.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator46, fields47, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder25.setSSLTruststore("hi!", "");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig39);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 200L + "'", long41 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 2147483647 + "'", int43 == 2147483647);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 30000L + "'", long44 == 30000L);
        org.junit.Assert.assertNotNull(subscription45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
    }

    @Test
    public void test06463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06463");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray10);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, strArray10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test06464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06464");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNull(str14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test06465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06465");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
    }

    @Test
    public void test06466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06466");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer24 = null;
        java.util.regex.Pattern pattern25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer23, charSequenceSerializableDeserializer24, pattern25);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator27 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder26.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder26.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc31 = null;
        org.apache.storm.tuple.Fields fields32 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc31, fields32, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder30.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc44 = null;
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder43.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc44, fields45, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder43.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getTranslator();
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields50, "hi!");
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator49, fields53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder57 = kafkaSpoutRetryServiceBuilder4.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = kafkaSpoutRetryServiceBuilder4.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator49);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder59);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
    }

    @Test
    public void test06467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06467");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder6.setSSLKeystore("hi!", "", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder6.setPartitionRefreshPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder16.setProp("", (java.lang.Object) 10.0d);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder16.setMaxPollRecords((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder16.setOffsetCommitPeriodMs((-1L));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
    }

    @Test
    public void test06468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06468");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getOffsetsCommitPeriodMs();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNull(charSequenceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 200L + "'", long19 == 200L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 30000L + "'", long20 == 30000L);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService23);
    }

    @Test
    public void test06469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06469");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        boolean boolean14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + false + "'", boolean14 == false);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
    }

    @Test
    public void test06470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06470");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer12, strArraySerializableDeserializer13, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>> kafkaSpoutRetryServiceRecordTranslatorBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.Collection<java.lang.String>>("hi!", kafkaSpoutRetryServiceRecordTranslatorSerializableDeserializer4, strCollectionSerializableDeserializer5, strArray17);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, strArray17);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test06471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06471");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer7, strCollectionSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Cloneable> strListBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Cloneable>("hi!", strListSerializableDeserializer1, cloneableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
    }

    @Test
    public void test06472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06472");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setMaxPartitionFectchBytes((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder21.setMaxRetries((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setPollTimeoutMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder27 = kafkaSpoutRetryServiceBuilder21.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder29 = kafkaSpoutRetryServiceBuilder21.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer32 = null;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer31, charSequenceSerializableDeserializer32, pattern33);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator35 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder38 = kafkaSpoutRetryServiceBuilder34.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc39 = null;
        org.apache.storm.tuple.Fields fields40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc39, fields40, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder38.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer47 = null;
        java.util.regex.Pattern pattern48 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer46, charSequenceSerializableDeserializer47, pattern48);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder49.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator50);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc52 = null;
        org.apache.storm.tuple.Fields fields53 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc52, fields53, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig56 = kafkaSpoutRetryServiceBuilder51.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator57 = kafkaSpoutRetryServiceKafkaSpoutConfig56.getTranslator();
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator57, fields58, "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder29.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder68 = kafkaSpoutRetryServiceBuilder65.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder68.setMaxUncommittedOffsets((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder68.setOffsetCommitPeriodMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder68.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig75 = kafkaSpoutRetryServiceBuilder68.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer76 = kafkaSpoutRetryServiceKafkaSpoutConfig75.getValueDeserializer();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder27);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder38);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder42);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator57);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig75);
        org.junit.Assert.assertNull(charSequenceDeserializer76);
    }

    @Test
    public void test06473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06473");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator18);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc20 = null;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder23 = kafkaSpoutRetryServiceBuilder19.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc20, fields21, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig24 = kafkaSpoutRetryServiceBuilder19.build();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription28 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig24.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder12.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder30.setSSLKeystore("hi!", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig35 = kafkaSpoutRetryServiceBuilder30.build();
        long long36 = kafkaSpoutRetryServiceKafkaSpoutConfig35.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig24);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig35);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 30000L + "'", long36 == 30000L);
    }

    @Test
    public void test06474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06474");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.util.regex.Pattern pattern6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, pattern6);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder7.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator8);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder9.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc10, fields11, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig14 = kafkaSpoutRetryServiceBuilder9.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator15 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator16 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getTranslator();
        int int17 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        long long18 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getOffsetsCommitPeriodMs();
        java.lang.String str20 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getConsumerGroupId();
        boolean boolean21 = kafkaSpoutRetryServiceKafkaSpoutConfig14.isConsumerAutoCommitMode();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription23 = kafkaSpoutRetryServiceKafkaSpoutConfig14.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.util.AbstractList<java.lang.String>> strListBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.util.AbstractList<java.lang.String>>("hi!", strListSerializableDeserializer1, strListSerializableDeserializer2, subscription23);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10000000 + "'", int17 == 10000000);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 30000L + "'", long18 == 30000L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNull(str20);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + false + "'", boolean21 == false);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test06475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06475");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder11.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder13.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setMaxPollRecords(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder13.setMaxRetries(0);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
    }

    @Test
    public void test06476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06476");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNull(charSequenceDeserializer13);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 2147483647 + "'", int16 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService17);
    }

    @Test
    public void test06477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06477");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.String[]>("hi!", strListSerializableDeserializer11, strArraySerializableDeserializer12, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("", strArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test06478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06478");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 2147483647 + "'", int21 == 2147483647);
    }

    @Test
    public void test06479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06479");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 2147483647 + "'", int15 == 2147483647);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer17);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService21);
    }

    @Test
    public void test06480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06480");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>> annotatedElementBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>>("hi!", annotatedElementSerializableDeserializer1, kafkaSpoutRetryServiceConsumerRecordFuncSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
        java.lang.Class<?> wildcardClass22 = strList13.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(wildcardClass22);
    }

    @Test
    public void test06481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06481");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder11 = kafkaSpoutRetryServiceBuilder4.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder4.setFirstPollOffsetStrategy(firstPollOffsetStrategy12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder15.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder17.setSSLKeystore("hi!", "hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig22 = kafkaSpoutRetryServiceBuilder17.build();
        java.lang.String str23 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription24 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer25 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig22.getTranslator();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig22);
        org.junit.Assert.assertEquals("'" + str23 + "' != '" + "hi!" + "'", str23, "hi!");
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer25);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceRecordTranslator26);
    }

    @Test
    public void test06482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06482");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder8.setOffsetCommitPeriodMs(200L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = kafkaSpoutRetryServiceBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder26 = kafkaSpoutRetryServiceBuilder20.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig27 = kafkaSpoutRetryServiceBuilder26.build();
        long long28 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getRetryService();
        int int30 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getMaxUncommittedOffsets();
        boolean boolean31 = kafkaSpoutRetryServiceKafkaSpoutConfig27.isConsumerAutoCommitMode();
        long long32 = kafkaSpoutRetryServiceKafkaSpoutConfig27.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder22);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder26);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 200L + "'", long28 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10000000 + "'", int30 == 10000000);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + false + "'", boolean31 == false);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 200L + "'", long32 == 200L);
    }

    @Test
    public void test06483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06483");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        int int22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(charSequenceDeserializer16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 10000000 + "'", int22 == 10000000);
    }

    @Test
    public void test06484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06484");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder4.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy13);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder12.setRetry(kafkaSpoutRetryService15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder12.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder21 = kafkaSpoutRetryServiceBuilder19.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder25 = kafkaSpoutRetryServiceBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer28 = null;
        java.util.regex.Pattern pattern29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer27, charSequenceSerializableDeserializer28, pattern29);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder32 = kafkaSpoutRetryServiceBuilder30.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder32.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder32.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder46 = kafkaSpoutRetryServiceBuilder42.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder42.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder51 = kafkaSpoutRetryServiceBuilder48.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder55 = kafkaSpoutRetryServiceBuilder51.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer58 = null;
        java.util.regex.Pattern pattern59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer57, charSequenceSerializableDeserializer58, pattern59);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder62 = kafkaSpoutRetryServiceBuilder60.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator61);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc63 = null;
        org.apache.storm.tuple.Fields fields64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder66 = kafkaSpoutRetryServiceBuilder62.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc63, fields64, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig67 = kafkaSpoutRetryServiceBuilder62.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig67.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder51.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69, "");
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields72, "");
        org.apache.storm.tuple.Fields fields75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder78 = kafkaSpoutRetryServiceBuilder76.setFetchMinBytes((int) (short) 0);
        java.lang.Class<?> wildcardClass79 = kafkaSpoutRetryServiceBuilder76.getClass();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService15);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder21);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder32);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder46);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder51);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder55);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder62);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder66);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
    }

    @Test
    public void test06485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06485");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        java.lang.String str19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + false + "'", boolean18 == false);
        org.junit.Assert.assertNull(str19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer21);
        org.junit.Assert.assertNull(str22);
    }

    @Test
    public void test06486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06486");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.util.regex.Pattern pattern12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer10, charSequenceSerializableDeserializer11, pattern12);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        java.util.regex.Pattern pattern17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer15, charSequenceSerializableDeserializer16, pattern17);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator19);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc21 = null;
        org.apache.storm.tuple.Fields fields22 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder20.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc21, fields22, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig25 = kafkaSpoutRetryServiceBuilder20.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator26 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getTranslator();
        long long27 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getPollTimeoutMs();
        boolean boolean28 = kafkaSpoutRetryServiceKafkaSpoutConfig25.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = kafkaSpoutRetryServiceKafkaSpoutConfig25.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder30 = kafkaSpoutRetryServiceBuilder13.setProp(strMap29);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        java.util.regex.Pattern pattern34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer32, charSequenceSerializableDeserializer33, pattern34);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator36);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc38 = null;
        org.apache.storm.tuple.Fields fields39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = kafkaSpoutRetryServiceBuilder37.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc38, fields39, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig42 = kafkaSpoutRetryServiceBuilder37.build();
        java.lang.String str43 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator44 = kafkaSpoutRetryServiceKafkaSpoutConfig42.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator44);
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator44, fields46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig48 = kafkaSpoutRetryServiceBuilder8.build();
        org.apache.storm.kafka.spout.Subscription subscription49 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getSubscription();
        java.lang.String str50 = kafkaSpoutRetryServiceKafkaSpoutConfig48.toString();
        long long51 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getPartitionRefreshPeriodMs();
        int int52 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getMaxTupleRetries();
        int int53 = kafkaSpoutRetryServiceKafkaSpoutConfig48.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig25);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 200L + "'", long27 == 200L);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + false + "'", boolean28 == false);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder41);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig42);
        org.junit.Assert.assertNull(str43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig48);
        org.junit.Assert.assertNotNull(subscription49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2000L + "'", long51 == 2000L);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 2147483647 + "'", int52 == 2147483647);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 10000000 + "'", int53 == 10000000);
    }

    @Test
    public void test06487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06487");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        long long16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getSubscription();
        long long19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10000000 + "'", int14 == 10000000);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 200L + "'", long16 == 200L);
        org.junit.Assert.assertNull(charSequenceDeserializer17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 2000L + "'", long19 == 2000L);
    }

    @Test
    public void test06488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06488");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder6.setFetchMinBytes(10000000);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder10.build();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        int int15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        int int16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(charSequenceDeserializer12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10000000 + "'", int15 == 10000000);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10000000 + "'", int16 == 10000000);
    }

    @Test
    public void test06489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06489");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setMaxRetries(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder8.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder10.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer15 = null;
        java.util.regex.Pattern pattern16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer14, charSequenceSerializableDeserializer15, pattern16);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        long long31 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getPollTimeoutMs();
        boolean boolean32 = kafkaSpoutRetryServiceKafkaSpoutConfig29.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder34 = kafkaSpoutRetryServiceBuilder17.setProp(strMap33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder36 = kafkaSpoutRetryServiceBuilder34.setOffsetCommitPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer39 = null;
        java.util.regex.Pattern pattern40 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer38, charSequenceSerializableDeserializer39, pattern40);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder43 = kafkaSpoutRetryServiceBuilder41.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder45 = kafkaSpoutRetryServiceBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder47 = kafkaSpoutRetryServiceBuilder41.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder50 = kafkaSpoutRetryServiceBuilder47.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder52 = kafkaSpoutRetryServiceBuilder50.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder50.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer57 = null;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer56, charSequenceSerializableDeserializer57, pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder61 = kafkaSpoutRetryServiceBuilder59.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator60);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc62 = null;
        org.apache.storm.tuple.Fields fields63 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = kafkaSpoutRetryServiceBuilder61.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc62, fields63, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig66 = kafkaSpoutRetryServiceBuilder61.build();
        long long67 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator68 = kafkaSpoutRetryServiceKafkaSpoutConfig66.getTranslator();
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder70 = kafkaSpoutRetryServiceBuilder50.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields69);
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder72 = kafkaSpoutRetryServiceBuilder36.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields71);
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder74 = kafkaSpoutRetryServiceBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator68, fields73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder76 = kafkaSpoutRetryServiceBuilder74.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer79 = null;
        java.util.regex.Pattern pattern80 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer78, charSequenceSerializableDeserializer79, pattern80);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder83 = kafkaSpoutRetryServiceBuilder81.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator82);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc84 = null;
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder87 = kafkaSpoutRetryServiceBuilder83.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc84, fields85, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig88 = kafkaSpoutRetryServiceBuilder83.build();
        java.lang.String str89 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getConsumerGroupId();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer90 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getValueDeserializer();
        java.lang.String str91 = kafkaSpoutRetryServiceKafkaSpoutConfig88.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getKafkaProps();
        int int93 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService94 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getRetryService();
        long long95 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator96 = kafkaSpoutRetryServiceKafkaSpoutConfig88.getTranslator();
        org.apache.storm.tuple.Fields fields97 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder98 = kafkaSpoutRetryServiceBuilder74.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator96, fields97);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 200L + "'", long31 == 200L);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + false + "'", boolean32 == false);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder34);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder36);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder43);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder45);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder47);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder50);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder52);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder61);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder65);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 200L + "'", long67 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator68);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder70);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder74);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder76);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder83);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder87);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig88);
        org.junit.Assert.assertNull(str89);
        org.junit.Assert.assertNull(charSequenceDeserializer90);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertTrue("'" + int93 + "' != '" + 2147483647 + "'", int93 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService94);
        org.junit.Assert.assertTrue("'" + long95 + "' != '" + 2000L + "'", long95 == 2000L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator96);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder98);
    }

    @Test
    public void test06490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06490");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc9 = null;
        org.apache.storm.tuple.Fields fields10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder8.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc9, fields10, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder8.setBootstrapServers("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder8.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder19 = kafkaSpoutRetryServiceBuilder17.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig20 = kafkaSpoutRetryServiceBuilder17.build();
        java.lang.String str21 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getConsumerGroupId();
        long long22 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer23 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getValueDeserializer();
        java.lang.String str24 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getConsumerGroupId();
        org.apache.storm.kafka.spout.Subscription subscription25 = kafkaSpoutRetryServiceKafkaSpoutConfig20.getSubscription();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder19);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "hi!" + "'", str21, "hi!");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 30000L + "'", long22 == 30000L);
        org.junit.Assert.assertNull(charSequenceDeserializer23);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "hi!" + "'", str24, "hi!");
        org.junit.Assert.assertNotNull(subscription25);
    }

    @Test
    public void test06491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06491");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer4, charSequenceSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.KafkaSpoutRetryService>("hi!", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, kafkaSpoutRetryServiceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test06492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06492");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        java.lang.String str17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 200L + "'", long14 == 200L);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer15);
        org.junit.Assert.assertNull(str16);
    }

    @Test
    public void test06493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06493");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        long long13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getRetryService();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        long long17 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer18 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        boolean boolean19 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer20 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        java.lang.String str22 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        boolean boolean23 = kafkaSpoutRetryServiceKafkaSpoutConfig11.isConsumerAutoCommitMode();
        int int24 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getMaxTupleRetries();
        long long25 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getPollTimeoutMs();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 200L + "'", long13 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + false + "'", boolean16 == false);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 2000L + "'", long17 == 2000L);
        org.junit.Assert.assertNull(charSequenceDeserializer18);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + false + "'", boolean19 == false);
        org.junit.Assert.assertNull(charSequenceDeserializer20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + false + "'", boolean23 == false);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 200L + "'", long25 == 200L);
    }

    @Test
    public void test06494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06494");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder9 = kafkaSpoutRetryServiceBuilder6.setSSLTruststore("hi!", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder12 = kafkaSpoutRetryServiceBuilder9.setSSLKeystore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder14 = kafkaSpoutRetryServiceBuilder9.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder16 = kafkaSpoutRetryServiceBuilder9.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = kafkaSpoutRetryServiceBuilder16.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder20 = kafkaSpoutRetryServiceBuilder18.setFetchMinBytes((int) (short) 10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder9);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder14);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder16);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder18);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder20);
    }

    @Test
    public void test06495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06495");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        java.lang.String str12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKeyDeserializer();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.toString();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNull(str12);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator13);
        org.junit.Assert.assertNull(kafkaSpoutRetryServiceDeserializer14);
    }

    @Test
    public void test06496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06496");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "hi!" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test06497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06497");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder6.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc7, fields8, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig11 = kafkaSpoutRetryServiceBuilder6.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator12 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.CharSequence> charSequenceDeserializer14 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getValueDeserializer();
        java.lang.String str15 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getConsumerGroupId();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = kafkaSpoutRetryServiceKafkaSpoutConfig11.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig11);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator12);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNull(charSequenceDeserializer14);
        org.junit.Assert.assertNull(str15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test06498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06498");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.AbstractCollection<java.lang.String>> charSequenceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.AbstractCollection<java.lang.String>>("", charSequenceSerializableDeserializer1, strCollectionSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test06499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06499");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>> kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer11, charSequenceSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", strCollectionSerializableDeserializer8, firstPollOffsetStrategySerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.RandomAccess>("hi!", strListSerializableDeserializer5, randomAccessSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.Subscription> kafkaSpoutRetryServiceKafkaSpoutConfigBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, org.apache.storm.kafka.spout.Subscription>("", kafkaSpoutRetryServiceKafkaSpoutConfigSerializableDeserializer1, subscriptionSerializableDeserializer2, strArray14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test06500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest12.test06500");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer1, charSequenceSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder6 = kafkaSpoutRetryServiceBuilder4.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder8 = kafkaSpoutRetryServiceBuilder4.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder10 = kafkaSpoutRetryServiceBuilder4.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder13 = kafkaSpoutRetryServiceBuilder10.setSSLKeystore("", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder17 = kafkaSpoutRetryServiceBuilder13.setSSLKeystore("", "hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer20 = null;
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer19, charSequenceSerializableDeserializer20, pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder24 = kafkaSpoutRetryServiceBuilder22.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator23);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder28 = kafkaSpoutRetryServiceBuilder24.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc25, fields26, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig29 = kafkaSpoutRetryServiceBuilder24.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator30 = kafkaSpoutRetryServiceKafkaSpoutConfig29.getTranslator();
        org.apache.storm.tuple.Fields fields31 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder33 = kafkaSpoutRetryServiceBuilder13.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>>) kafkaSpoutRetryServiceRecordTranslator30, fields31, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder35 = kafkaSpoutRetryServiceBuilder33.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder37 = kafkaSpoutRetryServiceBuilder35.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer40 = null;
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer39, charSequenceSerializableDeserializer40, pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder44 = kafkaSpoutRetryServiceBuilder42.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator43);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc45 = null;
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder48 = kafkaSpoutRetryServiceBuilder44.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc45, fields46, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig49 = kafkaSpoutRetryServiceBuilder44.build();
        long long50 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription52 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = kafkaSpoutRetryServiceKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder54 = kafkaSpoutRetryServiceBuilder35.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder56 = kafkaSpoutRetryServiceBuilder54.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder58 = kafkaSpoutRetryServiceBuilder54.setOffsetCommitPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder60 = kafkaSpoutRetryServiceBuilder54.setMaxRetries(10000000);
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutRetryService> kafkaSpoutRetryServiceSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer63 = null;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>("hi!", kafkaSpoutRetryServiceSerializableDeserializer62, charSequenceSerializableDeserializer63, pattern64);
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator66 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder67 = kafkaSpoutRetryServiceBuilder65.setRecordTranslator(kafkaSpoutRetryServiceRecordTranslator66);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence>, java.util.List<java.lang.Object>> kafkaSpoutRetryServiceConsumerRecordFunc68 = null;
        org.apache.storm.tuple.Fields fields69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder71 = kafkaSpoutRetryServiceBuilder67.setRecordTranslator(kafkaSpoutRetryServiceConsumerRecordFunc68, fields69, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceKafkaSpoutConfig72 = kafkaSpoutRetryServiceBuilder67.build();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator73 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        long long74 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService75 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getRetryService();
        int int76 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceRecordTranslator77 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = kafkaSpoutRetryServiceKafkaSpoutConfig72.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder79 = kafkaSpoutRetryServiceBuilder60.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutRetryService, java.lang.CharSequence> kafkaSpoutRetryServiceBuilder82 = kafkaSpoutRetryServiceBuilder79.setSSLTruststore("", "hi!");
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder6);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder8);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder10);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder13);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder17);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder24);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder28);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig29);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator30);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder33);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder35);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder37);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder44);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder48);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig49);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 200L + "'", long50 == 200L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder54);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder56);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder58);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder60);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder67);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder71);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator73);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 200L + "'", long74 == 200L);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryService75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 2147483647 + "'", int76 == 2147483647);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceRecordTranslator77);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder79);
        org.junit.Assert.assertNotNull(kafkaSpoutRetryServiceBuilder82);
    }
}

