/*
 * This file was automatically generated by EvoSuite
 * Sun Oct 31 21:14:07 GMT 2021
 */

package org.apache.storm.kafka.spout;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import clojure.lang.ArraySeq;
import clojure.lang.Cons;
import clojure.lang.EnumerationSeq;
import clojure.lang.IPersistentMap;
import clojure.lang.IReduceInit;
import clojure.lang.ISeq;
import clojure.lang.Iterate;
import clojure.lang.IteratorSeq;
import clojure.lang.LongRange;
import clojure.lang.PersistentArrayMap;
import clojure.lang.PersistentHashMap;
import clojure.lang.PersistentHashSet;
import clojure.lang.PersistentList;
import clojure.lang.PersistentStructMap;
import clojure.lang.PersistentTreeMap;
import clojure.lang.PersistentTreeSet;
import clojure.lang.PersistentVector;
import clojure.lang.Var;
import java.io.PushbackReader;
import java.io.Reader;
import java.io.StringReader;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Enumeration;
import java.util.HashSet;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.PriorityQueue;
import java.util.Properties;
import java.util.Set;
import java.util.Stack;
import java.util.Vector;
import java.util.concurrent.DelayQueue;
import java.util.concurrent.Delayed;
import java.util.concurrent.ForkJoinTask;
import java.util.concurrent.LinkedBlockingDeque;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.LinkedTransferQueue;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicBoolean;
import java.util.function.Predicate;
import java.util.regex.Pattern;
import java.util.regex.PatternSyntaxException;
import java.util.stream.Stream;
import org.apache.kafka.clients.consumer.ConsumerRecord;
import org.apache.kafka.common.TopicPartition;
import org.apache.kafka.common.record.TimestampType;
import org.apache.kafka.common.serialization.ByteArrayDeserializer;
import org.apache.kafka.common.serialization.ByteBufferDeserializer;
import org.apache.kafka.common.serialization.BytesDeserializer;
import org.apache.kafka.common.serialization.Deserializer;
import org.apache.kafka.common.serialization.DoubleDeserializer;
import org.apache.kafka.common.serialization.IntegerDeserializer;
import org.apache.kafka.common.serialization.LongDeserializer;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.apache.storm.generated.GlobalStreamId;
import org.apache.storm.generated.Nimbus;
import org.apache.storm.generated.StormTopology;
import org.apache.storm.kafka.spout.ByTopicRecordTranslator;
import org.apache.storm.kafka.spout.DefaultRecordTranslator;
import org.apache.storm.kafka.spout.Func;
import org.apache.storm.kafka.spout.KafkaSpoutConfig;
import org.apache.storm.kafka.spout.KafkaSpoutRetryExponentialBackoff;
import org.apache.storm.kafka.spout.KafkaSpoutRetryService;
import org.apache.storm.kafka.spout.ManualPartitionNamedSubscription;
import org.apache.storm.kafka.spout.ManualPartitionPatternSubscription;
import org.apache.storm.kafka.spout.NamedSubscription;
import org.apache.storm.kafka.spout.PatternSubscription;
import org.apache.storm.kafka.spout.RecordTranslator;
import org.apache.storm.kafka.spout.RoundRobinManualPartitioner;
import org.apache.storm.kafka.spout.SerializableDeserializer;
import org.apache.storm.kafka.spout.SimpleRecordTranslator;
import org.apache.storm.kafka.spout.Subscription;
import org.apache.storm.task.GeneralTopologyContext;
import org.apache.storm.task.TopologyContext;
import org.apache.storm.tuple.Fields;
import org.apache.storm.tuple.TupleImpl;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.System;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class KafkaSpoutConfig_ESTest extends KafkaSpoutConfig_ESTest_scaffolding {

  @Test(timeout = 11000)
  public void test00()  throws Throwable  {
      String string0 = "\\}$- RP9r##a-:V4";
      SerializableDeserializer<Integer> serializableDeserializer0 = (SerializableDeserializer<Integer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Class<IntegerDeserializer> class0 = IntegerDeserializer.class;
      SerializableDeserializer<StringDeserializer> serializableDeserializer1 = null;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[0];
      NamedSubscription namedSubscription0 = new NamedSubscription(stringArray0);
      assertEquals(0, stringArray0.length);
      assertNotNull(namedSubscription0);
      
      KafkaSpoutConfig.Builder<Integer, StringDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Integer, StringDeserializer>(string0, serializableDeserializer0, class0, serializableDeserializer1, class1, namedSubscription0);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      SerializableDeserializer<Integer> serializableDeserializer2 = kafkaSpoutConfig_Builder0.keyDes;
      assertEquals(0, stringArray0.length);
      assertNotNull(serializableDeserializer2);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      
      KafkaSpoutConfig.Builder<Integer, Object> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<Integer, Object>(string0, serializableDeserializer2, kafkaSpoutConfig_Builder0.keyDes, kafkaSpoutConfig_Builder0.subscription);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class2 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, Deserializer<ByteArrayDeserializer>>(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder1.keyDes, class1, kafkaSpoutConfig_Builder0.valueDes, class2);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      int int0 = 0;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setMaxUncommittedOffsets(int0);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(class1, class2);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      
      String string1 = null;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder2.setBootstrapServers(string1);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(class1, class2);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder2.setPartitionRefreshPeriodMs(kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(0, stringArray0.length);
      assertEquals(0L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(class1, class2);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder4.setPollTimeoutMs(long0);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(0, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(class1, class2);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      String string2 = "";
      String string3 = "'e;<S$";
      Class<Deserializer> class3 = Deserializer.class;
      KafkaSpoutConfig.Builder<ForkJoinTask<ByteArrayDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder7 = new KafkaSpoutConfig.Builder<ForkJoinTask<ByteArrayDeserializer>, DoubleDeserializer>(string3, class3, kafkaSpoutConfig_Builder2.valueDesClazz, stringArray0);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      
      Func<ConsumerRecord<ForkJoinTask<ByteArrayDeserializer>, DoubleDeserializer>, List<Object>> func0 = (Func<ConsumerRecord<ForkJoinTask<ByteArrayDeserializer>, DoubleDeserializer>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = null;
      KafkaSpoutConfig.Builder<ForkJoinTask<ByteArrayDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setRecordTranslator(func0, fields0);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(class1, class2);
      assertSame(class1, class3);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      assertSame(class2, class3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(class3, class1);
      assertSame(class3, class2);
      
      KafkaSpoutConfig.Builder<Integer, StringDeserializer> kafkaSpoutConfig_Builder9 = kafkaSpoutConfig_Builder0.setFetchMinBytes(kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(class1, class2);
      assertSame(class1, class3);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      assertSame(class2, class3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(class3, class1);
      assertSame(class3, class2);
      
      SerializableDeserializer<Object> serializableDeserializer3 = (SerializableDeserializer<Object>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      KafkaSpoutConfig.Builder<BytesDeserializer, Object> kafkaSpoutConfig_Builder10 = new KafkaSpoutConfig.Builder<BytesDeserializer, Object>(string3, kafkaSpoutConfig_Builder1.valueDes, serializableDeserializer3, kafkaSpoutConfig_Builder3.subscription);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder10);
      
      KafkaSpoutConfig<BytesDeserializer, Object> kafkaSpoutConfig0 = new KafkaSpoutConfig<BytesDeserializer, Object>(kafkaSpoutConfig_Builder10);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      Subscription subscription0 = kafkaSpoutConfig0.getSubscription();
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(subscription0);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertSame(class1, class2);
      assertSame(class1, class3);
      assertSame(namedSubscription0, subscription0);
      assertSame(serializableDeserializer2, serializableDeserializer0);
      assertSame(class2, class1);
      assertSame(class2, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(subscription0, namedSubscription0);
  }

  @Test(timeout = 11000)
  public void test01()  throws Throwable  {
      KafkaSpoutConfig<Integer, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Integer, StringDeserializer>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS = kafkaSpoutConfig0.DEFAULT_POLL_TIMEOUT_MS;
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      
      KafkaSpoutRetryService kafkaSpoutRetryService0 = kafkaSpoutConfig0.getRetryService();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNull(kafkaSpoutRetryService0);
      
      String string0 = "}\\k{pO";
      String string1 = "O%ZTXhSYbK?Z+\"=";
      Pattern pattern0 = Pattern.compile(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.pattern());
      assertEquals(0, pattern0.flags());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.toString());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer>(string0, kafkaSpoutConfig0.keyDes, kafkaSpoutConfig0.keyDes, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.pattern());
      assertEquals(0, pattern0.flags());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.toString());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string2 = "";
      String string3 = "#E_'/10i'}D$}u@";
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setSSLTruststore(string2, string3);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.pattern());
      assertEquals(0, pattern0.flags());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.toString());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      
      String string4 = "`;d";
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLKeystore(string3, string3, string4);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.pattern());
      assertEquals(0, pattern0.flags());
      assertEquals("O%ZTXhSYbK?Z+\"=", pattern0.toString());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string5 = "9O]ec(Cnt}sr";
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer> kafkaSpoutConfig_Builder3 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer>();
      assertEquals(200L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      int int0 = 0;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, LongDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setMaxRetries(int0);
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(200L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class0 = Deserializer.class;
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder4.setValue((Class<? extends Deserializer<LongDeserializer>>) class0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 11000)
  public void test02()  throws Throwable  {
      KafkaSpoutConfig<Object, PersistentVector> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, PersistentVector>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = kafkaSpoutConfig0.toString();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string0);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(string0);
      
      int int0 = kafkaSpoutConfig0.getMaxUncommittedOffsets();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, int0);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      
      String string1 = "ZVLvtmfChq7&xV<9";
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer>(string1, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.subscription);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Properties properties0 = new Properties();
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setProp(properties0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRecordTranslator(kafkaSpoutConfig0.translator);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string2 = "";
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setSecurityProtocol(string2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((SerializableDeserializer<ForkJoinTask<Object>>) kafkaSpoutConfig0.keyDes);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setRecordTranslator(kafkaSpoutConfig_Builder2.translator);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      SerializableDeserializer<Delayed> serializableDeserializer0 = (SerializableDeserializer<Delayed>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      KafkaSpoutConfig.Builder<Delayed, Object> kafkaSpoutConfig_Builder6 = new KafkaSpoutConfig.Builder<Delayed, Object>(string0, serializableDeserializer0, kafkaSpoutConfig_Builder0.keyDesClazz, kafkaSpoutConfig_Builder4.keyDes, kafkaSpoutConfig0.keyDesClazz, kafkaSpoutConfig_Builder3.subscription);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      
      KafkaSpoutConfig.Builder<Delayed, Object> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setValue((SerializableDeserializer<Object>) kafkaSpoutConfig_Builder5.keyDes);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig<Delayed, Object> kafkaSpoutConfig1 = new KafkaSpoutConfig<Delayed, Object>(kafkaSpoutConfig_Builder7);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getPartitionRefreshPeriodMs();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, long0);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      String string3 = "a.($&Kh0";
      Class<StringDeserializer> class0 = StringDeserializer.class;
      String string4 = "";
      Pattern pattern0 = Pattern.compile(string4, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(pattern0);
      assertSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      
      KafkaSpoutConfig.Builder<String, ByteBufferDeserializer> kafkaSpoutConfig_Builder8 = new KafkaSpoutConfig.Builder<String, ByteBufferDeserializer>(string3, class0, kafkaSpoutConfig_Builder6.valueDesClazz, pattern0);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder8);
      
      int int1 = (-44);
      KafkaSpoutConfig.Builder<String, ByteBufferDeserializer> kafkaSpoutConfig_Builder9 = kafkaSpoutConfig_Builder8.setMaxPartitionFectchBytes(int1);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(int1 == int0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder9);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      
      KafkaSpoutConfig.Builder<String, ByteBufferDeserializer> kafkaSpoutConfig_Builder10 = kafkaSpoutConfig_Builder9.setValue(kafkaSpoutConfig_Builder5.valueDes);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder9));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder10);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder10);
      assertNotSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder9);
      
      String string5 = "x,";
      KafkaSpoutConfig.Builder<String, ByteBufferDeserializer> kafkaSpoutConfig_Builder11 = kafkaSpoutConfig_Builder10.setSecurityProtocol(string5);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string5));
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutConfig_Builder9.equals((Object)kafkaSpoutConfig_Builder10));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder9));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder11.equals((Object)kafkaSpoutConfig_Builder9));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder11);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string5);
      assertSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string5);
      assertNotSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder10);
      assertNotSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder11);
      assertNotSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder9);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertNotSame(string5, string4);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string3);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertNotSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder9);
      
      KafkaSpoutConfig<String, ByteBufferDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<String, ByteBufferDeserializer>(kafkaSpoutConfig_Builder11);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string5));
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutConfig_Builder9.equals((Object)kafkaSpoutConfig_Builder10));
      assertFalse(kafkaSpoutConfig_Builder9.equals((Object)kafkaSpoutConfig_Builder11));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder9));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder11.equals((Object)kafkaSpoutConfig_Builder9));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertNotNull(kafkaSpoutConfig2);
      
      long long1 = kafkaSpoutConfig2.getOffsetsCommitPeriodMs();
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string5));
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutConfig_Builder9.equals((Object)kafkaSpoutConfig_Builder10));
      assertFalse(kafkaSpoutConfig_Builder9.equals((Object)kafkaSpoutConfig_Builder11));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder9));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder11.equals((Object)kafkaSpoutConfig_Builder9));
      assertFalse(long1 == long0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals("", pattern0.toString());
      assertEquals(10000000, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(30000L, long1);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertNotSame(string0, string3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string4);
      assertNotSame(string0, string5);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string5);
      assertSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string3);
      assertNotSame(string4, string5);
      assertNotSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder10);
      assertNotSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder11);
      assertNotSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder9);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertNotSame(string5, string4);
      assertNotSame(string5, string1);
      assertNotSame(string5, string0);
      assertNotSame(string5, string2);
      assertNotSame(string5, string3);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertNotSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder9);
  }

  @Test(timeout = 11000)
  public void test03()  throws Throwable  {
      String string0 = "org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder";
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer>(string0, class0, class0, stringArray0);
      assertEquals(1, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig0 = new KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer>(kafkaSpoutConfig_Builder0);
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      boolean boolean0 = kafkaSpoutConfig0.isConsumerAutoCommitMode();
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(boolean0);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      
      KafkaSpoutConfig<ForkJoinTask<String>, Integer> kafkaSpoutConfig1 = new KafkaSpoutConfig<ForkJoinTask<String>, Integer>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getOffsetsCommitPeriodMs();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, long0);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      
      String string1 = "j";
      KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig2 = kafkaSpoutConfig_Builder0.build();
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig2.equals((Object)kafkaSpoutConfig0));
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig2);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig2, kafkaSpoutConfig0);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<Object, PersistentVector>(string1, kafkaSpoutConfig1.keyDesClazz, kafkaSpoutConfig0.keyDesClazz, kafkaSpoutConfig1.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig0.equals((Object)kafkaSpoutConfig2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLTruststore(stringArray0[0], stringArray0[0]);
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig0.equals((Object)kafkaSpoutConfig2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig0, kafkaSpoutConfig2);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setProp(kafkaSpoutConfig0.kafkaProps);
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig0.equals((Object)kafkaSpoutConfig2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig0, kafkaSpoutConfig2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig<Object, PersistentVector> kafkaSpoutConfig3 = new KafkaSpoutConfig<Object, PersistentVector>(kafkaSpoutConfig_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig0.equals((Object)kafkaSpoutConfig2));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertFalse(kafkaSpoutConfig3.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig3.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig3);
      
      long long1 = kafkaSpoutConfig3.getOffsetsCommitPeriodMs();
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig0.equals((Object)kafkaSpoutConfig2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(long1 == long0);
      assertEquals(1, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertFalse(kafkaSpoutConfig3.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig3.getConsumerGroupId());
      assertEquals(30000L, long1);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig0, kafkaSpoutConfig2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder4 = KafkaSpoutConfig.builder(string1, stringArray0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy[] kafkaSpoutConfig_FirstPollOffsetStrategyArray0 = KafkaSpoutConfig.FirstPollOffsetStrategy.values();
      assertEquals(4, kafkaSpoutConfig_FirstPollOffsetStrategyArray0.length);
      assertNotNull(kafkaSpoutConfig_FirstPollOffsetStrategyArray0);
  }

  @Test(timeout = 11000)
  public void test04()  throws Throwable  {
      String string0 = "";
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteArrayDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String string1 = "";
      SerializableDeserializer<ForkJoinTask<Object>> serializableDeserializer1 = (SerializableDeserializer<ForkJoinTask<Object>>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      RoundRobinManualPartitioner roundRobinManualPartitioner0 = new RoundRobinManualPartitioner();
      assertNotNull(roundRobinManualPartitioner0);
      
      Stack<TopicPartition> stack0 = new Stack<TopicPartition>();
      assertEquals(10, stack0.capacity());
      assertTrue(stack0.empty());
      assertEquals(0, stack0.size());
      assertEquals("[]", stack0.toString());
      assertTrue(stack0.isEmpty());
      assertNotNull(stack0);
      
      StormTopology stormTopology0 = new StormTopology();
      assertFalse(stormTopology0.is_set_bolts());
      assertFalse(stormTopology0.is_set_dependency_artifacts());
      assertFalse(stormTopology0.is_set_dependency_jars());
      assertEquals(0, stormTopology0.get_dependency_jars_size());
      assertEquals(0, stormTopology0.get_spouts_size());
      assertFalse(stormTopology0.is_set_worker_hooks());
      assertFalse(stormTopology0.is_set_spouts());
      assertFalse(stormTopology0.is_set_state_spouts());
      assertEquals(0, stormTopology0.get_bolts_size());
      assertEquals(0, stormTopology0.get_state_spouts_size());
      assertEquals(0, stormTopology0.get_worker_hooks_size());
      assertEquals(0, stormTopology0.get_dependency_artifacts_size());
      assertNotNull(stormTopology0);
      
      StormTopology stormTopology1 = new StormTopology(stormTopology0);
      assertTrue(stormTopology1.equals((Object)stormTopology0));
      assertFalse(stormTopology0.is_set_bolts());
      assertFalse(stormTopology0.is_set_dependency_artifacts());
      assertFalse(stormTopology0.is_set_dependency_jars());
      assertEquals(0, stormTopology0.get_dependency_jars_size());
      assertEquals(0, stormTopology0.get_spouts_size());
      assertFalse(stormTopology0.is_set_worker_hooks());
      assertFalse(stormTopology0.is_set_spouts());
      assertFalse(stormTopology0.is_set_state_spouts());
      assertEquals(0, stormTopology0.get_bolts_size());
      assertEquals(0, stormTopology0.get_state_spouts_size());
      assertEquals(0, stormTopology0.get_worker_hooks_size());
      assertEquals(0, stormTopology0.get_dependency_artifacts_size());
      assertFalse(stormTopology1.is_set_worker_hooks());
      assertFalse(stormTopology1.is_set_spouts());
      assertFalse(stormTopology1.is_set_dependency_artifacts());
      assertFalse(stormTopology1.is_set_bolts());
      assertFalse(stormTopology1.is_set_dependency_jars());
      assertEquals(0, stormTopology1.get_dependency_artifacts_size());
      assertEquals(0, stormTopology1.get_state_spouts_size());
      assertFalse(stormTopology1.is_set_state_spouts());
      assertEquals(0, stormTopology1.get_worker_hooks_size());
      assertEquals(0, stormTopology1.get_dependency_jars_size());
      assertEquals(0, stormTopology1.get_spouts_size());
      assertEquals(0, stormTopology1.get_bolts_size());
      assertNotNull(stormTopology1);
      
      long long0 = 0L;
      long long1 = 0L;
      Pattern pattern0 = Pattern.compile(string0);
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.pattern());
      assertEquals("", pattern0.toString());
      assertNotNull(pattern0);
      assertSame(string0, string1);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string1, pattern0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test05()  throws Throwable  {
      KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      RecordTranslator<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> recordTranslator0 = kafkaSpoutConfig0.getTranslator();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNull(recordTranslator0);
      
      String string0 = "Da";
      KafkaSpoutConfig.DEFAULT_RETRY_SERVICE = kafkaSpoutConfig0.UNIT_TEST_RETRY_SERVICE;
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      
      Class<StringDeserializer> class0 = StringDeserializer.class;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<String, IntegerDeserializer>(string0, class0, kafkaSpoutConfig0.valueDesClazz, arrayList0);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setOffsetCommitPeriodMs(long0);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class1 = Deserializer.class;
      String string1 = "clojure.core$thread_bound_QMARK_";
      int int0 = 0;
      KafkaSpoutConfig<Integer, IntegerDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Integer, IntegerDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      RecordTranslator<Integer, IntegerDeserializer> recordTranslator1 = kafkaSpoutConfig1.getTranslator();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNull(recordTranslator1);
      
      KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer>();
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig2);
      
      int int1 = 240;
      kafkaSpoutConfig2.maxUncommittedOffsets = int1;
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(240, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      
      long long1 = kafkaSpoutConfig2.getOffsetsCommitPeriodMs();
      assertTrue(long1 == long0);
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(240, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, long1);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(240, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      
      String string2 = "Qgqk C?tvI PJ<Dah";
      Class<IntegerDeserializer> class2 = IntegerDeserializer.class;
      Class<StringDeserializer> class3 = StringDeserializer.class;
      KafkaSpoutConfig.Builder<DoubleDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<DoubleDeserializer, Deserializer<ByteArrayDeserializer>>(string0, kafkaSpoutConfig0.keyDes, class1, kafkaSpoutConfig0.valueDes, class1, kafkaSpoutConfig1.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig<DoubleDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig3 = new KafkaSpoutConfig<DoubleDeserializer, Deserializer<ByteArrayDeserializer>>(kafkaSpoutConfig_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig3.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig3.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig3);
      
      long long2 = kafkaSpoutConfig3.getPollTimeoutMs();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(long2 == long1);
      assertFalse(long2 == long0);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig3.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig3.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(200L, long2);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
  }

  @Test(timeout = 11000)
  public void test06()  throws Throwable  {
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, IntegerDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, IntegerDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutConfig.DEFAULT_RETRY_SERVICE = kafkaSpoutConfig0.DEFAULT_RETRY_SERVICE;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      Map<String, Object> map0 = kafkaSpoutConfig0.getKafkaProps();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNull(map0);
      
      KafkaSpoutConfig<StringDeserializer, ByteBufferDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<StringDeserializer, ByteBufferDeserializer>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getPartitionRefreshPeriodMs();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, long0);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      
      String string0 = "enable.auto.commit";
      SerializableDeserializer<StringDeserializer> serializableDeserializer0 = (SerializableDeserializer<StringDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[5];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer>(string0, serializableDeserializer0, kafkaSpoutConfig0.valueDes, stringArray0);
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>> func0 = (Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRecordTranslator(func0, fields0);
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "a.:Oi|'U[Vz6{$$";
      String string2 = "wE!R@G";
      String string3 = "false";
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLKeystore(string1, string2, string3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      
      long long1 = 323L;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setPollTimeoutMs(long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(long1 == long0);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((SerializableDeserializer<StringDeserializer>) kafkaSpoutConfig_Builder0.valueDes);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      
      String string4 = "nH*<#q";
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setSSLTruststore(stringArray0[2], string4);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<StringDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setValue((SerializableDeserializer<ByteBufferDeserializer>) kafkaSpoutConfig_Builder2.keyDes);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string3);
      assertNotSame(string0, string4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertNotSame(string3, string4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      
      LinkedBlockingQueue<String> linkedBlockingQueue0 = new LinkedBlockingQueue<String>();
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertNotNull(linkedBlockingQueue0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder7 = KafkaSpoutConfig.builder(stringArray0[2], (Collection<String>) linkedBlockingQueue0);
      assertEquals(5, stringArray0.length);
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder7);
      
      HashSet<String> hashSet0 = new HashSet<String>();
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertFalse(hashSet0.contains(string0));
      assertNotNull(hashSet0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder8 = KafkaSpoutConfig.builder(stringArray0[0], (Collection<String>) hashSet0);
      assertFalse(kafkaSpoutConfig_Builder8.equals((Object)kafkaSpoutConfig_Builder7));
      assertEquals(5, stringArray0.length);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertFalse(hashSet0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder7);
  }

  @Test(timeout = 11000)
  public void test07()  throws Throwable  {
      KafkaSpoutConfig.Builder<ForkJoinTask<String>, BytesDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<String>, BytesDeserializer>();
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 702L;
      String string0 = "org.apache.storm.generated.Nimbus$getTopologyInfo_result";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteArrayDeserializer>(string0, kafkaSpoutConfig_Builder0.keyDes, class0, kafkaSpoutConfig_Builder0.valueDes, class1, kafkaSpoutConfig_Builder0.subscription);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      int int0 = 37;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxUncommittedOffsets(kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(class0, class1);
      assertSame(class1, class0);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setMaxRetries(kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setMaxPollRecords(kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<String>, BytesDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder0.setPollTimeoutMs(long0);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(702L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(702L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<String>, BytesDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder0.setRetry(kafkaSpoutConfig_Builder5.retryService);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(702L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(702L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(702L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<String>, BytesDeserializer> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder0.setRetry(kafkaSpoutConfig_Builder6.retryService);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(702L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(702L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(702L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(702L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder5.setKey((Class<? extends Deserializer<ForkJoinTask<String>>>) kafkaSpoutConfig_Builder0.valueDesClazz);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 11000)
  public void test08()  throws Throwable  {
      String string0 = "enable.auto.commit";
      Class<IntegerDeserializer> class0 = IntegerDeserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      Pattern pattern0 = null;
      KafkaSpoutConfig.Builder<Integer, DoubleDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Integer, DoubleDeserializer>(string0, class0, class1, pattern0);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      ByTopicRecordTranslator<Integer, DoubleDeserializer> byTopicRecordTranslator0 = new ByTopicRecordTranslator<Integer, DoubleDeserializer>(kafkaSpoutConfig_Builder0.translator);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(byTopicRecordTranslator0);
      
      KafkaSpoutConfig.Builder<Integer, DoubleDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRecordTranslator((RecordTranslator<Integer, DoubleDeserializer>) byTopicRecordTranslator0);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "";
      DelayQueue<Delayed> delayQueue0 = new DelayQueue<Delayed>();
      assertNotNull(delayQueue0);
      
      long long0 = 1000L;
      TimeUnit timeUnit0 = TimeUnit.MICROSECONDS;
      Delayed delayed0 = delayQueue0.poll(long0, timeUnit0);
      assertNull(delayed0);
      
      KafkaSpoutConfig.Builder<Integer, DoubleDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setProp(string1, (Object) delayed0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Integer, DoubleDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setKey((SerializableDeserializer<Integer>) kafkaSpoutConfig_Builder1.valueDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<Integer, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Integer, DoubleDeserializer>(kafkaSpoutConfig_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig0);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig0.toString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not instantiate value deserializer interface org.apache.kafka.common.serialization.Deserializer
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test09()  throws Throwable  {
      KafkaSpoutConfig<IntegerDeserializer, ByteBufferDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<IntegerDeserializer, ByteBufferDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = kafkaSpoutConfig0.toString();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string0);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNotNull(string0);
      
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, BytesDeserializer>(string0, class0, kafkaSpoutConfig0.valueDesClazz, stringArray0);
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string1 = "Could not instantiate key deserializer ";
      Object object0 = new Object();
      assertNotNull(object0);
      
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setProp(string1, object0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRecordTranslator(kafkaSpoutConfig_Builder0.translator);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setFetchMinBytes(kafkaSpoutConfig_Builder1.maxRetries);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((Class<? extends Deserializer<Object>>) class1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertNotSame(string1, string0);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(class1, class0);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setFirstPollOffsetStrategy(kafkaSpoutConfig_Builder0.firstPollOffsetStrategy);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertNotSame(string1, string0);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      Properties properties0 = new Properties();
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setProp(properties0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder6.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder6.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder6.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertNotSame(string1, string0);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      
      Class<Deserializer> class2 = Deserializer.class;
      Class<Deserializer> class3 = Deserializer.class;
      Pattern pattern0 = Pattern.compile(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("Could not instantiate key deserializer ", pattern0.toString());
      assertEquals("Could not instantiate key deserializer ", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder7 = new KafkaSpoutConfig.Builder<IntegerDeserializer, BytesDeserializer>(stringArray0[2], class2, class3, pattern0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(0, pattern0.flags());
      assertEquals("Could not instantiate key deserializer ", pattern0.toString());
      assertEquals("Could not instantiate key deserializer ", pattern0.pattern());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      
      String string2 = null;
      KafkaSpoutConfig.Builder<IntegerDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setGroupId(string2);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(0, pattern0.flags());
      assertEquals("Could not instantiate key deserializer ", pattern0.toString());
      assertEquals("Could not instantiate key deserializer ", pattern0.pattern());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertSame(class2, class3);
      assertSame(class2, class0);
      assertSame(class2, class1);
      assertSame(class3, class1);
      assertSame(class3, class0);
      assertSame(class3, class2);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder9 = kafkaSpoutConfig_Builder8.setFetchMinBytes(kafkaSpoutConfig_Builder3.maxRetries);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, pattern0.flags());
      assertEquals("Could not instantiate key deserializer ", pattern0.toString());
      assertEquals("Could not instantiate key deserializer ", pattern0.pattern());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder9);
      assertNotSame(string0, string1);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class0, class3);
      assertNotSame(string1, string0);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(class2, class3);
      assertSame(class2, class0);
      assertSame(class2, class1);
      assertSame(class3, class1);
      assertSame(class3, class0);
      assertSame(class3, class2);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder9);
      assertSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder8);
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder10 = kafkaSpoutConfig_Builder9.setValue(kafkaSpoutConfig_Builder4.valueDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder8));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder9));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, pattern0.flags());
      assertEquals("Could not instantiate key deserializer ", pattern0.toString());
      assertEquals("Could not instantiate key deserializer ", pattern0.pattern());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder10);
      assertNotSame(string0, string1);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class0, class3);
      assertNotSame(string1, string0);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class1, class3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertSame(class2, class3);
      assertSame(class2, class0);
      assertSame(class2, class1);
      assertSame(class3, class1);
      assertSame(class3, class0);
      assertSame(class3, class2);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder9);
      assertNotSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder8);
      assertNotSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder10);
      assertNotSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder8);
      assertNotSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder9);
      
      KafkaSpoutConfig<IntegerDeserializer, BytesDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<IntegerDeserializer, BytesDeserializer>(kafkaSpoutConfig_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder6));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder8.equals((Object)kafkaSpoutConfig_Builder10));
      assertFalse(kafkaSpoutConfig_Builder9.equals((Object)kafkaSpoutConfig_Builder10));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder8));
      assertFalse(kafkaSpoutConfig_Builder10.equals((Object)kafkaSpoutConfig_Builder9));
      assertEquals(4, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, pattern0.flags());
      assertEquals("Could not instantiate key deserializer ", pattern0.toString());
      assertEquals("Could not instantiate key deserializer ", pattern0.pattern());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig1.toString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not instantiate key deserializer interface org.apache.kafka.common.serialization.Deserializer
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test10()  throws Throwable  {
      String string0 = "org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder";
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[8];
      stringArray0[0] = string0;
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer>(string0, class0, class0, stringArray0);
      assertEquals(8, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string1 = null;
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setGroupId(string1);
      assertEquals(8, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig0 = new KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer>(kafkaSpoutConfig_Builder0);
      assertEquals(8, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      boolean boolean0 = kafkaSpoutConfig0.isConsumerAutoCommitMode();
      assertEquals(8, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(boolean0);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer>();
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getPartitionRefreshPeriodMs();
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, long0);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      
      String string2 = "enable.auto.commit";
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<DoubleDeserializer, LongDeserializer> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<DoubleDeserializer, LongDeserializer>(string2, class1, kafkaSpoutConfig_Builder1.valueDesClazz, stringArray0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig<DoubleDeserializer, LongDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<DoubleDeserializer, LongDeserializer>(kafkaSpoutConfig_Builder2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig2);
      
      String string3 = kafkaSpoutConfig2.getConsumerGroupId();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNull(string3);
      assertNotSame(string0, string2);
      assertSame(class0, class1);
      assertNotSame(string2, string0);
      assertSame(class1, class0);
      
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteArrayDeserializer> kafkaSpoutConfig3 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteArrayDeserializer>();
      assertEquals(0L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig3);
      
      long long1 = (-2008L);
      KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS = long1;
      int int0 = kafkaSpoutConfig3.getMaxTupleRetries();
      assertEquals(0L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(0, int0);
      assertEquals(0L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals((-2008L), KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, Deserializer<Object>> kafkaSpoutConfig4 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, Deserializer<Object>>();
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals((-2008L), KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
      assertNotNull(kafkaSpoutConfig4);
      
      long long2 = kafkaSpoutConfig4.getPollTimeoutMs();
      assertFalse(long2 == long1);
      assertTrue(long2 == long0);
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals(0L, long2);
      assertEquals((-2008L), KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
  }

  @Test(timeout = 11000)
  public void test11()  throws Throwable  {
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, StringDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = kafkaSpoutConfig0.toString();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string0);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(string0);
      
      String string1 = null;
      String string2 = "clojure.core$macroexpand";
      int int0 = 125;
      Pattern pattern0 = Pattern.compile(string2, int0);
      assertFalse(string2.equals((Object)string0));
      assertEquals("clojure.core$macroexpand", pattern0.toString());
      assertEquals(125, pattern0.flags());
      assertEquals("clojure.core$macroexpand", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string2, string0);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string1, pattern0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test12()  throws Throwable  {
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, String> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, String>();
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy kafkaSpoutConfig_FirstPollOffsetStrategy0 = KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, String> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, String>();
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, String> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRecordTranslator(kafkaSpoutConfig_Builder0.translator);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, String> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setMaxUncommittedOffsets(kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      String string0 = "";
      String string1 = "4v+(OKB%";
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[4];
      stringArray0[0] = string1;
      stringArray0[1] = string1;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      KafkaSpoutConfig.Builder<Integer, StringDeserializer> kafkaSpoutConfig_Builder4 = new KafkaSpoutConfig.Builder<Integer, StringDeserializer>(string1, kafkaSpoutConfig_Builder1.keyDesClazz, class0, stringArray0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig.Builder<Integer, StringDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setPollTimeoutMs(kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      
      String string2 = null;
      KafkaSpoutConfig.Builder<Integer, StringDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setGroupId(string2);
      assertFalse(string1.equals((Object)string0));
      assertEquals(4, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      
      SerializableDeserializer<Integer> serializableDeserializer0 = kafkaSpoutConfig_Builder6.keyDes;
      assertEquals(4, stringArray0.length);
      assertNull(serializableDeserializer0);
      
      PersistentHashSet persistentHashSet0 = PersistentHashSet.create((Object[]) stringArray0);
      assertEquals(4, stringArray0.length);
      assertNotNull(persistentHashSet0);
      
      KafkaSpoutConfig.Builder<Integer, PersistentVector> kafkaSpoutConfig_Builder7 = null;
      try {
        kafkaSpoutConfig_Builder7 = new KafkaSpoutConfig.Builder<Integer, PersistentVector>(string0, serializableDeserializer0, kafkaSpoutConfig_Builder0.valueDes, persistentHashSet0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class clojure.lang.RT
         //
         verifyException("clojure.lang.APersistentSet", e);
      }
  }

  @Test(timeout = 11000)
  public void test13()  throws Throwable  {
      KafkaSpoutConfig<Object, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, DoubleDeserializer>();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig0);
      
      Deserializer<DoubleDeserializer> deserializer0 = kafkaSpoutConfig0.getValueDeserializer();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNull(deserializer0);
      
      long long0 = kafkaSpoutConfig0.getPollTimeoutMs();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, long0);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      
      String string0 = "h :=iBV}q`";
      KafkaSpoutConfig.Builder<DoubleDeserializer, PersistentVector> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<DoubleDeserializer, PersistentVector>(string0, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.subscription);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<DoubleDeserializer, PersistentVector> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setKey((SerializableDeserializer<DoubleDeserializer>) kafkaSpoutConfig0.keyDes);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<DoubleDeserializer, PersistentVector> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxRetries(kafkaSpoutConfig0.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      Func<ConsumerRecord<DoubleDeserializer, PersistentVector>, List<Object>> func0 = (Func<ConsumerRecord<DoubleDeserializer, PersistentVector>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      DefaultRecordTranslator<StringDeserializer, BytesDeserializer> defaultRecordTranslator0 = new DefaultRecordTranslator<StringDeserializer, BytesDeserializer>();
      assertNotNull(defaultRecordTranslator0);
      
      Fields fields0 = defaultRecordTranslator0.getFieldsFor(string0);
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      KafkaSpoutConfig.Builder<DoubleDeserializer, PersistentVector> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setRecordTranslator(func0, fields0, string0);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(5, fields0.size());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      String string1 = "L(";
      KafkaSpoutConfig.FirstPollOffsetStrategy kafkaSpoutConfig_FirstPollOffsetStrategy0 = KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
      SerializableDeserializer<ByteBufferDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteBufferDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.FirstPollOffsetStrategy.valueOf(string1);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.L(
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test14()  throws Throwable  {
      KafkaSpoutConfig<ByteArrayDeserializer, Integer> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteArrayDeserializer, Integer>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = kafkaSpoutConfig0.toString();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string0);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(string0);
  }

  @Test(timeout = 11000)
  public void test15()  throws Throwable  {
      String string0 = "{";
      LinkedTransferQueue<String> linkedTransferQueue0 = new LinkedTransferQueue<String>();
      assertFalse(linkedTransferQueue0.contains(string0));
      assertNotNull(linkedTransferQueue0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = KafkaSpoutConfig.builder(string0, (Collection<String>) linkedTransferQueue0);
      assertFalse(linkedTransferQueue0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
  }

  @Test(timeout = 11000)
  public void test16()  throws Throwable  {
      String string0 = "map->CompiledRoute";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      int int0 = 932;
      Pattern pattern0 = Pattern.compile(string0, int0);
      assertEquals("map->CompiledRoute", pattern0.pattern());
      assertEquals(996, pattern0.flags());
      assertEquals("map->CompiledRoute", pattern0.toString());
      assertNotNull(pattern0);
      
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, BytesDeserializer>(string0, class0, class1, pattern0);
      assertEquals("map->CompiledRoute", pattern0.pattern());
      assertEquals(996, pattern0.flags());
      assertEquals("map->CompiledRoute", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string1 = "clojure.core$fn__6707";
      String string2 = "EV[>[t%-@C[>5p7b";
      KafkaSpoutConfig.Builder<Object, BytesDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setSSLTruststore(string1, string2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("map->CompiledRoute", pattern0.pattern());
      assertEquals(996, pattern0.flags());
      assertEquals("map->CompiledRoute", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
  }

  @Test(timeout = 11000)
  public void test17()  throws Throwable  {
      KafkaSpoutConfig.Builder<Deserializer<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Deserializer<Object>, ByteBufferDeserializer>();
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy kafkaSpoutConfig_FirstPollOffsetStrategy0 = KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
      KafkaSpoutConfig.Builder<Deserializer<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setFirstPollOffsetStrategy(kafkaSpoutConfig_FirstPollOffsetStrategy0);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string0 = "";
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder1.setSSLKeystore(string0, string0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test18()  throws Throwable  {
      String string0 = ";Qv,{,@&rY)PMq6)BW=";
      Class<IntegerDeserializer> class0 = IntegerDeserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[0];
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer>(string0, class0, class1, stringArray0);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 18L;
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setPollTimeoutMs(long0);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(18L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxRetries(kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(18L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string1 = "kQ";
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setSSLKeystore(string1, string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(18L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<String, StringDeserializer> kafkaSpoutConfig_Builder4 = new KafkaSpoutConfig.Builder<String, StringDeserializer>(string0, kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder3.keyDes, kafkaSpoutConfig_Builder2.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(18L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig.Builder<DoubleDeserializer, StringDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setKey((SerializableDeserializer<DoubleDeserializer>) kafkaSpoutConfig_Builder0.keyDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(18L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(18L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
  }

  @Test(timeout = 11000)
  public void test19()  throws Throwable  {
      KafkaSpoutConfig<Object, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, StringDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertNotNull(kafkaSpoutConfig0);
      
      Class<Deserializer> class0 = Deserializer.class;
      kafkaSpoutConfig0.valueDesClazz = class0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isArray());
      assertEquals("interface org.apache.kafka.common.serialization.Deserializer", kafkaSpoutConfig0.valueDesClazz.toString());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isAnnotation());
      assertTrue(kafkaSpoutConfig0.valueDesClazz.isInterface());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isPrimitive());
      assertEquals(1537, kafkaSpoutConfig0.valueDesClazz.getModifiers());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isEnum());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isSynthetic());
      
      RecordTranslator<Object, StringDeserializer> recordTranslator0 = kafkaSpoutConfig0.getTranslator();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertNull(recordTranslator0);
      
      String string0 = "U:lW*15fU!cFJDkXyup";
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<String, String>(string0, kafkaSpoutConfig0.keyDes, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.subscription);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setPartitionRefreshPeriodMs(kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      int int0 = 3856;
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxPartitionFectchBytes(int0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string1 = "";
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setProp(string1, (Object) class0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, String> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((Class<? extends Deserializer<IntegerDeserializer>>) kafkaSpoutConfig_Builder2.valueDesClazz);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Delayed> kafkaSpoutConfig_Builder5 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, Delayed>();
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      
      int int1 = 0;
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder5.setFetchMinBytes(int1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test20()  throws Throwable  {
      String string0 = ",v =";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String string1 = "write_pos";
      int int0 = 1415;
      Pattern pattern0 = Pattern.compile(string1, int0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1479, pattern0.flags());
      assertEquals("write_pos", pattern0.toString());
      assertEquals("write_pos", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, Delayed> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, Delayed>(string0, class0, class1, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1479, pattern0.flags());
      assertEquals("write_pos", pattern0.toString());
      assertEquals("write_pos", pattern0.pattern());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string2 = "xml?";
      LongDeserializer longDeserializer0 = new LongDeserializer();
      assertNotNull(longDeserializer0);
      
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, Delayed> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setProp(string2, (Object) longDeserializer0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(1479, pattern0.flags());
      assertEquals("write_pos", pattern0.toString());
      assertEquals("write_pos", pattern0.pattern());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      String string3 = "cK!Z!z]5eO";
      Pattern pattern1 = Pattern.compile(string3);
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals(0, pattern1.flags());
      assertEquals("cK!Z!z]5eO", pattern1.pattern());
      assertEquals("cK!Z!z]5eO", pattern1.toString());
      assertNotNull(pattern1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(pattern1, pattern0);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<Object, PersistentVector>(string2, kafkaSpoutConfig_Builder1.keyDes, kafkaSpoutConfig_Builder0.valueDes, pattern1);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(pattern0.equals((Object)pattern1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals(1479, pattern0.flags());
      assertEquals("write_pos", pattern0.toString());
      assertEquals("write_pos", pattern0.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("cK!Z!z]5eO", pattern1.pattern());
      assertEquals("cK!Z!z]5eO", pattern1.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setRetry(kafkaSpoutConfig_Builder1.retryService);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(pattern0.equals((Object)pattern1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals(1479, pattern0.flags());
      assertEquals("write_pos", pattern0.toString());
      assertEquals("write_pos", pattern0.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("cK!Z!z]5eO", pattern1.pattern());
      assertEquals("cK!Z!z]5eO", pattern1.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(pattern0, pattern1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(pattern1, pattern0);
  }

  @Test(timeout = 11000)
  public void test21()  throws Throwable  {
      KafkaSpoutConfig<Object, Object> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, Object>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig0);
      
      int int0 = (-439);
      kafkaSpoutConfig0.maxUncommittedOffsets = int0;
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals((-439), kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      Deserializer<Object> deserializer0 = kafkaSpoutConfig0.getValueDeserializer();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals((-439), kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals((-439), kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNull(deserializer0);
      
      Deserializer<Object> deserializer1 = kafkaSpoutConfig0.getValueDeserializer();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals((-439), kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals((-439), kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNull(deserializer1);
      
      Deserializer<Object> deserializer2 = kafkaSpoutConfig0.getValueDeserializer();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals((-439), kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals((-439), kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNull(deserializer2);
      
      KafkaSpoutConfig.Builder<Object, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string0 = "h_*7*h";
      String string1 = "enable.auto.commit";
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder0.setSSLKeystore(string0, string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test22()  throws Throwable  {
      String string0 = "@qz{/wlN=2L Ua8";
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      NamedSubscription namedSubscription0 = new NamedSubscription(stringArray0);
      assertEquals(1, stringArray0.length);
      assertNotNull(namedSubscription0);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteBufferDeserializer>(string0, class0, class0, namedSubscription0);
      assertEquals(1, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      int int0 = (-1759);
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setFetchMinBytes(int0);
      assertEquals(1, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Collection<String> collection0 = null;
      KafkaSpoutConfig.Builder<StringDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder2 = null;
      try {
        kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<StringDeserializer, BytesDeserializer>(stringArray0[0], kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder1.valueDes, collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 11000)
  public void test23()  throws Throwable  {
      KafkaSpoutConfig<StringDeserializer, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, StringDeserializer>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      Subscription subscription0 = kafkaSpoutConfig0.getSubscription();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNull(subscription0);
      
      String string0 = "max.poll.records";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      long long0 = 197L;
      LongRange longRange0 = (LongRange)LongRange.create(long0);
      assertFalse(longRange0.isEmpty());
      assertNotNull(longRange0);
      
      PersistentTreeSet persistentTreeSet0 = PersistentTreeSet.create((ISeq) longRange0);
      assertFalse(longRange0.isEmpty());
      assertNotNull(persistentTreeSet0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder0 = null;
      try {
        kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, IntegerDeserializer>(string0, class0, class1, persistentTreeSet0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class clojure.lang.RT
         //
         verifyException("clojure.lang.APersistentSet", e);
      }
  }

  @Test(timeout = 11000)
  public void test24()  throws Throwable  {
      KafkaSpoutConfig<Object, PersistentVector> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, PersistentVector>();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = kafkaSpoutConfig0.toString();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string0);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(string0);
      
      int int0 = kafkaSpoutConfig0.getMaxUncommittedOffsets();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, int0);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      
      String string1 = "ZVLvtmfChq7&xV<9";
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer>(string1, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig0.subscription);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Properties properties0 = new Properties();
      assertTrue(properties0.isEmpty());
      assertEquals(0, properties0.size());
      assertNotNull(properties0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setProp(properties0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertTrue(properties0.isEmpty());
      assertEquals(0, properties0.size());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRecordTranslator(kafkaSpoutConfig0.translator);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertTrue(properties0.isEmpty());
      assertEquals(0, properties0.size());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string2 = "";
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setSecurityProtocol(string2);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertTrue(properties0.isEmpty());
      assertEquals(0, properties0.size());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((SerializableDeserializer<ForkJoinTask<Object>>) kafkaSpoutConfig0.keyDes);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertTrue(properties0.isEmpty());
      assertEquals(0, properties0.size());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Object>, ByteBufferDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setRecordTranslator(kafkaSpoutConfig_Builder2.translator);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertTrue(properties0.isEmpty());
      assertEquals(0, properties0.size());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
  }

  @Test(timeout = 11000)
  public void test25()  throws Throwable  {
      String string0 = "fetch.min.bytes";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String string1 = ",^Bw";
      int int0 = 1833;
      Pattern pattern0 = Pattern.compile(string1, int0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer>(string0, class0, class1, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      RecordTranslator<StringDeserializer, ByteArrayDeserializer> recordTranslator0 = null;
      KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRecordTranslator(recordTranslator0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      
      String string2 = null;
      KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder0.setSSLKeystore(string2, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string3 = ", translator=";
      Class<Deserializer> class2 = Deserializer.class;
      Class<Deserializer> class3 = Deserializer.class;
      String[] stringArray0 = new String[0];
      KafkaSpoutConfig.Builder<Integer, Object> kafkaSpoutConfig_Builder3 = new KafkaSpoutConfig.Builder<Integer, Object>(string3, class2, class3, stringArray0);
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<Integer, Object> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setFirstPollOffsetStrategy(kafkaSpoutConfig_Builder2.firstPollOffsetStrategy);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0, stringArray0.length);
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(class0, class3);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class1, class3);
      assertSame(class1, class0);
      assertSame(class1, class2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertSame(class2, class3);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(class3, class0);
      assertSame(class3, class2);
      assertSame(class3, class1);
      
      String string4 = "666w&)*W*";
      Class<Deserializer> class4 = Deserializer.class;
      String string5 = "";
      Pattern pattern1 = Pattern.compile(string5);
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals("", pattern1.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("", pattern1.toString());
      assertNotNull(pattern1);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(pattern1, pattern0);
      
      KafkaSpoutConfig.Builder<String, DoubleDeserializer> kafkaSpoutConfig_Builder5 = new KafkaSpoutConfig.Builder<String, DoubleDeserializer>(string4, kafkaSpoutConfig_Builder2.keyDesClazz, class4, pattern1);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(pattern0.equals((Object)pattern1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals("", pattern1.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("", pattern1.toString());
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<String, DoubleDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setProp(string3, (Object) kafkaSpoutConfig_Builder3);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(pattern0.equals((Object)pattern1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals(0, stringArray0.length);
      assertEquals("", pattern1.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("", pattern1.toString());
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(class0, class3);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class0, class4);
      assertSame(class1, class3);
      assertSame(class1, class4);
      assertSame(class1, class0);
      assertSame(class1, class2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertNotSame(pattern0, pattern1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string4);
      assertSame(class2, class3);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(class2, class4);
      assertSame(class3, class4);
      assertSame(class3, class0);
      assertSame(class3, class2);
      assertSame(class3, class1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertSame(class4, class1);
      assertSame(class4, class2);
      assertSame(class4, class3);
      assertSame(class4, class0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(pattern1, pattern0);
      
      KafkaSpoutConfig<String, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<String, DoubleDeserializer>(kafkaSpoutConfig_Builder6);
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(pattern0.equals((Object)pattern1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals(0, stringArray0.length);
      assertEquals("", pattern1.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("", pattern1.toString());
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig0);
      
      String string6 = kafkaSpoutConfig0.getConsumerGroupId();
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(pattern0.equals((Object)pattern1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string4));
      assertFalse(string5.equals((Object)string0));
      assertFalse(pattern1.equals((Object)pattern0));
      assertEquals(0, stringArray0.length);
      assertEquals("", pattern1.pattern());
      assertEquals(0, pattern1.flags());
      assertEquals("", pattern1.toString());
      assertEquals(",^Bw", pattern0.pattern());
      assertEquals(1897, pattern0.flags());
      assertEquals(",^Bw", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNull(string6);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertSame(class0, class3);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class0, class4);
      assertSame(class1, class3);
      assertSame(class1, class4);
      assertSame(class1, class0);
      assertSame(class1, class2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertNotSame(pattern0, pattern1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(string3, string4);
      assertSame(class2, class3);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(class2, class4);
      assertSame(class3, class4);
      assertSame(class3, class0);
      assertSame(class3, class2);
      assertSame(class3, class1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string5);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertSame(class4, class1);
      assertSame(class4, class2);
      assertSame(class4, class3);
      assertSame(class4, class0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string3);
      assertNotSame(string5, string4);
      assertNotSame(string5, string0);
      assertNotSame(pattern1, pattern0);
  }

  @Test(timeout = 11000)
  public void test26()  throws Throwable  {
      String string0 = null;
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, ByteArrayDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, ByteArrayDeserializer>();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig0);
      
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = kafkaSpoutConfig0.valueDes;
      assertNull(serializableDeserializer0);
      
      String[] stringArray0 = new String[5];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      String string1 = "c1N}p (~1H-";
      stringArray0[4] = string1;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, String> kafkaSpoutConfig_Builder0 = null;
      try {
        kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, String>(string0, serializableDeserializer0, kafkaSpoutConfig0.keyDes, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test27()  throws Throwable  {
      String string0 = "`1/]{GhOlf";
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = null;
      SerializableDeserializer<Integer> serializableDeserializer1 = null;
      String[] stringArray0 = new String[8];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      String string1 = "";
      stringArray0[2] = string1;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      String string2 = "";
      stringArray0[6] = string2;
      stringArray0[7] = string0;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer>(string0, serializableDeserializer0, serializableDeserializer1, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(8, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setBootstrapServers(stringArray0[2]);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(8, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Object> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, Object>(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder1.valueDes, class0, kafkaSpoutConfig_Builder1.valueDes, class1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(8, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      Class<Deserializer> class2 = Deserializer.class;
      Class<Deserializer> class3 = Deserializer.class;
      KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder3 = new KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer>(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder2.valueDes, class2, kafkaSpoutConfig_Builder1.valueDes, class3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(8, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
  }

  @Test(timeout = 11000)
  public void test28()  throws Throwable  {
      String string0 = "org.apache.storm.kafka.spout.KafkaSpoutConfig";
      SerializableDeserializer<PersistentVector> serializableDeserializer0 = (SerializableDeserializer<PersistentVector>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<DoubleDeserializer> serializableDeserializer1 = (SerializableDeserializer<DoubleDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String string1 = "|~";
      Pattern pattern0 = Pattern.compile(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals("|~", pattern0.pattern());
      assertEquals("|~", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<PersistentVector, DoubleDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<PersistentVector, DoubleDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals("|~", pattern0.pattern());
      assertEquals("|~", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
  }

  @Test(timeout = 11000)
  public void test29()  throws Throwable  {
      String string0 = "$VALUES";
      SerializableDeserializer<ByteBufferDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteBufferDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<Object> serializableDeserializer1 = (SerializableDeserializer<Object>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[3];
      stringArray0[0] = string0;
      String string1 = "";
      stringArray0[1] = string1;
      stringArray0[2] = string0;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Object> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, Object>(string0, serializableDeserializer0, serializableDeserializer1, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Object> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setBootstrapServers(string0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<BytesDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<BytesDeserializer, ByteBufferDeserializer>(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder0.valueDes, class0, kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder1.keyDesClazz);
      assertFalse(string0.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig<BytesDeserializer, ByteBufferDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<BytesDeserializer, ByteBufferDeserializer>(kafkaSpoutConfig_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      String string2 = kafkaSpoutConfig0.getConsumerGroupId();
      assertFalse(string0.equals((Object)string1));
      assertEquals(3, stringArray0.length);
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertNull(string2);
      assertNotSame(string0, string1);
  }

  @Test(timeout = 11000)
  public void test30()  throws Throwable  {
      String string0 = "ssl.key.password";
      SerializableDeserializer<Nimbus.uploadNewCredentials_result._Fields> serializableDeserializer0 = (SerializableDeserializer<Nimbus.uploadNewCredentials_result._Fields>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<Deserializer<ByteArrayDeserializer>> serializableDeserializer1 = (SerializableDeserializer<Deserializer<ByteArrayDeserializer>>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Pattern pattern0 = null;
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Deserializer<ByteArrayDeserializer>>(string0, serializableDeserializer0, serializableDeserializer1, pattern0);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setKey((Class<? extends Deserializer<ByteArrayDeserializer>>) class0);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
  }

  @Test(timeout = 11000)
  public void test31()  throws Throwable  {
      String string0 = "";
      Class<Deserializer> class0 = Deserializer.class;
      String string1 = "false";
      int int0 = 3501;
      Pattern pattern0 = Pattern.compile(string1, int0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(3565, pattern0.flags());
      assertEquals("false", pattern0.toString());
      assertEquals("false", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<BytesDeserializer, StringDeserializer> kafkaSpoutConfig_Builder0 = null;
      try {
        kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<BytesDeserializer, StringDeserializer>(string0, class0, class0, pattern0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test32()  throws Throwable  {
      KafkaSpoutConfig<LongDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig0 = new KafkaSpoutConfig<LongDeserializer, Deserializer<ByteArrayDeserializer>>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      long long0 = 404L;
      long long1 = 3821L;
      kafkaSpoutConfig0.offsetCommitPeriodMs = long1;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(3821L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      
      kafkaSpoutConfig0.partitionRefreshPeriodMs = long0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(404L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(3821L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      Map<String, Object> map0 = kafkaSpoutConfig0.getKafkaProps();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(404L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(3821L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(3821L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(404L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNull(map0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<Delayed>, ByteBufferDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<Delayed>, ByteBufferDeserializer>();
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      kafkaSpoutConfig_Builder0.kafkaProps = map0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(404L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(3821L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder0.setMaxPartitionFectchBytes(kafkaSpoutConfig0.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test33()  throws Throwable  {
      KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      kafkaSpoutConfig0.getFirstPollOffsetStrategy();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      
      KafkaSpoutConfig<LongDeserializer, BytesDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<LongDeserializer, BytesDeserializer>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig1);
      
      int int0 = kafkaSpoutConfig1.getMaxUncommittedOffsets();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, int0);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteBufferDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteBufferDeserializer>();
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig2);
      
      int int1 = kafkaSpoutConfig2.getMaxUncommittedOffsets();
      assertTrue(int1 == int0);
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0, int1);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig0.kafkaProps);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test34()  throws Throwable  {
      KafkaSpoutConfig<Object, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, DoubleDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = "org.apache.storm.generated.Nimbus$killTopologyWithOpts_args$_Fields";
      Class<Deserializer> class0 = Deserializer.class;
      Class<IntegerDeserializer> class1 = IntegerDeserializer.class;
      KafkaSpoutConfig.Builder<StringDeserializer, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, Integer>(string0, kafkaSpoutConfig0.keyDes, class0, kafkaSpoutConfig0.valueDes, class1, kafkaSpoutConfig0.subscription);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Integer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setKey((SerializableDeserializer<StringDeserializer>) kafkaSpoutConfig0.valueDes);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Properties properties0 = new Properties();
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      
      kafkaSpoutConfig_Builder0.keyDes = kafkaSpoutConfig0.keyDes;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      KafkaSpoutConfig.Builder<StringDeserializer, Integer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setProp(properties0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<StringDeserializer, Integer> kafkaSpoutConfig1 = new KafkaSpoutConfig<StringDeserializer, Integer>(kafkaSpoutConfig_Builder2);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      
      Deserializer<StringDeserializer> deserializer0 = kafkaSpoutConfig1.getKeyDeserializer();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertNull(deserializer0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      StringReader stringReader0 = new StringReader(string0);
      assertNotNull(stringReader0);
      
      PushbackReader pushbackReader0 = new PushbackReader(stringReader0);
      assertNotNull(pushbackReader0);
      
      PushbackReader pushbackReader1 = new PushbackReader(pushbackReader0, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertFalse(pushbackReader1.equals((Object)pushbackReader0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(pushbackReader1);
      
      properties0.load((Reader) pushbackReader1);
      assertFalse(pushbackReader0.equals((Object)pushbackReader1));
      assertFalse(pushbackReader1.equals((Object)pushbackReader0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotSame(pushbackReader0, pushbackReader1);
      assertNotSame(pushbackReader1, pushbackReader0);
      
      KafkaSpoutRetryExponentialBackoff kafkaSpoutRetryExponentialBackoff0 = (KafkaSpoutRetryExponentialBackoff)kafkaSpoutConfig1.retryService;
      assertNotNull(kafkaSpoutRetryExponentialBackoff0);
      
      kafkaSpoutConfig0.retryService = (KafkaSpoutRetryService) kafkaSpoutRetryExponentialBackoff0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      
      Map<String, Object> map0 = kafkaSpoutConfig0.getKafkaProps();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNull(map0);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = string0;
      String string1 = "DY:EgMcyJ.4q";
      stringArray0[1] = string1;
      KafkaSpoutConfig.Builder<LongDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder3 = new KafkaSpoutConfig.Builder<LongDeserializer, ByteBufferDeserializer>(string0, kafkaSpoutConfig_Builder1.keyDes, kafkaSpoutConfig_Builder0.keyDes, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<LongDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setFirstPollOffsetStrategy(kafkaSpoutConfig_Builder2.firstPollOffsetStrategy);
      assertFalse(string0.equals((Object)string1));
      assertEquals(2, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class2 = Deserializer.class;
      Class<Deserializer> class3 = Deserializer.class;
      KafkaSpoutConfig.Builder<ForkJoinTask<StringDeserializer>, Integer> kafkaSpoutConfig_Builder5 = new KafkaSpoutConfig.Builder<ForkJoinTask<StringDeserializer>, Integer>(kafkaSpoutConfig_Builder0, kafkaSpoutConfig1.valueDes, class2, kafkaSpoutConfig_Builder1.keyDes, class3);
      assertFalse(string0.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      
      long long0 = (-1557L);
      kafkaSpoutConfig_Builder5.pollTimeoutMs = long0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      
      KafkaSpoutConfig<ForkJoinTask<StringDeserializer>, Integer> kafkaSpoutConfig2 = new KafkaSpoutConfig<ForkJoinTask<StringDeserializer>, Integer>(kafkaSpoutConfig_Builder5);
      assertFalse(string0.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals((-1557L), kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals((-1557L), kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals((-1557L), kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig2);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy kafkaSpoutConfig_FirstPollOffsetStrategy0 = kafkaSpoutConfig2.getFirstPollOffsetStrategy();
      assertFalse(string0.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(1, properties0.size());
      assertFalse(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals((-1557L), kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig_FirstPollOffsetStrategy0);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals((-1557L), kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals((-1557L), kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertNotSame(string0, string1);
      assertSame(class0, class3);
      assertSame(class0, class2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(class2, class3);
      assertSame(class2, class0);
      assertSame(class3, class0);
      assertSame(class3, class2);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.FirstPollOffsetStrategy.valueOf(stringArray0[1]);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.DY:EgMcyJ.4q
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test35()  throws Throwable  {
      KafkaSpoutConfig.Builder<StringDeserializer, Deserializer<String>> kafkaSpoutConfig_Builder0 = null;
      KafkaSpoutConfig<StringDeserializer, Deserializer<String>> kafkaSpoutConfig0 = null;
      try {
        kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, Deserializer<String>>(kafkaSpoutConfig_Builder0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test36()  throws Throwable  {
      KafkaSpoutConfig<StringDeserializer, BytesDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, BytesDeserializer>();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutConfig<String, LongDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<String, LongDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig1);
      
      KafkaSpoutRetryService kafkaSpoutRetryService0 = kafkaSpoutConfig1.getRetryService();
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertNull(kafkaSpoutRetryService0);
      
      kafkaSpoutConfig0.retryService = kafkaSpoutRetryService0;
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      
      KafkaSpoutRetryService kafkaSpoutRetryService1 = kafkaSpoutConfig0.getRetryService();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNull(kafkaSpoutRetryService1);
      
      String string0 = "s";
      Pattern pattern0 = Pattern.compile(string0);
      assertEquals(0, pattern0.flags());
      assertEquals("s", pattern0.toString());
      assertEquals("s", pattern0.pattern());
      assertNotNull(pattern0);
      
      Predicate<String> predicate0 = pattern0.asPredicate();
      assertEquals(0, pattern0.flags());
      assertEquals("s", pattern0.toString());
      assertEquals("s", pattern0.pattern());
      assertNotNull(predicate0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = KafkaSpoutConfig.builder(string0, pattern0);
      assertEquals(0, pattern0.flags());
      assertEquals("s", pattern0.toString());
      assertEquals("s", pattern0.pattern());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig1.kafkaProps);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test37()  throws Throwable  {
      String string0 = "oqEk>";
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteArrayDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<Integer> serializableDeserializer1 = null;
      String[] stringArray0 = new String[9];
      String string1 = "";
      stringArray0[0] = string1;
      String string2 = "";
      stringArray0[1] = string2;
      String string3 = "n4M#t.6-\\M$@nq<0a";
      stringArray0[2] = string3;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      stringArray0[6] = string0;
      stringArray0[7] = string0;
      stringArray0[8] = string0;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer>(string0, serializableDeserializer0, serializableDeserializer1, stringArray0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(9, stringArray0.length);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Func<ConsumerRecord<ByteArrayDeserializer, Integer>, List<Object>> func0 = null;
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRecordTranslator(func0, fields0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(9, stringArray0.length);
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxUncommittedOffsets(kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(9, stringArray0.length);
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setMaxPollRecords(kafkaSpoutConfig_Builder1.maxRetries);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(9, stringArray0.length);
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      int int0 = 3031;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setFetchMinBytes(int0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(9, stringArray0.length);
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setMaxPollRecords(kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(9, stringArray0.length);
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
  }

  @Test(timeout = 11000)
  public void test38()  throws Throwable  {
      KafkaSpoutConfig<StringDeserializer, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, DoubleDeserializer>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutRetryService kafkaSpoutRetryService0 = kafkaSpoutConfig0.getRetryService();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNull(kafkaSpoutRetryService0);
      
      String string0 = "Kc}0";
      String string1 = "Gn[w";
      PersistentList persistentList0 = new PersistentList(string1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(persistentList0.isEmpty());
      assertEquals(1, persistentList0.count());
      assertNotNull(persistentList0);
      
      PersistentTreeSet persistentTreeSet0 = PersistentTreeSet.create((ISeq) persistentList0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(persistentList0.isEmpty());
      assertEquals(1, persistentList0.count());
      assertNotNull(persistentTreeSet0);
      assertNotSame(string1, string0);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string0, (Collection<String>) persistentTreeSet0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // Could not initialize class clojure.lang.RT
         //
         verifyException("clojure.lang.APersistentSet", e);
      }
  }

  @Test(timeout = 11000)
  public void test39()  throws Throwable  {
      String string0 = "ucD)'Wi\\31iU>k.k'5";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String string1 = "ZVj#Xqk:3E~[Oqo${";
      int int0 = 1174;
      Pattern pattern0 = Pattern.compile(string1, int0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      PatternSubscription patternSubscription0 = new PatternSubscription(pattern0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNotNull(patternSubscription0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, DoubleDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, DoubleDeserializer>(string0, class0, class1, patternSubscription0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig<String, IntegerDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<String, IntegerDeserializer>();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig0);
      
      Map<String, Object> map0 = KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig_Builder0.kafkaProps);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertFalse(map0.isEmpty());
      assertEquals(2, map0.size());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(map0);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      
      Deserializer<IntegerDeserializer> deserializer0 = kafkaSpoutConfig0.getValueDeserializer();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNull(deserializer0);
      
      Map<String, Object> map1 = KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig_Builder0.kafkaProps);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertFalse(map1.isEmpty());
      assertEquals(2, map1.size());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(map1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      assertSame(map1, map0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer>(string1, kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig0.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      SerializableDeserializer<StringDeserializer> serializableDeserializer0 = kafkaSpoutConfig_Builder1.valueDes;
      assertNull(serializableDeserializer0);
      
      String[] stringArray0 = new String[8];
      stringArray0[0] = string1;
      stringArray0[1] = string0;
      stringArray0[2] = string1;
      stringArray0[3] = string1;
      stringArray0[4] = string1;
      stringArray0[5] = string0;
      stringArray0[6] = string0;
      stringArray0[7] = string0;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer>(string1, serializableDeserializer0, kafkaSpoutConfig0.valueDes, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setFirstPollOffsetStrategy(kafkaSpoutConfig0.firstPollOffsetStrategy);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      
      Properties properties0 = new Properties();
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertNotNull(properties0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setProp(properties0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      long long0 = 1000L;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setPollTimeoutMs(long0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(1000L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(1000L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      
      Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>> func0 = (Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      ByTopicRecordTranslator<Object, LongDeserializer> byTopicRecordTranslator0 = new ByTopicRecordTranslator<Object, LongDeserializer>(kafkaSpoutConfig_Builder1.translator);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(byTopicRecordTranslator0);
      
      String string2 = "";
      ByTopicRecordTranslator<Object, LongDeserializer> byTopicRecordTranslator1 = byTopicRecordTranslator0.forTopic(string2, kafkaSpoutConfig_Builder2.translator);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(1000L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNotNull(byTopicRecordTranslator1);
      assertSame(byTopicRecordTranslator1, byTopicRecordTranslator0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(byTopicRecordTranslator0, byTopicRecordTranslator1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      String string3 = null;
      Fields fields0 = byTopicRecordTranslator1.getFieldsFor(string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(1000L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNull(fields0);
      assertSame(byTopicRecordTranslator1, byTopicRecordTranslator0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(byTopicRecordTranslator0, byTopicRecordTranslator1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setRecordTranslator(func0, fields0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(1000L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(1000L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(1000L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertSame(byTopicRecordTranslator1, byTopicRecordTranslator0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(byTopicRecordTranslator0, byTopicRecordTranslator1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setFetchMinBytes(kafkaSpoutConfig0.DEFAULT_MAX_RETRIES);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(1000L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(1000L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(1000L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(1000L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertSame(byTopicRecordTranslator1, byTopicRecordTranslator0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(byTopicRecordTranslator0, byTopicRecordTranslator1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setProp(properties0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(8, stringArray0.length);
      assertEquals(1174, pattern0.flags());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.pattern());
      assertEquals("ZVj#Xqk:3E~[Oqo${", pattern0.toString());
      assertEquals("ZVj#Xqk:3E~[Oqo${", patternSubscription0.getTopicsString());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, properties0.size());
      assertTrue(properties0.isEmpty());
      assertEquals(1000L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(1000L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(1000L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(1000L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(1000L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertSame(byTopicRecordTranslator1, byTopicRecordTranslator0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(byTopicRecordTranslator0, byTopicRecordTranslator1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
  }

  @Test(timeout = 11000)
  public void test40()  throws Throwable  {
      String string0 = "false";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[5];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      String string1 = ", value=";
      stringArray0[3] = string1;
      String string2 = "uH{ftHfkG5V";
      stringArray0[4] = string2;
      KafkaSpoutConfig.Builder<IntegerDeserializer, Object> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<IntegerDeserializer, Object>(string0, class0, class1, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(5, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      int int0 = 1;
      KafkaSpoutConfig.Builder<IntegerDeserializer, Object> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setMaxRetries(int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertEquals(5, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(1, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(1, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class1);
      assertSame(class1, class0);
  }

  @Test(timeout = 11000)
  public void test41()  throws Throwable  {
      KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig0);
      
      Deserializer<ByteBufferDeserializer> deserializer0 = kafkaSpoutConfig0.getKeyDeserializer();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNull(deserializer0);
      
      String string0 = "";
      String[] stringArray0 = null;
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.Objects", e);
      }
  }

  @Test(timeout = 11000)
  public void test42()  throws Throwable  {
      KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      RecordTranslator<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> recordTranslator0 = kafkaSpoutConfig0.getTranslator();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNull(recordTranslator0);
      
      String string0 = "Da";
      KafkaSpoutConfig.DEFAULT_RETRY_SERVICE = kafkaSpoutConfig0.UNIT_TEST_RETRY_SERVICE;
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      
      Class<StringDeserializer> class0 = StringDeserializer.class;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<String, IntegerDeserializer>(string0, class0, kafkaSpoutConfig0.valueDesClazz, arrayList0);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setOffsetCommitPeriodMs(long0);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>>(string0, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig_Builder1.valueDesClazz, kafkaSpoutConfig0.valueDes, class1, kafkaSpoutConfig0.subscription);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setBootstrapServers(string0);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      String string1 = "clojure.core$thread_bound_QMARK_";
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setSSLKeystore(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setRecordTranslator(kafkaSpoutConfig_Builder1.translator);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setMaxRetries(kafkaSpoutConfig_Builder0.maxRetries);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      
      int int0 = 0;
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setMaxPartitionFectchBytes(int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setMaxRetries(kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder7);
      
      KafkaSpoutConfig<Integer, IntegerDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Integer, IntegerDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig1);
      
      RecordTranslator<Integer, IntegerDeserializer> recordTranslator1 = kafkaSpoutConfig1.getTranslator();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNull(recordTranslator1);
      
      KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer>();
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig2);
      
      long long1 = kafkaSpoutConfig2.getOffsetsCommitPeriodMs();
      assertTrue(long1 == long0);
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, long1);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      
      String string2 = "Qgqk C?tvI PJ<Dah";
      Class<IntegerDeserializer> class2 = IntegerDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder9 = new KafkaSpoutConfig.Builder<Integer, String>(string2, class2, kafkaSpoutConfig_Builder7.keyDesClazz, kafkaSpoutConfig_Builder6.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string2));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder9);
      
      Class<StringDeserializer> class3 = StringDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder10 = kafkaSpoutConfig_Builder9.setValue((Class<? extends Deserializer<String>>) class3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string2));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder10);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(class3, class0);
      
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder11 = kafkaSpoutConfig_Builder10.setMaxPollRecords(kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string2));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder11);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder12 = kafkaSpoutConfig_Builder11.setRetry(kafkaSpoutConfig_Builder5.retryService);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string2));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder12);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder10);
  }

  @Test(timeout = 11000)
  public void test43()  throws Throwable  {
      String string0 = "#_";
      SerializableDeserializer<IntegerDeserializer> serializableDeserializer0 = null;
      SerializableDeserializer<Deserializer<ByteArrayDeserializer>> serializableDeserializer1 = null;
      DefaultRecordTranslator<Deserializer<ByteArrayDeserializer>, Integer> defaultRecordTranslator0 = new DefaultRecordTranslator<Deserializer<ByteArrayDeserializer>, Integer>();
      assertNotNull(defaultRecordTranslator0);
      
      List<String> list0 = defaultRecordTranslator0.streams();
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<IntegerDeserializer, Deserializer<ByteArrayDeserializer>>(string0, serializableDeserializer0, serializableDeserializer1, list0);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Object> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<StringDeserializer, Object>();
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "{?x";
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder1.setBootstrapServers(string1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test44()  throws Throwable  {
      String string0 = "AgwEJ{YO*(f{/";
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[8];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      stringArray0[6] = string0;
      stringArray0[7] = string0;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, Integer>(string0, class0, class0, stringArray0);
      assertEquals(8, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig<Object, Object> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, Object>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      Map<String, Object> map0 = kafkaSpoutConfig0.kafkaProps;
      assertNull(map0);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder0.setProp(map0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 11000)
  public void test45()  throws Throwable  {
      String string0 = "J0y!D=kH#|C(\"=.8Q.^";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      HashSet<String> hashSet0 = new HashSet<String>();
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertFalse(hashSet0.contains(string0));
      assertNotNull(hashSet0);
      
      KafkaSpoutConfig.Builder<Delayed, LongDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Delayed, LongDeserializer>(string0, class0, class1, hashSet0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertFalse(hashSet0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<Delayed, LongDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setGroupId(string0);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertFalse(hashSet0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      
      KafkaSpoutConfig.Builder<Delayed, LongDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setProp(kafkaSpoutConfig_Builder0.kafkaProps);
      assertEquals(0, hashSet0.size());
      assertTrue(hashSet0.isEmpty());
      assertFalse(hashSet0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      SerializableDeserializer<LongDeserializer> serializableDeserializer0 = kafkaSpoutConfig_Builder2.valueDes;
      assertNull(serializableDeserializer0);
      
      // Undeclared exception!
      try { 
        Pattern.compile(string0);
        fail("Expecting exception: PatternSyntaxException");
      
      } catch(PatternSyntaxException e) {
         //
         // Unclosed group near index 19
         // J0y!D=kH#|C(\"=.8Q.^
         //
         verifyException("java.util.regex.Pattern", e);
      }
  }

  @Test(timeout = 11000)
  public void test46()  throws Throwable  {
      String string0 = "tTgBAjA?yxDP";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[7];
      String string1 = "EARLIEST";
      stringArray0[0] = string1;
      stringArray0[1] = string0;
      String string2 = "Fv}\"~a";
      stringArray0[2] = string2;
      stringArray0[3] = string0;
      String string3 = "";
      stringArray0[4] = string3;
      stringArray0[5] = string0;
      stringArray0[6] = string0;
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, Delayed> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, Delayed>(string0, class0, class1, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertEquals(7, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string4 = "org.apache.thrift.protocol.TJSONProtocol";
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteArrayDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer>(string4, kafkaSpoutConfig_Builder0.keyDes, serializableDeserializer0, kafkaSpoutConfig_Builder0.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setValue((SerializableDeserializer<ByteArrayDeserializer>) kafkaSpoutConfig_Builder0.keyDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setFetchMinBytes(kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(class0, class1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((Class<? extends Deserializer<Integer>>) kafkaSpoutConfig_Builder2.valueDesClazz);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(class0, class1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(class1, class0);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      
      KafkaSpoutConfig.Builder<Integer, ByteArrayDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setKey((SerializableDeserializer<Integer>) kafkaSpoutConfig_Builder2.keyDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertEquals(7, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(class0, class1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(class1, class0);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      
      Class<Deserializer> class2 = Deserializer.class;
      KafkaSpoutConfig.Builder<Integer, StringDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setValue((Class<? extends Deserializer<StringDeserializer>>) class2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(7, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertNotSame(string4, string2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertSame(class2, class0);
      assertSame(class2, class1);
      
      String string5 = "bootstrap.servers";
      Pattern pattern0 = Pattern.compile(string5);
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals("bootstrap.servers", pattern0.pattern());
      assertEquals(0, pattern0.flags());
      assertEquals("bootstrap.servers", pattern0.toString());
      assertNotNull(pattern0);
      assertNotSame(string5, string3);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string2);
      assertNotSame(string5, string4);
      
      KafkaSpoutConfig.Builder<LongDeserializer, String> kafkaSpoutConfig_Builder7 = new KafkaSpoutConfig.Builder<LongDeserializer, String>(stringArray0[6], kafkaSpoutConfig_Builder5.valueDes, kafkaSpoutConfig_Builder2.keyDes, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string4));
      assertEquals(7, stringArray0.length);
      assertEquals("bootstrap.servers", pattern0.pattern());
      assertEquals(0, pattern0.flags());
      assertEquals("bootstrap.servers", pattern0.toString());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
  }

  @Test(timeout = 11000)
  public void test47()  throws Throwable  {
      KafkaSpoutConfig<String, ByteArrayDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<String, ByteArrayDeserializer>();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = "Could not instantiate value deserializer ";
      PriorityQueue<String> priorityQueue0 = new PriorityQueue<String>();
      assertEquals(0, priorityQueue0.size());
      assertFalse(priorityQueue0.contains(string0));
      assertNotNull(priorityQueue0);
      
      KafkaSpoutConfig.Builder<String, ForkJoinTask<Object>> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<String, ForkJoinTask<Object>>(string0, kafkaSpoutConfig0.keyDesClazz, kafkaSpoutConfig0.keyDesClazz, priorityQueue0);
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, priorityQueue0.size());
      assertFalse(priorityQueue0.contains(string0));
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      SerializableDeserializer<String> serializableDeserializer0 = kafkaSpoutConfig_Builder0.keyDes;
      assertNull(serializableDeserializer0);
      
      kafkaSpoutConfig0.keyDes = serializableDeserializer0;
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, priorityQueue0.size());
      
      Stream<String> stream0 = priorityQueue0.stream();
      assertEquals(0, priorityQueue0.size());
      assertFalse(priorityQueue0.contains(string0));
      assertNotNull(stream0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder1 = KafkaSpoutConfig.builder(string0, (Collection<String>) priorityQueue0);
      assertEquals(0, priorityQueue0.size());
      assertFalse(priorityQueue0.contains(string0));
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig0.isConsumerAutoCommitMode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test48()  throws Throwable  {
      KafkaSpoutConfig<Object, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, Deserializer<ByteArrayDeserializer>>();
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertNotNull(kafkaSpoutConfig0);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig0.kafkaProps);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test49()  throws Throwable  {
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS = kafkaSpoutConfig0.DEFAULT_MAX_RETRIES;
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      
      Deserializer<Deserializer<ByteArrayDeserializer>> deserializer0 = kafkaSpoutConfig0.getKeyDeserializer();
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNull(deserializer0);
      
      KafkaSpoutConfig<String, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig1 = new KafkaSpoutConfig<String, Deserializer<ByteArrayDeserializer>>();
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      kafkaSpoutConfig1.retryService = kafkaSpoutConfig0.UNIT_TEST_RETRY_SERVICE;
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      
      long long0 = kafkaSpoutConfig1.getPollTimeoutMs();
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, long0);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      
      String string0 = "topology:";
      Class<Deserializer> class0 = Deserializer.class;
      Pattern pattern0 = Pattern.compile(string0);
      assertEquals("topology:", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertEquals("topology:", pattern0.pattern());
      assertNotNull(pattern0);
      
      KafkaSpoutConfig.Builder<Object, Object> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, Object>(string0, kafkaSpoutConfig1.keyDesClazz, class0, pattern0);
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals("topology:", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertEquals("topology:", pattern0.pattern());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<Object, Object> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setSecurityProtocol(string0);
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals("topology:", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertEquals("topology:", pattern0.pattern());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      int int0 = (-587);
      KafkaSpoutConfig.Builder<Object, Object> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxPartitionFectchBytes(int0);
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals("topology:", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertEquals("topology:", pattern0.pattern());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string1 = "security.protocol";
      String string2 = "ab\"94|V";
      String string3 = "{($\"@)\\ vdBX=_HmJr";
      KafkaSpoutConfig.Builder<Object, Object> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setSSLKeystore(string1, string2, string3);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals("topology:", pattern0.toString());
      assertEquals(0, pattern0.flags());
      assertEquals("topology:", pattern0.pattern());
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string1, string0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      
      List<String> list0 = RecordTranslator.DEFAULT_STREAM;
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string2));
      assertNotNull(list0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder4 = KafkaSpoutConfig.builder(string0, (Collection<String>) list0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string2));
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      
      KafkaSpoutConfig.Builder<Object, IntegerDeserializer> kafkaSpoutConfig_Builder5 = new KafkaSpoutConfig.Builder<Object, IntegerDeserializer>();
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<Object, IntegerDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setMaxRetries(kafkaSpoutConfig0.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder6);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder6.setValue((Class<? extends Deserializer<StringDeserializer>>) kafkaSpoutConfig_Builder2.keyDesClazz);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 11000)
  public void test50()  throws Throwable  {
      String string0 = "Ih~@Ailykx";
      SerializableDeserializer<Object> serializableDeserializer0 = (SerializableDeserializer<Object>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Class<Deserializer> class0 = Deserializer.class;
      SerializableDeserializer<Integer> serializableDeserializer1 = null;
      RoundRobinManualPartitioner roundRobinManualPartitioner0 = new RoundRobinManualPartitioner();
      assertNotNull(roundRobinManualPartitioner0);
      
      int int0 = 0;
      Pattern pattern0 = Pattern.compile(string0, int0);
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertNotNull(pattern0);
      
      ManualPartitionPatternSubscription manualPartitionPatternSubscription0 = new ManualPartitionPatternSubscription(roundRobinManualPartitioner0, pattern0);
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertEquals("Ih~@Ailykx", manualPartitionPatternSubscription0.getTopicsString());
      assertNotNull(manualPartitionPatternSubscription0);
      
      KafkaSpoutConfig.Builder<Object, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, Integer>(string0, serializableDeserializer0, class0, serializableDeserializer1, class0, manualPartitionPatternSubscription0);
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertEquals("Ih~@Ailykx", manualPartitionPatternSubscription0.getTopicsString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy kafkaSpoutConfig_FirstPollOffsetStrategy0 = KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
      KafkaSpoutConfig.Builder<Object, Integer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setFirstPollOffsetStrategy(kafkaSpoutConfig_FirstPollOffsetStrategy0);
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertEquals("Ih~@Ailykx", manualPartitionPatternSubscription0.getTopicsString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<Object, Integer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setOffsetCommitPeriodMs(long0);
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertEquals("Ih~@Ailykx", manualPartitionPatternSubscription0.getTopicsString());
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Object, Integer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setRetry(kafkaSpoutConfig_Builder0.retryService);
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertEquals("Ih~@Ailykx", manualPartitionPatternSubscription0.getTopicsString());
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Object, Integer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setValue((Class<? extends Deserializer<Integer>>) kafkaSpoutConfig_Builder2.keyDesClazz);
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(0, pattern0.flags());
      assertEquals("Ih~@Ailykx", pattern0.toString());
      assertEquals("Ih~@Ailykx", pattern0.pattern());
      assertEquals("Ih~@Ailykx", manualPartitionPatternSubscription0.getTopicsString());
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      
      String string1 = "";
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer> kafkaSpoutConfig_Builder5 = null;
      try {
        kafkaSpoutConfig_Builder5 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, Integer>(string1, kafkaSpoutConfig_Builder2.valueDes, kafkaSpoutConfig_Builder3.valueDesClazz, kafkaSpoutConfig_Builder1.keyDes, class1, manualPartitionPatternSubscription0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test51()  throws Throwable  {
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteArrayDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteArrayDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      int int0 = kafkaSpoutConfig0.getMaxTupleRetries();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, int0);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      
      String string0 = null;
      Object[] objectArray0 = new Object[2];
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[0] = object0;
      objectArray0[1] = (Object) kafkaSpoutConfig0;
      PersistentHashMap persistentHashMap0 = PersistentHashMap.create(objectArray0);
      assertEquals(2, objectArray0.length);
      assertEquals(1, persistentHashMap0.count());
      assertNotNull(persistentHashMap0);
      
      // Undeclared exception!
      try { 
        Nimbus.uploadNewCredentials_result._Fields.findByThriftIdOrThrow(int0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Field 0 doesn't exist!
         //
         verifyException("org.apache.storm.generated.Nimbus$uploadNewCredentials_result$_Fields", e);
      }
  }

  @Test(timeout = 11000)
  public void test52()  throws Throwable  {
      KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      long long0 = kafkaSpoutConfig0.getPartitionRefreshPeriodMs();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, long0);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      
      String string0 = "group-by*";
      String string1 = "clojure.test$fn__7616";
      Pattern pattern0 = Pattern.compile(string1, kafkaSpoutConfig0.maxRetries);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.test$fn__7616", pattern0.pattern());
      assertEquals("clojure.test$fn__7616", pattern0.toString());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = KafkaSpoutConfig.builder(string0, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.test$fn__7616", pattern0.pattern());
      assertEquals("clojure.test$fn__7616", pattern0.toString());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
  }

  @Test(timeout = 11000)
  public void test53()  throws Throwable  {
      KafkaSpoutConfig<Object, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Object, StringDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      SerializableDeserializer<Object> serializableDeserializer0 = (SerializableDeserializer<Object>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Deserializer<Object> deserializer0 = kafkaSpoutConfig0.getKeyDeserializer();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNull(deserializer0);
      
      kafkaSpoutConfig0.keyDes = serializableDeserializer0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig0.getConsumerGroupId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test54()  throws Throwable  {
      String string0 = null;
      Pattern pattern0 = null;
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string0, pattern0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test55()  throws Throwable  {
      KafkaSpoutConfig<Integer, String> kafkaSpoutConfig0 = new KafkaSpoutConfig<Integer, String>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = "m|qr+\\p2eM,";
      Pattern pattern0 = null;
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = KafkaSpoutConfig.builder(string0, pattern0);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Deserializer<Integer> deserializer0 = kafkaSpoutConfig0.getKeyDeserializer();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertNull(deserializer0);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy[] kafkaSpoutConfig_FirstPollOffsetStrategyArray0 = KafkaSpoutConfig.FirstPollOffsetStrategy.values();
      assertEquals(4, kafkaSpoutConfig_FirstPollOffsetStrategyArray0.length);
      assertNotNull(kafkaSpoutConfig_FirstPollOffsetStrategyArray0);
      
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<StringDeserializer, ForkJoinTask<Delayed>> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<StringDeserializer, ForkJoinTask<Delayed>>(kafkaSpoutConfig_Builder0, kafkaSpoutConfig0.keyDes, kafkaSpoutConfig_Builder0.valueDesClazz, kafkaSpoutConfig_Builder0.keyDes, class0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      kafkaSpoutConfig_Builder1.valueDes = kafkaSpoutConfig0.valueDes;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      
      KafkaSpoutConfig.Builder<StringDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setValue((Class<? extends Deserializer<ByteArrayDeserializer>>) class0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder3 = KafkaSpoutConfig.builder(string0, pattern0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder0));
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder0);
      
      Class<Deserializer> class1 = Deserializer.class;
      Class<Deserializer> class2 = Deserializer.class;
      KafkaSpoutConfig.Builder<Delayed, ByteBufferDeserializer> kafkaSpoutConfig_Builder4 = new KafkaSpoutConfig.Builder<Delayed, ByteBufferDeserializer>(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder0.valueDes, class1, kafkaSpoutConfig_Builder1.keyDes, class2);
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder4);
      
      int int0 = 2135;
      KafkaSpoutConfig.Builder<Delayed, ByteBufferDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setMaxUncommittedOffsets(int0);
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2135, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder0, kafkaSpoutConfig_Builder3);
      assertSame(class0, class1);
      assertSame(class0, class2);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      
      KafkaSpoutConfig.Builder<Delayed, ByteBufferDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setMaxPartitionFectchBytes(kafkaSpoutConfig_Builder3.maxRetries);
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2135, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2135, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder0, kafkaSpoutConfig_Builder3);
      assertSame(class0, class1);
      assertSame(class0, class2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder0);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      
      KafkaSpoutConfig.Builder<Delayed, ByteBufferDeserializer> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setRetry(kafkaSpoutConfig0.DEFAULT_RETRY_SERVICE);
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2135, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2135, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertNotSame(kafkaSpoutConfig_Builder0, kafkaSpoutConfig_Builder3);
      assertSame(class0, class1);
      assertSame(class0, class2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder0);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      
      KafkaSpoutConfig<Delayed, ByteBufferDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Delayed, ByteBufferDeserializer>(kafkaSpoutConfig_Builder7);
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2135, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2135, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2135, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getOffsetsCommitPeriodMs();
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2135, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(30000L, long0);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2135, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(2135, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2135, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotSame(kafkaSpoutConfig_Builder0, kafkaSpoutConfig_Builder3);
      assertSame(class0, class1);
      assertSame(class0, class2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder0);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
  }

  @Test(timeout = 11000)
  public void test56()  throws Throwable  {
      KafkaSpoutConfig<StringDeserializer, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, StringDeserializer>();
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Object> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Object>();
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Object> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setMaxRetries(kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Func<ConsumerRecord<Nimbus.uploadNewCredentials_result._Fields, Object>, List<Object>> func0 = (Func<ConsumerRecord<Nimbus.uploadNewCredentials_result._Fields, Object>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      String string0 = "";
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Object> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRecordTranslator(func0, fields0, string0);
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string1 = "AZE";
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder2.setProp(string1, (Object) kafkaSpoutConfig_Builder1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test57()  throws Throwable  {
      String string0 = "Eo";
      SerializableDeserializer<DoubleDeserializer> serializableDeserializer0 = (SerializableDeserializer<DoubleDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null, (String) null, (String) null).when(serializableDeserializer0).toString();
      String[] stringArray0 = new String[9];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      stringArray0[6] = string0;
      stringArray0[7] = string0;
      stringArray0[8] = string0;
      KafkaSpoutConfig.Builder<DoubleDeserializer, DoubleDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<DoubleDeserializer, DoubleDeserializer>(string0, serializableDeserializer0, serializableDeserializer0, stringArray0);
      assertEquals(9, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string1 = "m6@) Kig(P; g$ ";
      KafkaSpoutConfig.Builder<DoubleDeserializer, DoubleDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setGroupId(string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(9, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig<DoubleDeserializer, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<DoubleDeserializer, DoubleDeserializer>(kafkaSpoutConfig_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(9, stringArray0.length);
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals("m6@) Kig(P; g$ ", kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      String string2 = kafkaSpoutConfig0.toString();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(9, stringArray0.length);
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals("m6@) Kig(P; g$ ", kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
  }

  @Test(timeout = 11000)
  public void test58()  throws Throwable  {
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, String> kafkaSpoutConfig0 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, String>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = "";
      int int0 = 0;
      kafkaSpoutConfig0.maxUncommittedOffsets = int0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string0, stringArray0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test59()  throws Throwable  {
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, IntegerDeserializer>();
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      SerializableDeserializer<Delayed> serializableDeserializer0 = (SerializableDeserializer<Delayed>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder0.setKey(serializableDeserializer0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.HashMap", e);
      }
  }

  @Test(timeout = 11000)
  public void test60()  throws Throwable  {
      String string0 = "#jc~I] 7";
      SerializableDeserializer<ByteBufferDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteBufferDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[2];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer>(string0, class1, class1, stringArray0);
      assertEquals(2, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      SerializableDeserializer<StringDeserializer> serializableDeserializer1 = kafkaSpoutConfig_Builder0.valueDes;
      assertEquals(2, stringArray0.length);
      assertNull(serializableDeserializer1);
      
      Class<Deserializer> class2 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, StringDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, StringDeserializer>(string0, serializableDeserializer0, class0, serializableDeserializer1, class2, kafkaSpoutConfig_Builder0.subscription);
      assertEquals(2, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, StringDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setKey((SerializableDeserializer<ByteBufferDeserializer>) kafkaSpoutConfig_Builder0.keyDes);
      assertEquals(2, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      
      String string1 = null;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, StringDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setBootstrapServers(string1);
      assertEquals(2, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, StringDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setGroupId(string1);
      assertEquals(2, stringArray0.length);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(class0, class2);
      assertSame(class0, class1);
      assertSame(class1, class2);
      assertSame(class1, class0);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
  }

  @Test(timeout = 11000)
  public void test61()  throws Throwable  {
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, PersistentVector>();
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      String string0 = "\"G7";
      Class<Deserializer> class0 = Deserializer.class;
      Pattern pattern0 = null;
      KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, ByteArrayDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<Deserializer<ByteArrayDeserializer>, ByteArrayDeserializer>(string0, kafkaSpoutConfig_Builder0.keyDesClazz, class0, pattern0);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder0.build();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test62()  throws Throwable  {
      String string0 = "`Nl/\\aS.DN\"m-neWO";
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteArrayDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<StringDeserializer> serializableDeserializer1 = (SerializableDeserializer<StringDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String string1 = "clojure.pprint$fn__8488$fn__8489";
      Pattern pattern0 = Pattern.compile(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.pattern());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.toString());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.pattern());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      SerializableDeserializer<StringDeserializer> serializableDeserializer2 = kafkaSpoutConfig_Builder0.valueDes;
      assertNotNull(serializableDeserializer2);
      assertSame(serializableDeserializer2, serializableDeserializer1);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, StringDeserializer>(string0, serializableDeserializer0, serializableDeserializer2, kafkaSpoutConfig_Builder0.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.pattern());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.toString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<ByteArrayDeserializer, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteArrayDeserializer, StringDeserializer>(kafkaSpoutConfig_Builder1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.pattern());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.toString());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      Subscription subscription0 = kafkaSpoutConfig0.getSubscription();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.pattern());
      assertEquals("clojure.pprint$fn__8488$fn__8489", pattern0.toString());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals("clojure.pprint$fn__8488$fn__8489", subscription0.getTopicsString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(subscription0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(serializableDeserializer2, serializableDeserializer1);
  }

  @Test(timeout = 11000)
  public void test63()  throws Throwable  {
      Object[] objectArray0 = new Object[4];
      Object object0 = new Object();
      assertNotNull(object0);
      
      objectArray0[0] = object0;
      Object object1 = new Object();
      assertFalse(object1.equals((Object)object0));
      assertNotNull(object1);
      
      objectArray0[1] = object1;
      Object object2 = new Object();
      assertFalse(object2.equals((Object)object0));
      assertFalse(object2.equals((Object)object1));
      assertNotNull(object2);
      
      objectArray0[2] = object2;
      Object object3 = new Object();
      assertFalse(object3.equals((Object)object1));
      assertFalse(object3.equals((Object)object0));
      assertFalse(object3.equals((Object)object2));
      assertNotNull(object3);
      
      objectArray0[3] = object3;
      PersistentArrayMap persistentArrayMap0 = PersistentArrayMap.createAsIfByAssoc(objectArray0);
      assertEquals(4, objectArray0.length);
      assertEquals(2, persistentArrayMap0.capacity());
      assertEquals(2, persistentArrayMap0.count());
      assertNotNull(persistentArrayMap0);
      
      Iterator iterator0 = persistentArrayMap0.valIterator();
      assertEquals(4, objectArray0.length);
      assertEquals(2, persistentArrayMap0.capacity());
      assertEquals(2, persistentArrayMap0.count());
      assertNotNull(iterator0);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.setDefaultsAndGetKafkaProps(persistentArrayMap0);
        fail("Expecting exception: UnsupportedOperationException");
      
      } catch(UnsupportedOperationException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("clojure.lang.APersistentMap", e);
      }
  }

  @Test(timeout = 11000)
  public void test64()  throws Throwable  {
      KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteBufferDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig0);
      
      kafkaSpoutConfig0.getFirstPollOffsetStrategy();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      
      KafkaSpoutConfig<LongDeserializer, BytesDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<LongDeserializer, BytesDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      
      String string0 = ", retryService=";
      String[] stringArray0 = new String[0];
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = KafkaSpoutConfig.builder(string0, stringArray0);
      assertEquals(0, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      int int0 = kafkaSpoutConfig1.getMaxUncommittedOffsets();
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, int0);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteBufferDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, ByteBufferDeserializer>();
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig2);
      
      int int1 = new Integer(kafkaSpoutConfig0.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertFalse(int1 == int0);
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(10000000, int1);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig0.kafkaProps);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 11000)
  public void test65()  throws Throwable  {
      KafkaSpoutConfig<BytesDeserializer, LongDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<BytesDeserializer, LongDeserializer>();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      String string0 = kafkaSpoutConfig0.toString();
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string0);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(string0);
      
      KafkaSpoutConfig<StringDeserializer, String> kafkaSpoutConfig1 = new KafkaSpoutConfig<StringDeserializer, String>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig1);
      
      Map<String, Object> map0 = kafkaSpoutConfig1.getKafkaProps();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNull(map0);
      
      String string1 = null;
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<Object, Deserializer<ByteArrayDeserializer>> kafkaSpoutConfig_Builder0 = null;
      try {
        kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Object, Deserializer<ByteArrayDeserializer>>(string1, kafkaSpoutConfig0.keyDes, kafkaSpoutConfig1.keyDesClazz, kafkaSpoutConfig1.keyDes, class0, kafkaSpoutConfig1.subscription);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test66()  throws Throwable  {
      String string0 = "Ui,&&jQWe&1tZnLr";
      SerializableDeserializer<BytesDeserializer> serializableDeserializer0 = (SerializableDeserializer<BytesDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<String> serializableDeserializer1 = (SerializableDeserializer<String>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      KafkaSpoutConfig<StringDeserializer, Integer> kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, Integer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig0);
      
      Subscription subscription0 = kafkaSpoutConfig0.getSubscription();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertNull(subscription0);
      
      KafkaSpoutConfig.Builder<BytesDeserializer, String> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<BytesDeserializer, String>(string0, serializableDeserializer0, serializableDeserializer1, subscription0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      int int0 = (-41);
      Class<Deserializer> class0 = Deserializer.class;
      kafkaSpoutConfig0.keyDesClazz = class0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(kafkaSpoutConfig0.keyDesClazz.isInterface());
      assertEquals(1537, kafkaSpoutConfig0.keyDesClazz.getModifiers());
      assertFalse(kafkaSpoutConfig0.keyDesClazz.isEnum());
      assertFalse(kafkaSpoutConfig0.keyDesClazz.isSynthetic());
      assertFalse(kafkaSpoutConfig0.keyDesClazz.isArray());
      assertEquals("interface org.apache.kafka.common.serialization.Deserializer", kafkaSpoutConfig0.keyDesClazz.toString());
      assertFalse(kafkaSpoutConfig0.keyDesClazz.isPrimitive());
      assertFalse(kafkaSpoutConfig0.keyDesClazz.isAnnotation());
      
      KafkaSpoutConfig.Builder<BytesDeserializer, String> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setMaxPollRecords(int0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<BytesDeserializer, ByteArrayDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setValue((SerializableDeserializer<ByteArrayDeserializer>) kafkaSpoutConfig_Builder0.keyDes);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<Delayed, StringDeserializer> kafkaSpoutConfig_Builder3 = new KafkaSpoutConfig.Builder<Delayed, StringDeserializer>(string0, class1, kafkaSpoutConfig0.valueDesClazz, subscription0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      long long0 = (-2021L);
      TimeUnit timeUnit0 = TimeUnit.SECONDS;
      KafkaSpoutRetryExponentialBackoff.TimeInterval kafkaSpoutRetryExponentialBackoff_TimeInterval0 = new KafkaSpoutRetryExponentialBackoff.TimeInterval(long0, timeUnit0);
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertNotNull(kafkaSpoutRetryExponentialBackoff_TimeInterval0);
      
      KafkaSpoutRetryExponentialBackoff kafkaSpoutRetryExponentialBackoff0 = new KafkaSpoutRetryExponentialBackoff(kafkaSpoutRetryExponentialBackoff_TimeInterval0, kafkaSpoutRetryExponentialBackoff_TimeInterval0, int0, kafkaSpoutRetryExponentialBackoff_TimeInterval0);
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertNotNull(kafkaSpoutRetryExponentialBackoff0);
      
      Set<TopicPartition> set0 = kafkaSpoutRetryExponentialBackoff0.retriableTopicPartitions();
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertNotNull(set0);
      
      KafkaSpoutConfig.Builder<Delayed, StringDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setRetry(kafkaSpoutRetryExponentialBackoff0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(class1, class0);
      
      KafkaSpoutConfig<Integer, ByteArrayDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Integer, ByteArrayDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      kafkaSpoutConfig1.pollTimeoutMs = kafkaSpoutConfig0.DEFAULT_POLL_TIMEOUT_MS;
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      
      long long1 = kafkaSpoutConfig1.getPollTimeoutMs();
      assertFalse(long1 == long0);
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(200L, long1);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      
      Class<Deserializer> class2 = Deserializer.class;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Integer> kafkaSpoutConfig_Builder5 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, Integer>(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4.keyDes, kafkaSpoutConfig0.valueDesClazz, kafkaSpoutConfig_Builder1.valueDes, class2);
      assertFalse(long0 == long1);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, Integer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setRecordTranslator(kafkaSpoutConfig_Builder2.translator);
      assertFalse(long0 == long1);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertSame(class1, class0);
      assertSame(class1, class2);
      assertSame(class2, class1);
      assertSame(class2, class0);
      
      KafkaSpoutConfig<ByteBufferDeserializer, Integer> kafkaSpoutConfig2 = new KafkaSpoutConfig<ByteBufferDeserializer, Integer>(kafkaSpoutConfig_Builder6);
      assertFalse(long0 == long1);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig2);
      
      int int1 = kafkaSpoutConfig2.getMaxUncommittedOffsets();
      assertFalse(long0 == long1);
      assertFalse(int1 == int0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals((-2021L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals((-2021000000000L), kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(10000000, int1);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertSame(class1, class0);
      assertSame(class1, class2);
      assertSame(class2, class1);
      assertSame(class2, class0);
  }

  @Test(timeout = 11000)
  public void test67()  throws Throwable  {
      String string0 = "^t~F4yFCzNe";
      String string1 = ")}#<':KuC@";
      Class<Deserializer> class0 = Deserializer.class;
      String string2 = "NEz";
      int int0 = (-232);
      Pattern pattern0 = Pattern.compile(string2, int0);
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, Integer>(string1, class0, class0, pattern0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      TimeUnit timeUnit0 = TimeUnit.MINUTES;
      KafkaSpoutRetryExponentialBackoff.TimeInterval kafkaSpoutRetryExponentialBackoff_TimeInterval0 = new KafkaSpoutRetryExponentialBackoff.TimeInterval(kafkaSpoutConfig_Builder0.offsetCommitPeriodMs, timeUnit0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutRetryExponentialBackoff_TimeInterval0);
      
      int int1 = (-16);
      KafkaSpoutRetryExponentialBackoff kafkaSpoutRetryExponentialBackoff0 = new KafkaSpoutRetryExponentialBackoff(kafkaSpoutRetryExponentialBackoff_TimeInterval0, kafkaSpoutRetryExponentialBackoff_TimeInterval0, int1, kafkaSpoutRetryExponentialBackoff_TimeInterval0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutRetryExponentialBackoff0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Integer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRetry(kafkaSpoutRetryExponentialBackoff0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      SerializableDeserializer<StringDeserializer> serializableDeserializer0 = kafkaSpoutConfig_Builder1.keyDes;
      assertNull(serializableDeserializer0);
      
      LinkedBlockingQueue<TopicPartition> linkedBlockingQueue0 = new LinkedBlockingQueue<TopicPartition>();
      assertNotNull(linkedBlockingQueue0);
      
      Set<TopicPartition> set0 = kafkaSpoutRetryExponentialBackoff0.retriableTopicPartitions();
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertTrue(set0.isEmpty());
      assertEquals(0, set0.size());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(set0);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      boolean boolean0 = kafkaSpoutRetryExponentialBackoff0.retainAll(linkedBlockingQueue0);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertFalse(boolean0);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Object> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<StringDeserializer, Object>(string0, serializableDeserializer0, kafkaSpoutConfig_Builder1.valueDesClazz, kafkaSpoutConfig_Builder1.keyDes, kafkaSpoutConfig_Builder0.valueDesClazz, kafkaSpoutConfig_Builder1.subscription);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      long long0 = 1915L;
      KafkaSpoutConfig.Builder<StringDeserializer, Object> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setPollTimeoutMs(long0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(1915L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(1915L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Object> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder2.setSecurityProtocol(string2);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(1915L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(1915L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      KafkaSpoutRetryExponentialBackoff kafkaSpoutRetryExponentialBackoff1 = (KafkaSpoutRetryExponentialBackoff)KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
      assertFalse(kafkaSpoutRetryExponentialBackoff1.equals((Object)kafkaSpoutRetryExponentialBackoff0));
      assertNotNull(kafkaSpoutRetryExponentialBackoff1);
      assertNotSame(kafkaSpoutRetryExponentialBackoff1, kafkaSpoutRetryExponentialBackoff0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, Object> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder3.setRetry(kafkaSpoutRetryExponentialBackoff1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutRetryExponentialBackoff0.equals((Object)kafkaSpoutRetryExponentialBackoff1));
      assertFalse(kafkaSpoutRetryExponentialBackoff1.equals((Object)kafkaSpoutRetryExponentialBackoff0));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(1915L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(1915L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(1915L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(kafkaSpoutRetryExponentialBackoff0, kafkaSpoutRetryExponentialBackoff1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutRetryExponentialBackoff1, kafkaSpoutRetryExponentialBackoff0);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      long long1 = 0L;
      System.setCurrentTimeMillis(long1);
      assertFalse(long1 == long0);
      
      String string3 = "%4:0vba8";
      SerializableDeserializer<Delayed> serializableDeserializer1 = (SerializableDeserializer<Delayed>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null, (String) null).when(serializableDeserializer1).toString();
      KafkaSpoutConfig.Builder<String, Delayed> kafkaSpoutConfig_Builder6 = new KafkaSpoutConfig.Builder<String, Delayed>(string3, kafkaSpoutConfig_Builder1.keyDes, serializableDeserializer1, kafkaSpoutConfig_Builder1.subscription);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutRetryExponentialBackoff0.equals((Object)kafkaSpoutRetryExponentialBackoff1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      
      KafkaSpoutConfig<String, Delayed> kafkaSpoutConfig0 = new KafkaSpoutConfig<String, Delayed>(kafkaSpoutConfig_Builder6);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutRetryExponentialBackoff0.equals((Object)kafkaSpoutRetryExponentialBackoff1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      String string4 = kafkaSpoutConfig0.toString();
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertFalse(kafkaSpoutRetryExponentialBackoff0.equals((Object)kafkaSpoutRetryExponentialBackoff1));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string2));
      assertEquals("NEz", pattern0.toString());
      assertEquals((-168), pattern0.flags());
      assertEquals("NEz", pattern0.pattern());
      assertEquals(TimeUnit.MINUTES, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals(1800000000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(30000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(string4);
      assertNotSame(string1, string4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string2, string3);
      assertNotSame(string2, string4);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(kafkaSpoutRetryExponentialBackoff0, kafkaSpoutRetryExponentialBackoff1);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertNotSame(string4, string3);
      assertNotSame(string4, string1);
      assertNotSame(string4, string0);
      assertNotSame(string4, string2);
      
      String string5 = "";
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string5, pattern0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test68()  throws Throwable  {
      String string0 = "";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[3];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      NamedSubscription namedSubscription0 = new NamedSubscription(stringArray0);
      assertEquals(3, stringArray0.length);
      assertNotNull(namedSubscription0);
      
      long long0 = 2L;
      Class<Deserializer> class2 = Deserializer.class;
      long long1 = 2378L;
      KafkaSpoutRetryExponentialBackoff.TimeInterval kafkaSpoutRetryExponentialBackoff_TimeInterval0 = KafkaSpoutRetryExponentialBackoff.TimeInterval.seconds(long1);
      assertFalse(long1 == long0);
      assertEquals(2378000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(2378L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertNotNull(kafkaSpoutRetryExponentialBackoff_TimeInterval0);
      
      String string1 = kafkaSpoutRetryExponentialBackoff_TimeInterval0.toString();
      assertFalse(long1 == long0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(2378000000000L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.lengthNanos());
      assertEquals(2378L, kafkaSpoutRetryExponentialBackoff_TimeInterval0.length());
      assertEquals(TimeUnit.SECONDS, kafkaSpoutRetryExponentialBackoff_TimeInterval0.timeUnit());
      assertEquals("TimeInterval{length=2378, timeUnit=SECONDS}", string1);
      assertNotNull(string1);
      assertNotSame(string1, string0);
      
      String string2 = "";
      Collection<String> collection0 = null;
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string2, collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 11000)
  public void test69()  throws Throwable  {
      String string0 = "F\"!Mn,~T~";
      SerializableDeserializer<Nimbus.uploadNewCredentials_result._Fields> serializableDeserializer0 = (SerializableDeserializer<Nimbus.uploadNewCredentials_result._Fields>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<DoubleDeserializer> serializableDeserializer1 = (SerializableDeserializer<DoubleDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      int int0 = 10000;
      Pattern pattern0 = Pattern.compile(string0, int0);
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertNotNull(pattern0);
      
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, DoubleDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, DoubleDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, pattern0);
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer>(kafkaSpoutConfig_Builder0, kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder0.valueDesClazz, kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder0.valueDesClazz);
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "";
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, Object> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder0.setValue((SerializableDeserializer<Object>) kafkaSpoutConfig_Builder1.keyDes);
      assertFalse(string0.equals((Object)string1));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      
      String string2 = "UNCOMMITTED_EARLIEST";
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder1.setSSLKeystore(string1, string2, string1);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      
      String string3 = "A~,lrX)";
      ByteBufferDeserializer byteBufferDeserializer0 = new ByteBufferDeserializer();
      assertNotNull(byteBufferDeserializer0);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setProp(string3, (Object) byteBufferDeserializer0);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setRetry(kafkaSpoutConfig_Builder1.retryService);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      
      String string4 = "ROM#xxc!-";
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setSSLTruststore(string4, string4);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, DoubleDeserializer> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setRecordTranslator(kafkaSpoutConfig_Builder5.translator);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, DoubleDeserializer> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setKey((Class<? extends Deserializer<ByteBufferDeserializer>>) kafkaSpoutConfig_Builder3.keyDesClazz);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string0));
      assertFalse(string4.equals((Object)string1));
      assertEquals(10064, pattern0.flags());
      assertEquals("F\"!Mn,~T~", pattern0.pattern());
      assertEquals("F\"!Mn,~T~", pattern0.toString());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string3);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertNotSame(string4, string3);
      assertNotSame(string4, string2);
      assertNotSame(string4, string0);
      assertNotSame(string4, string1);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
  }

  @Test(timeout = 11000)
  public void test70()  throws Throwable  {
      String string0 = "enable.auto.commit";
      SerializableDeserializer<ByteArrayDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteArrayDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<PersistentVector> serializableDeserializer1 = (SerializableDeserializer<PersistentVector>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Pattern pattern0 = Pattern.compile(string0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertNotNull(pattern0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, PersistentVector> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteArrayDeserializer, PersistentVector>(string0, serializableDeserializer0, serializableDeserializer1, pattern0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Class<Deserializer> class0 = Deserializer.class;
      int int0 = (-1603);
      Predicate<String> predicate0 = pattern0.asPredicate();
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertNotNull(predicate0);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, PersistentVector> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setMaxPartitionFectchBytes(int0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<ByteArrayDeserializer, PersistentVector> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder0.setValue((Class<? extends Deserializer<PersistentVector>>) class0);
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, PersistentVector> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setKey((Class<? extends Deserializer<ByteBufferDeserializer>>) kafkaSpoutConfig_Builder0.valueDesClazz);
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String[] stringArray0 = new String[2];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder4 = KafkaSpoutConfig.builder(string0, stringArray0);
      assertEquals(2, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, PersistentVector> kafkaSpoutConfig_Builder5 = null;
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, PersistentVector> kafkaSpoutConfig0 = null;
      try {
        kafkaSpoutConfig0 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, PersistentVector>(kafkaSpoutConfig_Builder5);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test71()  throws Throwable  {
      KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig0);
      
      RecordTranslator<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> recordTranslator0 = kafkaSpoutConfig0.getTranslator();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertNull(recordTranslator0);
      
      String string0 = "Da";
      KafkaSpoutConfig.DEFAULT_RETRY_SERVICE = kafkaSpoutConfig0.UNIT_TEST_RETRY_SERVICE;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      
      Class<StringDeserializer> class0 = StringDeserializer.class;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<String, IntegerDeserializer>(string0, class0, kafkaSpoutConfig0.valueDesClazz, arrayList0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setOffsetCommitPeriodMs(long0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>>(string0, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig_Builder1.valueDesClazz, kafkaSpoutConfig0.valueDes, class1, kafkaSpoutConfig0.subscription);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setBootstrapServers(string0);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      String string1 = "clojure.core$thread_bound_QMARK_";
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setSSLKeystore(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setRecordTranslator(kafkaSpoutConfig_Builder1.translator);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setMaxRetries(kafkaSpoutConfig_Builder0.maxRetries);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      
      int int0 = 0;
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setMaxPartitionFectchBytes(int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setMaxRetries(kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string0));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder7);
      
      KafkaSpoutConfig<Integer, IntegerDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Integer, IntegerDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      
      RecordTranslator<Integer, IntegerDeserializer> recordTranslator1 = kafkaSpoutConfig1.getTranslator();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertNull(recordTranslator1);
      
      KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer>();
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig2);
      
      long long1 = kafkaSpoutConfig2.getOffsetsCommitPeriodMs();
      assertTrue(long1 == long0);
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, long1);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      
      String string2 = "Qgqk C?tvI PJ<Dah";
      Class<IntegerDeserializer> class2 = IntegerDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder9 = new KafkaSpoutConfig.Builder<Integer, String>(string2, class2, kafkaSpoutConfig_Builder7.keyDesClazz, kafkaSpoutConfig_Builder6.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder9);
      
      Class<StringDeserializer> class3 = StringDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder10 = kafkaSpoutConfig_Builder9.setValue((Class<? extends Deserializer<String>>) class3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder10);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(class3, class0);
      
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder11 = kafkaSpoutConfig_Builder10.setMaxPollRecords(kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder11);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder12 = kafkaSpoutConfig_Builder11.setRetry(kafkaSpoutConfig_Builder5.retryService);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder12);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder11);
      
      Class<IntegerDeserializer> class4 = IntegerDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, Delayed> kafkaSpoutConfig_Builder13 = new KafkaSpoutConfig.Builder<Integer, Delayed>(string1, class4, kafkaSpoutConfig_Builder10.keyDesClazz, kafkaSpoutConfig_Builder7.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder13.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder13.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder13.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder13.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder13.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder13);
      
      KafkaSpoutConfig.Builder<Integer, Delayed> kafkaSpoutConfig_Builder14 = kafkaSpoutConfig_Builder13.setValue((Class<? extends Deserializer<Delayed>>) kafkaSpoutConfig_Builder12.keyDesClazz);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(30000L, kafkaSpoutConfig_Builder14.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder14.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder14.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder14.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder14.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder13.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder13.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder13.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder13.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder13.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder14);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(class2, class4);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder11);
      assertSame(class4, class2);
      
      String string3 = "";
      KafkaSpoutConfig.Builder<Integer, Delayed> kafkaSpoutConfig_Builder15 = kafkaSpoutConfig_Builder14.setSecurityProtocol(string3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder13.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder13.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder13.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder13.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder13.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder14.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder14.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder14.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder14.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder14.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder15.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder15.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder15.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder15.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder15.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder15);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(class2, class4);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder11);
      assertSame(class4, class2);
      assertSame(kafkaSpoutConfig_Builder14, kafkaSpoutConfig_Builder15);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder15, kafkaSpoutConfig_Builder14);
      
      KafkaSpoutConfig.Builder<Integer, Delayed> kafkaSpoutConfig_Builder16 = kafkaSpoutConfig_Builder15.setBootstrapServers(string0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder13.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder13.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder13.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder13.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder13.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder14.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder14.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder14.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder14.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder14.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder15.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder15.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder15.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder15.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder15.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder16.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder16.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder16.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder16.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder16.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder16);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(class2, class4);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder11);
      assertSame(class4, class2);
      assertSame(kafkaSpoutConfig_Builder14, kafkaSpoutConfig_Builder16);
      assertSame(kafkaSpoutConfig_Builder14, kafkaSpoutConfig_Builder15);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder15, kafkaSpoutConfig_Builder16);
      assertSame(kafkaSpoutConfig_Builder15, kafkaSpoutConfig_Builder14);
      assertSame(kafkaSpoutConfig_Builder16, kafkaSpoutConfig_Builder15);
      assertSame(kafkaSpoutConfig_Builder16, kafkaSpoutConfig_Builder14);
      
      KafkaSpoutConfig<Integer, Delayed> kafkaSpoutConfig3 = new KafkaSpoutConfig<Integer, Delayed>(kafkaSpoutConfig_Builder16);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig3.isConsumerAutoCommitMode());
      assertNull(kafkaSpoutConfig3.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(2000L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(30000L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder13.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder13.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder13.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder13.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder13.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder14.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder14.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder14.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder14.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder14.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder15.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder15.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder15.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder15.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder15.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder16.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder16.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder16.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder16.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder16.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig3);
      
      KafkaSpoutRetryService kafkaSpoutRetryService0 = kafkaSpoutConfig3.getRetryService();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig3.isConsumerAutoCommitMode());
      assertNull(kafkaSpoutConfig3.getConsumerGroupId());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(2000L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(30000L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertTrue(arrayList0.isEmpty());
      assertEquals(0, arrayList0.size());
      assertFalse(arrayList0.contains(string2));
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder12.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder12.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder12.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder12.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder12.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder13.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder13.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder13.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder13.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder13.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder14.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder14.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder14.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder14.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder14.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder15.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder15.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder15.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder15.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder15.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder16.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder16.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder16.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder16.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder16.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig3.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutRetryService0);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string2, string1);
      assertSame(class2, class4);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder12);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder12, kafkaSpoutConfig_Builder11);
      assertSame(class4, class2);
      assertSame(kafkaSpoutConfig_Builder14, kafkaSpoutConfig_Builder16);
      assertSame(kafkaSpoutConfig_Builder14, kafkaSpoutConfig_Builder15);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder15, kafkaSpoutConfig_Builder16);
      assertSame(kafkaSpoutConfig_Builder15, kafkaSpoutConfig_Builder14);
      assertSame(kafkaSpoutConfig_Builder16, kafkaSpoutConfig_Builder15);
      assertSame(kafkaSpoutConfig_Builder16, kafkaSpoutConfig_Builder14);
  }

  @Test(timeout = 11000)
  public void test72()  throws Throwable  {
      String string0 = " m";
      SerializableDeserializer<ByteBufferDeserializer> serializableDeserializer0 = (SerializableDeserializer<ByteBufferDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      Class<Deserializer> class0 = Deserializer.class;
      String string1 = "";
      int int0 = 0;
      Pattern pattern0 = Pattern.compile(string1, int0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<LongDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<LongDeserializer, IntegerDeserializer>(string0, class0, class0, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.Builder<LongDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setValue((Class<? extends Deserializer<IntegerDeserializer>>) class0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      Map<String, Object> map0 = KafkaSpoutConfig.setDefaultsAndGetKafkaProps(kafkaSpoutConfig_Builder1.kafkaProps);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertEquals(2, map0.size());
      assertFalse(map0.isEmpty());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(map0);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<StringDeserializer, StringDeserializer> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<StringDeserializer, StringDeserializer>(string0, kafkaSpoutConfig_Builder0.keyDesClazz, class1, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig<StringDeserializer, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<StringDeserializer, StringDeserializer>(kafkaSpoutConfig_Builder2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      Map<String, Object> map1 = kafkaSpoutConfig0.getKafkaProps();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertTrue(map1.equals((Object)map0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertFalse(map1.isEmpty());
      assertEquals(2, map1.size());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(map1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertNotSame(string1, string0);
      assertSame(class1, class0);
      assertNotSame(map1, map0);
      
      KafkaSpoutConfig<LongDeserializer, IntegerDeserializer> kafkaSpoutConfig1 = kafkaSpoutConfig_Builder0.build();
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertNull(kafkaSpoutConfig1.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig1.isConsumerAutoCommitMode());
      assertEquals(10000000, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig1.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertNotSame(string1, string0);
      
      SerializableDeserializer<IntegerDeserializer> serializableDeserializer1 = kafkaSpoutConfig_Builder1.valueDes;
      assertNull(serializableDeserializer1);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder3 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, IntegerDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, kafkaSpoutConfig_Builder0.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      String string2 = null;
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setSecurityProtocol(string2);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("", pattern0.toString());
      assertEquals("", pattern0.pattern());
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertNotSame(string1, string0);
  }

  @Test(timeout = 11000)
  public void test73()  throws Throwable  {
      String string0 = "5!Y$L3lZ";
      SerializableDeserializer<Delayed> serializableDeserializer0 = (SerializableDeserializer<Delayed>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<BytesDeserializer> serializableDeserializer1 = null;
      String[] stringArray0 = new String[4];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      KafkaSpoutConfig.Builder<Delayed, BytesDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Delayed, BytesDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, stringArray0);
      assertEquals(4, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<Delayed, BytesDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setOffsetCommitPeriodMs(long0);
      assertEquals(4, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "clj_time.core$fn__1364";
      String string2 = "";
      String string3 = "org.apache.storm.kafka.spout.KafkaSpoutConfig$FirstPollOffsetStrategy";
      KafkaSpoutConfig.Builder<Delayed, BytesDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLKeystore(string1, string2, string3);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Delayed, BytesDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setProp(kafkaSpoutConfig_Builder1.kafkaProps);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig<Delayed, BytesDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Delayed, BytesDeserializer>(kafkaSpoutConfig_Builder3);
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig0);
      
      int int0 = kafkaSpoutConfig0.getMaxTupleRetries();
      assertFalse(string0.equals((Object)string3));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertEquals(4, stringArray0.length);
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, int0);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertNotSame(string0, string3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(string2, string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
  }

  @Test(timeout = 11000)
  public void test74()  throws Throwable  {
      KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> kafkaSpoutConfig0 = new KafkaSpoutConfig<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields>();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      RecordTranslator<DoubleDeserializer, Nimbus.uploadNewCredentials_result._Fields> recordTranslator0 = kafkaSpoutConfig0.getTranslator();
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNull(recordTranslator0);
      
      String string0 = "Da";
      KafkaSpoutConfig.DEFAULT_RETRY_SERVICE = kafkaSpoutConfig0.retryService;
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      Class<StringDeserializer> class0 = StringDeserializer.class;
      ArrayList<String> arrayList0 = new ArrayList<String>();
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertNotNull(arrayList0);
      
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<String, IntegerDeserializer>(string0, class0, kafkaSpoutConfig0.valueDesClazz, arrayList0);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      long long0 = 0L;
      KafkaSpoutConfig.Builder<String, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setOffsetCommitPeriodMs(long0);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Class<Deserializer> class1 = Deserializer.class;
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder2 = new KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>>(string0, kafkaSpoutConfig0.valueDes, kafkaSpoutConfig_Builder1.valueDesClazz, kafkaSpoutConfig0.valueDes, class1, kafkaSpoutConfig0.subscription);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setBootstrapServers(string0);
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string0));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      
      String string1 = "clojure.core$thread_bound_QMARK_";
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setSSLKeystore(string0, string1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setRecordTranslator(kafkaSpoutConfig_Builder1.translator);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setMaxRetries(kafkaSpoutConfig_Builder0.maxRetries);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder7 = kafkaSpoutConfig_Builder6.setMaxPartitionFectchBytes(kafkaSpoutConfig0.DEFAULT_MAX_RETRIES);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder7);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      
      KafkaSpoutConfig.Builder<Object, ForkJoinTask<ByteBufferDeserializer>> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setMaxRetries(kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder8, kafkaSpoutConfig_Builder7);
      
      KafkaSpoutConfig<Integer, IntegerDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<Integer, IntegerDeserializer>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<ByteBufferDeserializer, BytesDeserializer>();
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig2);
      
      long long1 = kafkaSpoutConfig2.getOffsetsCommitPeriodMs();
      assertTrue(long1 == long0);
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, long1);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      
      String string2 = "Qgqk C?tvI PJ<Dah";
      Class<IntegerDeserializer> class2 = IntegerDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder9 = new KafkaSpoutConfig.Builder<Integer, String>(string2, class2, kafkaSpoutConfig_Builder7.keyDesClazz, kafkaSpoutConfig_Builder6.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder9);
      
      Class<StringDeserializer> class3 = StringDeserializer.class;
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder10 = kafkaSpoutConfig_Builder9.setValue((Class<? extends Deserializer<String>>) class3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder10);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(class3, class0);
      
      KafkaSpoutConfig.Builder<Integer, String> kafkaSpoutConfig_Builder11 = kafkaSpoutConfig_Builder10.setMaxPollRecords(kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertTrue(long0 == long1);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0, arrayList0.size());
      assertTrue(arrayList0.isEmpty());
      assertFalse(arrayList0.contains(string1));
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder11.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder11.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder11.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder11.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder11.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder11);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertSame(class0, class3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder8);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder7);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder6, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder6);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder8);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder7, kafkaSpoutConfig_Builder5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertSame(class3, class0);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder11);
      assertSame(kafkaSpoutConfig_Builder11, kafkaSpoutConfig_Builder10);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig_Builder11.setRetry(kafkaSpoutConfig_Builder5.retryService);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // retryService cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test75()  throws Throwable  {
      String string0 = "org.apache.storm.generated.TopologyInfo$TopologyInfoStandardSchemeFactory";
      SerializableDeserializer<Nimbus.uploadNewCredentials_result._Fields> serializableDeserializer0 = null;
      SerializableDeserializer<LongDeserializer> serializableDeserializer1 = (SerializableDeserializer<LongDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[2];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, stringArray0);
      assertEquals(2, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setKey((Class<? extends Deserializer<Nimbus.uploadNewCredentials_result._Fields>>) class0);
      assertEquals(2, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer>(kafkaSpoutConfig_Builder1);
      assertEquals(2, stringArray0.length);
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertNotNull(kafkaSpoutConfig0);
      
      DoubleDeserializer doubleDeserializer0 = new DoubleDeserializer();
      assertNotNull(doubleDeserializer0);
      
      KafkaSpoutConfig.Builder<Nimbus.uploadNewCredentials_result._Fields, LongDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder0.setProp(string0, (Object) doubleDeserializer0);
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(2, stringArray0.length);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      String string1 = null;
      DefaultRecordTranslator<Object, Delayed> defaultRecordTranslator0 = new DefaultRecordTranslator<Object, Delayed>();
      assertNotNull(defaultRecordTranslator0);
      
      List<String> list0 = defaultRecordTranslator0.streams();
      assertFalse(list0.isEmpty());
      assertEquals(1, list0.size());
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      
      kafkaSpoutConfig0.kafkaProps = kafkaSpoutConfig_Builder0.kafkaProps;
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertTrue(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2, kafkaSpoutConfig0.kafkaProps.size());
      assertFalse(kafkaSpoutConfig0.kafkaProps.isEmpty());
      
      Fields fields0 = defaultRecordTranslator0.getFieldsFor(stringArray0[0]);
      assertEquals(2, stringArray0.length);
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      List<String> list1 = fields0.toList();
      assertFalse(list1.equals((Object)list0));
      assertEquals(2, stringArray0.length);
      assertEquals(5, fields0.size());
      assertFalse(list1.isEmpty());
      assertEquals(5, list1.size());
      assertFalse(list1.contains(string0));
      assertNotNull(list1);
      
      List<String> list2 = fields0.toList();
      assertTrue(list2.equals((Object)list1));
      assertFalse(list2.equals((Object)list0));
      assertEquals(2, stringArray0.length);
      assertEquals(5, fields0.size());
      assertFalse(list2.isEmpty());
      assertEquals(5, list2.size());
      assertFalse(list2.contains(string0));
      assertNotNull(list2);
      assertNotSame(list2, list1);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string1, (Collection<String>) list2);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // bootstrap servers cannot be null
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder", e);
      }
  }

  @Test(timeout = 11000)
  public void test76()  throws Throwable  {
      long long0 = 200L;
      System.setCurrentTimeMillis(long0);
      long long1 = (-571L);
      System.setCurrentTimeMillis(long1);
      assertFalse(long1 == long0);
      
      String string0 = "enable.auto.commit";
      Class<Deserializer> class0 = Deserializer.class;
      Pattern pattern0 = Pattern.compile(string0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertNotNull(pattern0);
      
      PatternSubscription patternSubscription0 = new PatternSubscription(pattern0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertNotNull(patternSubscription0);
      
      KafkaSpoutConfig.Builder<PersistentVector, PersistentVector> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<PersistentVector, PersistentVector>(string0, class0, class0, patternSubscription0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      SerializableDeserializer<PersistentVector> serializableDeserializer0 = (SerializableDeserializer<PersistentVector>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      KafkaSpoutConfig.Builder<PersistentVector, PersistentVector> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setKey(serializableDeserializer0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      Func<ConsumerRecord<PersistentVector, PersistentVector>, List<Object>> func0 = (Func<ConsumerRecord<PersistentVector, PersistentVector>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      KafkaSpoutConfig.Builder<PersistentVector, PersistentVector> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRecordTranslator(func0, fields0, string0);
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertEquals(5, fields0.size());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      SerializableDeserializer<PersistentVector> serializableDeserializer1 = (SerializableDeserializer<PersistentVector>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      KafkaSpoutConfig.Builder<PersistentVector, PersistentVector> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setValue(serializableDeserializer1);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertEquals(5, fields0.size());
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<PersistentVector, PersistentVector> kafkaSpoutConfig0 = new KafkaSpoutConfig<PersistentVector, PersistentVector>(kafkaSpoutConfig_Builder3);
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertEquals(5, fields0.size());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      int int0 = kafkaSpoutConfig0.getMaxUncommittedOffsets();
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(0, pattern0.flags());
      assertEquals("enable.auto.commit", pattern0.toString());
      assertEquals("enable.auto.commit", pattern0.pattern());
      assertEquals("enable.auto.commit", patternSubscription0.getTopicsString());
      assertEquals(5, fields0.size());
      assertEquals(10000000, int0);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
  }

  @Test(timeout = 11000)
  public void test77()  throws Throwable  {
      KafkaSpoutConfig<Integer, PersistentVector> kafkaSpoutConfig0 = new KafkaSpoutConfig<Integer, PersistentVector>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      Class<Deserializer> class0 = Deserializer.class;
      kafkaSpoutConfig0.valueDesClazz = class0;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isAnnotation());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isEnum());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isSynthetic());
      assertTrue(kafkaSpoutConfig0.valueDesClazz.isInterface());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isArray());
      assertEquals(1537, kafkaSpoutConfig0.valueDesClazz.getModifiers());
      assertFalse(kafkaSpoutConfig0.valueDesClazz.isPrimitive());
      assertEquals("interface org.apache.kafka.common.serialization.Deserializer", kafkaSpoutConfig0.valueDesClazz.toString());
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig0.getValueDeserializer();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not instantiate value deserializer interface org.apache.kafka.common.serialization.Deserializer
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test78()  throws Throwable  {
      String string0 = "genclass";
      Class<Deserializer> class0 = Deserializer.class;
      Func<ConsumerRecord<ByteBufferDeserializer, String>, List<Object>> func0 = (Func<ConsumerRecord<ByteBufferDeserializer, String>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      SimpleRecordTranslator<ByteBufferDeserializer, String> simpleRecordTranslator0 = new SimpleRecordTranslator<ByteBufferDeserializer, String>(func0, fields0, string0);
      assertEquals(5, fields0.size());
      assertNotNull(simpleRecordTranslator0);
      
      List<String> list0 = simpleRecordTranslator0.streams();
      assertEquals(5, fields0.size());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertTrue(list0.contains(string0));
      assertNotNull(list0);
      
      KafkaSpoutConfig.Builder<ByteBufferDeserializer, ForkJoinTask<BytesDeserializer>> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ByteBufferDeserializer, ForkJoinTask<BytesDeserializer>>(string0, class0, class0, list0);
      assertEquals(5, fields0.size());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertTrue(list0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig<ByteBufferDeserializer, ForkJoinTask<BytesDeserializer>> kafkaSpoutConfig0 = new KafkaSpoutConfig<ByteBufferDeserializer, ForkJoinTask<BytesDeserializer>>(kafkaSpoutConfig_Builder0);
      assertEquals(5, fields0.size());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertTrue(list0.contains(string0));
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig0.getKeyDeserializer();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not instantiate key deserializer interface org.apache.kafka.common.serialization.Deserializer
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test79()  throws Throwable  {
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, IntegerDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, IntegerDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      Map<String, Object> map0 = kafkaSpoutConfig0.getKafkaProps();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertNull(map0);
      
      KafkaSpoutConfig<StringDeserializer, ByteBufferDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<StringDeserializer, ByteBufferDeserializer>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getPartitionRefreshPeriodMs();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, long0);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      
      String string0 = "/m@@vxaX;KDkDJ I='";
      SerializableDeserializer<StringDeserializer> serializableDeserializer0 = (SerializableDeserializer<StringDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[5];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer>(string0, serializableDeserializer0, kafkaSpoutConfig0.valueDes, stringArray0);
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>> func0 = (Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRecordTranslator(func0, fields0);
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "a.:Oi|'U[Vz6{$$";
      String string2 = "wE!R@G";
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLKeystore(string1, string2, stringArray0[4]);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      
      long long1 = 323L;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setKey((SerializableDeserializer<StringDeserializer>) kafkaSpoutConfig_Builder0.valueDes);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string2, string1);
      assertNotSame(string2, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      
      String string3 = "nH*<#q";
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setSSLTruststore(stringArray0[2], string3);
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig.Builder<StringDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setValue((SerializableDeserializer<ByteBufferDeserializer>) kafkaSpoutConfig_Builder2.keyDes);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(string1, string0);
      assertNotSame(string1, string2);
      assertNotSame(string1, string3);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string2, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertNotSame(string3, string1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      
      LinkedBlockingQueue<String> linkedBlockingQueue0 = new LinkedBlockingQueue<String>();
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertNotNull(linkedBlockingQueue0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder6 = KafkaSpoutConfig.builder(stringArray0[2], (Collection<String>) linkedBlockingQueue0);
      assertEquals(5, stringArray0.length);
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder6);
      
      KafkaSpoutConfig.Builder<PersistentVector, String> kafkaSpoutConfig_Builder7 = new KafkaSpoutConfig.Builder<PersistentVector, String>(stringArray0[4], kafkaSpoutConfig_Builder0.valueDes, kafkaSpoutConfig_Builder6.keyDes, kafkaSpoutConfig1.subscription);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder7);
      
      KafkaSpoutConfig.Builder<PersistentVector, String> kafkaSpoutConfig_Builder8 = kafkaSpoutConfig_Builder7.setRetry(kafkaSpoutConfig_Builder1.retryService);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(5, fields0.size());
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder8);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig<PersistentVector, String> kafkaSpoutConfig2 = new KafkaSpoutConfig<PersistentVector, String>(kafkaSpoutConfig_Builder8);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig2);
      
      RecordTranslator<PersistentVector, String> recordTranslator0 = kafkaSpoutConfig2.getTranslator();
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertFalse(linkedBlockingQueue0.contains(string0));
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(recordTranslator0);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertNotSame(string0, string3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
  }

  @Test(timeout = 11000)
  public void test80()  throws Throwable  {
      String string0 = "59";
      SerializableDeserializer<Integer> serializableDeserializer0 = (SerializableDeserializer<Integer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      SerializableDeserializer<DoubleDeserializer> serializableDeserializer1 = (SerializableDeserializer<DoubleDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(serializableDeserializer1).toString();
      int int0 = 1908;
      Pattern pattern0 = Pattern.compile(string0, int0);
      assertEquals(1908, pattern0.flags());
      assertEquals("59", pattern0.toString());
      assertEquals("59", pattern0.pattern());
      assertNotNull(pattern0);
      
      PatternSubscription patternSubscription0 = new PatternSubscription(pattern0);
      assertEquals(1908, pattern0.flags());
      assertEquals("59", pattern0.toString());
      assertEquals("59", pattern0.pattern());
      assertEquals("59", patternSubscription0.getTopicsString());
      assertNotNull(patternSubscription0);
      
      KafkaSpoutConfig.Builder<Integer, DoubleDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<Integer, DoubleDeserializer>(string0, serializableDeserializer0, serializableDeserializer1, patternSubscription0);
      assertEquals(1908, pattern0.flags());
      assertEquals("59", pattern0.toString());
      assertEquals("59", pattern0.pattern());
      assertEquals("59", patternSubscription0.getTopicsString());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig<Integer, DoubleDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Integer, DoubleDeserializer>(kafkaSpoutConfig_Builder0);
      assertEquals(1908, pattern0.flags());
      assertEquals("59", pattern0.toString());
      assertEquals("59", pattern0.pattern());
      assertEquals("59", patternSubscription0.getTopicsString());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(kafkaSpoutConfig0);
      
      Collection<String> collection0 = null;
      Deserializer<DoubleDeserializer> deserializer0 = kafkaSpoutConfig0.getValueDeserializer();
      assertEquals(1908, pattern0.flags());
      assertEquals("59", pattern0.toString());
      assertEquals("59", pattern0.pattern());
      assertEquals("59", patternSubscription0.getTopicsString());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertNotNull(deserializer0);
      
      kafkaSpoutConfig0.maxUncommittedOffsets = int0;
      assertEquals(1908, pattern0.flags());
      assertEquals("59", pattern0.toString());
      assertEquals("59", pattern0.pattern());
      assertEquals("59", patternSubscription0.getTopicsString());
      assertEquals(1908, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.builder(string0, collection0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.util.ArrayList", e);
      }
  }

  @Test(timeout = 11000)
  public void test81()  throws Throwable  {
      String string0 = "enable.auto.commit";
      DefaultRecordTranslator<ByteArrayDeserializer, ByteArrayDeserializer> defaultRecordTranslator0 = new DefaultRecordTranslator<ByteArrayDeserializer, ByteArrayDeserializer>();
      assertNotNull(defaultRecordTranslator0);
      
      List<String> list0 = defaultRecordTranslator0.streams();
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertNotNull(list0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder0 = KafkaSpoutConfig.builder(string0, (Collection<String>) list0);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<String, StringDeserializer> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<String, StringDeserializer>(string0, kafkaSpoutConfig_Builder0.valueDesClazz, class0, kafkaSpoutConfig_Builder0.subscription);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutRetryExponentialBackoff kafkaSpoutRetryExponentialBackoff0 = (KafkaSpoutRetryExponentialBackoff)KafkaSpoutConfig.DEFAULT_RETRY_SERVICE;
      assertNotNull(kafkaSpoutRetryExponentialBackoff0);
      
      KafkaSpoutConfig.Builder<String, StringDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setRetry(kafkaSpoutRetryExponentialBackoff0);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      
      int int0 = 198;
      KafkaSpoutConfig.Builder<String, StringDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setMaxRetries(int0);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder3.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<String, StringDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setOffsetCommitPeriodMs(kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder4.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig<String, StringDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<String, StringDeserializer>(kafkaSpoutConfig_Builder4);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(198, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig0.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      String string1 = "xXdbvp\"-Rm";
      TimestampType timestampType0 = TimestampType.CREATE_TIME;
      long long0 = (-133L);
      int int1 = (-14);
      ByteArrayDeserializer byteArrayDeserializer0 = new ByteArrayDeserializer();
      assertNotNull(byteArrayDeserializer0);
      
      ConsumerRecord<ByteArrayDeserializer, ByteArrayDeserializer> consumerRecord0 = new ConsumerRecord<ByteArrayDeserializer, ByteArrayDeserializer>(string0, kafkaSpoutConfig_Builder2.maxRetries, kafkaSpoutConfig0.maxRetries, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs, timestampType0, long0, int1, kafkaSpoutConfig0.DEFAULT_MAX_RETRIES, byteArrayDeserializer0, byteArrayDeserializer0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(198L, consumerRecord0.offset());
      assertEquals(198, consumerRecord0.partition());
      assertEquals(30000L, consumerRecord0.timestamp());
      assertEquals(Integer.MAX_VALUE, consumerRecord0.serializedValueSize());
      assertEquals(TimestampType.CREATE_TIME, consumerRecord0.timestampType());
      assertEquals("enable.auto.commit", consumerRecord0.topic());
      assertEquals((-14), consumerRecord0.serializedKeySize());
      assertEquals((-133L), consumerRecord0.checksum());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(198, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig0.maxRetries);
      assertEquals((-1), ConsumerRecord.NULL_CHECKSUM);
      assertEquals((-1), ConsumerRecord.NULL_SIZE);
      assertEquals((-1L), ConsumerRecord.NO_TIMESTAMP);
      assertNotNull(consumerRecord0);
      
      List<Object> list1 = defaultRecordTranslator0.apply(consumerRecord0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(int0 == int1);
      assertFalse(int1 == int0);
      assertEquals(198L, consumerRecord0.offset());
      assertEquals(198, consumerRecord0.partition());
      assertEquals(30000L, consumerRecord0.timestamp());
      assertEquals(Integer.MAX_VALUE, consumerRecord0.serializedValueSize());
      assertEquals(TimestampType.CREATE_TIME, consumerRecord0.timestampType());
      assertEquals("enable.auto.commit", consumerRecord0.topic());
      assertEquals((-14), consumerRecord0.serializedKeySize());
      assertEquals((-133L), consumerRecord0.checksum());
      assertFalse(list1.isEmpty());
      assertEquals(5, list1.size());
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(198, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig0.maxRetries);
      assertEquals((-1), ConsumerRecord.NULL_CHECKSUM);
      assertEquals((-1), ConsumerRecord.NULL_SIZE);
      assertEquals((-1L), ConsumerRecord.NO_TIMESTAMP);
      assertNotNull(list1);
      assertNotSame(string0, string1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      Pattern pattern0 = Pattern.compile(string1);
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("xXdbvp\"-Rm", pattern0.toString());
      assertEquals("xXdbvp\"-Rm", pattern0.pattern());
      assertNotNull(pattern0);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder5 = KafkaSpoutConfig.builder(string0, pattern0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder0));
      assertFalse(string1.equals((Object)string0));
      assertEquals(0, pattern0.flags());
      assertEquals("xXdbvp\"-Rm", pattern0.toString());
      assertEquals("xXdbvp\"-Rm", pattern0.pattern());
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder0);
      assertNotSame(string1, string0);
      
      Deserializer<String> deserializer0 = kafkaSpoutConfig0.getKeyDeserializer();
      assertFalse(string0.equals((Object)string1));
      assertFalse(kafkaSpoutConfig_Builder0.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(int0 == int1);
      assertEquals(1, list0.size());
      assertFalse(list0.isEmpty());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(198, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(list0.contains(string0));
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(198, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(198, kafkaSpoutConfig0.maxRetries);
      assertNotNull(deserializer0);
      assertNotSame(string0, string1);
      assertNotSame(kafkaSpoutConfig_Builder0, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      
      // Undeclared exception!
      try { 
        KafkaSpoutConfig.FirstPollOffsetStrategy.valueOf(string0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // No enum constant org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.enable.auto.commit
         //
         verifyException("java.lang.Enum", e);
      }
  }

  @Test(timeout = 11000)
  public void test82()  throws Throwable  {
      String string0 = "enable.auto.commit";
      Class<Deserializer> class0 = Deserializer.class;
      Class<Deserializer> class1 = Deserializer.class;
      String[] stringArray0 = new String[6];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      String string1 = "/$k}]&zL#CW60";
      stringArray0[3] = string1;
      stringArray0[4] = string0;
      stringArray0[5] = string0;
      KafkaSpoutConfig.Builder<LongDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<LongDeserializer, BytesDeserializer>(string0, class0, class1, stringArray0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig.FirstPollOffsetStrategy kafkaSpoutConfig_FirstPollOffsetStrategy0 = KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
      KafkaSpoutConfig.Builder<LongDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setFirstPollOffsetStrategy(kafkaSpoutConfig_FirstPollOffsetStrategy0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      
      int int0 = (-66);
      KafkaSpoutConfig.Builder<LongDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setMaxRetries(int0);
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals((-66), kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<LongDeserializer, BytesDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setGroupId(stringArray0[4]);
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals((-66), kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<LongDeserializer, BytesDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<LongDeserializer, BytesDeserializer>(kafkaSpoutConfig_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals((-66), kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals("enable.auto.commit", kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals((-66), kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals((-66), kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder2.maxRetries);
      assertNotNull(kafkaSpoutConfig0);
      
      long long0 = kafkaSpoutConfig0.getPartitionRefreshPeriodMs();
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals((-66), kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals("enable.auto.commit", kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(2000L, long0);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals((-66), kafkaSpoutConfig0.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals((-66), kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder2.maxRetries);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig<ByteArrayDeserializer, StringDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<ByteArrayDeserializer, StringDeserializer>();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig1);
      
      Deserializer<ByteArrayDeserializer> deserializer0 = kafkaSpoutConfig1.getKeyDeserializer();
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNull(deserializer0);
      
      KafkaSpoutConfig<IntegerDeserializer, DoubleDeserializer> kafkaSpoutConfig2 = new KafkaSpoutConfig<IntegerDeserializer, DoubleDeserializer>();
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig2);
      
      String string2 = kafkaSpoutConfig2.toString();
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string2);
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertNotNull(string2);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      
      Map<String, Object> map0 = kafkaSpoutConfig2.getKafkaProps();
      assertEquals(0L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig2.maxRetries);
      assertEquals(0L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig2.pollTimeoutMs);
      assertNull(map0);
      
      KafkaSpoutConfig<Integer, BytesDeserializer> kafkaSpoutConfig3 = new KafkaSpoutConfig<Integer, BytesDeserializer>();
      assertEquals(0L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig3);
      
      int int1 = kafkaSpoutConfig3.getMaxTupleRetries();
      assertFalse(int1 == int0);
      assertEquals(0L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(0, int1);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig3.maxRetries);
      assertEquals(0L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      
      System.setCurrentTimeMillis(kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      
      KafkaSpoutConfig<ByteArrayDeserializer, ByteBufferDeserializer> kafkaSpoutConfig4 = new KafkaSpoutConfig<ByteArrayDeserializer, ByteBufferDeserializer>();
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig4);
      
      long long1 = kafkaSpoutConfig4.getPollTimeoutMs();
      assertFalse(long1 == long0);
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(0L, long1);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      
      System.setCurrentTimeMillis(kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string1));
      assertEquals(6, stringArray0.length);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals((-66), kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals((-66), kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotSame(string0, string2);
      assertNotSame(string0, string1);
      assertSame(class0, class1);
      assertSame(class1, class0);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      
      KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, ByteBufferDeserializer> kafkaSpoutConfig5 = new KafkaSpoutConfig<Nimbus.uploadNewCredentials_result._Fields, ByteBufferDeserializer>();
      assertEquals(0L, kafkaSpoutConfig5.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig5.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig5.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig5.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig5.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig5.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig5.maxRetries);
      assertEquals(0L, kafkaSpoutConfig5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig5.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig5.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig5.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig5);
      
      long long2 = kafkaSpoutConfig5.getOffsetsCommitPeriodMs();
      assertFalse(long2 == long0);
      assertTrue(long2 == long1);
      assertEquals(0L, kafkaSpoutConfig5.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig5.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig5.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig5.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig5.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig5.getOffsetsCommitPeriodMs());
      assertEquals(0L, long2);
      assertEquals(0, kafkaSpoutConfig5.maxRetries);
      assertEquals(0L, kafkaSpoutConfig5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig5.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig5.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig5.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      
      KafkaSpoutConfig<BytesDeserializer, LongDeserializer> kafkaSpoutConfig6 = new KafkaSpoutConfig<BytesDeserializer, LongDeserializer>();
      assertEquals(0L, kafkaSpoutConfig6.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig6.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig6.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig6.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig6.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig6.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig6.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig6.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig6.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig6.maxRetries);
      assertNotNull(kafkaSpoutConfig6);
      
      String string3 = kafkaSpoutConfig6.toString();
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertEquals(0L, kafkaSpoutConfig6.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig6.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig6.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig6.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig6.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig6.getFirstPollOffsetStrategy());
      assertEquals("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", string3);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig6.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig6.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig6.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig6.maxRetries);
      assertNotNull(string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      
      Class<Deserializer> class2 = Deserializer.class;
      Class<StringDeserializer> class3 = StringDeserializer.class;
      String[] stringArray1 = new String[0];
      assertFalse(stringArray1.equals((Object)stringArray0));
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, String> kafkaSpoutConfig_Builder4 = new KafkaSpoutConfig.Builder<IntegerDeserializer, String>(string3, class2, class3, stringArray1);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(0, stringArray1.length);
      assertEquals(0L, kafkaSpoutConfig6.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig6.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig6.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig6.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig6.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig6.getFirstPollOffsetStrategy());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig6.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig6.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig6.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig6.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertNotNull(kafkaSpoutConfig_Builder4);
      
      KafkaSpoutConfig.Builder<IntegerDeserializer, String> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setMaxRetries(kafkaSpoutConfig4.maxUncommittedOffsets);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(0, stringArray1.length);
      assertEquals(0L, kafkaSpoutConfig6.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig6.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig6.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig6.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig6.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig6.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig6.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig6.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig6.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig6.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertNotSame(stringArray1, stringArray0);
      
      KafkaSpoutConfig<IntegerDeserializer, String> kafkaSpoutConfig7 = new KafkaSpoutConfig<IntegerDeserializer, String>(kafkaSpoutConfig_Builder5);
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertEquals(0, stringArray1.length);
      assertEquals(0L, kafkaSpoutConfig6.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig6.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig6.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig6.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig6.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig6.getFirstPollOffsetStrategy());
      assertFalse(kafkaSpoutConfig7.isConsumerAutoCommitMode());
      assertNull(kafkaSpoutConfig7.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig7.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig7.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig7.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig7.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig7.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig7.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig6.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig6.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig6.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig6.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig7.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig7.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig7.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotNull(kafkaSpoutConfig7);
      
      long long3 = kafkaSpoutConfig7.getOffsetsCommitPeriodMs();
      assertTrue(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string0));
      assertFalse(stringArray1.equals((Object)stringArray0));
      assertFalse(long3 == long2);
      assertFalse(long3 == long1);
      assertFalse(long3 == long0);
      assertEquals(0, stringArray1.length);
      assertEquals(0L, kafkaSpoutConfig6.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig6.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig6.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig6.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig6.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig6.getFirstPollOffsetStrategy());
      assertFalse(kafkaSpoutConfig7.isConsumerAutoCommitMode());
      assertNull(kafkaSpoutConfig7.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig7.getPartitionRefreshPeriodMs());
      assertEquals(200L, kafkaSpoutConfig7.getPollTimeoutMs());
      assertEquals(30000L, kafkaSpoutConfig7.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig7.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig7.getMaxUncommittedOffsets());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig7.getFirstPollOffsetStrategy());
      assertNull(kafkaSpoutConfig4.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig4.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig4.getMaxTupleRetries());
      assertEquals(0, kafkaSpoutConfig4.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig4.getPartitionRefreshPeriodMs());
      assertEquals(0L, kafkaSpoutConfig4.getOffsetsCommitPeriodMs());
      assertEquals(30000L, long3);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig6.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig6.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig6.maxUncommittedOffsets);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0, kafkaSpoutConfig6.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig7.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig7.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig7.partitionRefreshPeriodMs);
      assertEquals(200L, kafkaSpoutConfig7.pollTimeoutMs);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(30000L, kafkaSpoutConfig7.offsetCommitPeriodMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig4.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig4.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig4.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(0, kafkaSpoutConfig4.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig4.partitionRefreshPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertNotSame(string3, string1);
      assertNotSame(string3, string0);
      assertNotSame(string3, string2);
      assertSame(class2, class1);
      assertSame(class2, class0);
      assertNotSame(stringArray1, stringArray0);
  }

  @Test(timeout = 11000)
  public void test83()  throws Throwable  {
      KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, IntegerDeserializer> kafkaSpoutConfig0 = new KafkaSpoutConfig<Deserializer<ByteArrayDeserializer>, IntegerDeserializer>();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig0);
      
      KafkaSpoutConfig.DEFAULT_RETRY_SERVICE = kafkaSpoutConfig0.DEFAULT_RETRY_SERVICE;
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      
      Map<String, Object> map0 = kafkaSpoutConfig0.getKafkaProps();
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertNull(map0);
      
      KafkaSpoutConfig<StringDeserializer, ByteBufferDeserializer> kafkaSpoutConfig1 = new KafkaSpoutConfig<StringDeserializer, ByteBufferDeserializer>();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getPartitionRefreshPeriodMs();
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0L, long0);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      
      String string0 = "/m@@vxaX;KDkDJ I='";
      SerializableDeserializer<StringDeserializer> serializableDeserializer0 = (SerializableDeserializer<StringDeserializer>) mock(SerializableDeserializer.class, new ViolatedAssumptionAnswer());
      String[] stringArray0 = new String[5];
      stringArray0[0] = string0;
      stringArray0[1] = string0;
      stringArray0[2] = string0;
      stringArray0[3] = string0;
      stringArray0[4] = string0;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer>(string0, serializableDeserializer0, kafkaSpoutConfig0.valueDes, stringArray0);
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>> func0 = (Func<ConsumerRecord<StringDeserializer, IntegerDeserializer>, List<Object>>) mock(Func.class, new ViolatedAssumptionAnswer());
      Fields fields0 = DefaultRecordTranslator.FIELDS;
      assertEquals(5, fields0.size());
      assertNotNull(fields0);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder1 = kafkaSpoutConfig_Builder0.setRecordTranslator(func0, fields0);
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      String string1 = "a.:Oi|'U[Vz6{$$";
      String string2 = "wE!R@G";
      String string3 = "false";
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLKeystore(string1, string2, string3);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      
      long long1 = 323L;
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setPollTimeoutMs(long1);
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(long1 == long0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder4 = kafkaSpoutConfig_Builder3.setKey((SerializableDeserializer<StringDeserializer>) kafkaSpoutConfig_Builder0.valueDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string3));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string0));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string3);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      
      String string4 = "nH*<#q";
      KafkaSpoutConfig.Builder<StringDeserializer, IntegerDeserializer> kafkaSpoutConfig_Builder5 = kafkaSpoutConfig_Builder4.setSSLTruststore(stringArray0[2], string4);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder5);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<StringDeserializer, ByteBufferDeserializer> kafkaSpoutConfig_Builder6 = kafkaSpoutConfig_Builder5.setValue((SerializableDeserializer<ByteBufferDeserializer>) kafkaSpoutConfig_Builder2.keyDes);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder6.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder6.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder6.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder6.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder6.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder6);
      assertNotSame(string0, string1);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertNotSame(string3, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      
      LinkedBlockingQueue<String> linkedBlockingQueue0 = new LinkedBlockingQueue<String>();
      assertFalse(linkedBlockingQueue0.contains(string4));
      assertNotNull(linkedBlockingQueue0);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder7 = KafkaSpoutConfig.builder(stringArray0[2], (Collection<String>) linkedBlockingQueue0);
      assertEquals(5, stringArray0.length);
      assertFalse(linkedBlockingQueue0.contains(string4));
      assertEquals(10000000, kafkaSpoutConfig_Builder7.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder7.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder7.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder7.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder7.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder7);
      
      String string5 = "q1t4B";
      Class<Deserializer> class0 = Deserializer.class;
      KafkaSpoutConfig.Builder<Object, Delayed> kafkaSpoutConfig_Builder8 = new KafkaSpoutConfig.Builder<Object, Delayed>(string5, class0, kafkaSpoutConfig0.keyDesClazz, kafkaSpoutConfig_Builder5.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder8);
      
      int int0 = (-47);
      KafkaSpoutConfig.Builder<Object, Delayed> kafkaSpoutConfig_Builder9 = kafkaSpoutConfig_Builder8.setMaxUncommittedOffsets(int0);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder9);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      
      String string6 = null;
      KafkaSpoutConfig.Builder<Object, Delayed> kafkaSpoutConfig_Builder10 = kafkaSpoutConfig_Builder9.setSecurityProtocol(string6);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder9, kafkaSpoutConfig_Builder10);
      assertSame(kafkaSpoutConfig_Builder10, kafkaSpoutConfig_Builder9);
      assertNotSame(string0, string1);
      assertNotSame(string0, string5);
      assertNotSame(string0, string2);
      assertNotSame(string0, string4);
      assertNotSame(string0, string3);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder1, kafkaSpoutConfig_Builder2);
      assertNotSame(string1, string4);
      assertNotSame(string1, string5);
      assertNotSame(string1, string2);
      assertNotSame(string1, string0);
      assertNotSame(string1, string3);
      assertNotSame(string2, string5);
      assertNotSame(string2, string0);
      assertNotSame(string2, string4);
      assertNotSame(string2, string1);
      assertNotSame(string2, string3);
      assertNotSame(string3, string1);
      assertNotSame(string3, string2);
      assertNotSame(string3, string4);
      assertNotSame(string3, string5);
      assertNotSame(string3, string0);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder5);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder4);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder3);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder1);
      assertSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder5);
      assertNotSame(kafkaSpoutConfig_Builder4, kafkaSpoutConfig_Builder2);
      assertNotSame(string4, string1);
      assertNotSame(string4, string5);
      assertNotSame(string4, string2);
      assertNotSame(string4, string3);
      assertNotSame(string4, string0);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder1);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder4);
      assertNotSame(kafkaSpoutConfig_Builder5, kafkaSpoutConfig_Builder2);
      assertNotSame(string5, string3);
      assertNotSame(string5, string2);
      assertNotSame(string5, string0);
      assertNotSame(string5, string1);
      assertNotSame(string5, string4);
      
      KafkaSpoutConfig<Object, Delayed> kafkaSpoutConfig2 = new KafkaSpoutConfig<Object, Delayed>(kafkaSpoutConfig_Builder10);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string0.equals((Object)string5));
      assertFalse(string0.equals((Object)string2));
      assertFalse(string0.equals((Object)string4));
      assertFalse(string0.equals((Object)string3));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder1.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(string1.equals((Object)string4));
      assertFalse(string1.equals((Object)string5));
      assertFalse(string1.equals((Object)string2));
      assertFalse(string1.equals((Object)string0));
      assertFalse(string1.equals((Object)string3));
      assertFalse(string2.equals((Object)string5));
      assertFalse(string2.equals((Object)string0));
      assertFalse(string2.equals((Object)string4));
      assertFalse(string2.equals((Object)string1));
      assertFalse(string2.equals((Object)string3));
      assertFalse(string3.equals((Object)string1));
      assertFalse(string3.equals((Object)string2));
      assertFalse(string3.equals((Object)string4));
      assertFalse(string3.equals((Object)string5));
      assertFalse(string3.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder2.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(long1 == long0);
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder5));
      assertFalse(kafkaSpoutConfig_Builder3.equals((Object)kafkaSpoutConfig_Builder4));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder4.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string4.equals((Object)string1));
      assertFalse(string4.equals((Object)string5));
      assertFalse(string4.equals((Object)string2));
      assertFalse(string4.equals((Object)string3));
      assertFalse(string4.equals((Object)string0));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder1));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder3));
      assertFalse(kafkaSpoutConfig_Builder5.equals((Object)kafkaSpoutConfig_Builder2));
      assertFalse(string5.equals((Object)string3));
      assertFalse(string5.equals((Object)string2));
      assertFalse(string5.equals((Object)string0));
      assertFalse(string5.equals((Object)string1));
      assertFalse(string5.equals((Object)string4));
      assertEquals(5, stringArray0.length);
      assertEquals(0, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig0.getMaxTupleRetries());
      assertNull(kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals((-47), kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(30000L, kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals(5, fields0.size());
      assertEquals(0L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(0, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(0, kafkaSpoutConfig0.maxRetries);
      assertEquals(0L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder9.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder9.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder9.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder9.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder9.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder10.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder10.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder10.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder10.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder10.offsetCommitPeriodMs);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals((-47), kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertEquals(323L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(323L, kafkaSpoutConfig_Builder5.pollTimeoutMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder5.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder5.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder5.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder5.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder8.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder8.offsetCommitPeriodMs);
      assertEquals(200L, kafkaSpoutConfig_Builder8.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder8.partitionRefreshPeriodMs);
      assertEquals((-47), kafkaSpoutConfig_Builder8.maxUncommittedOffsets);
      assertNotNull(kafkaSpoutConfig2);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig2.toString();
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Could not instantiate key deserializer interface org.apache.kafka.common.serialization.Deserializer
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }

  @Test(timeout = 11000)
  public void test84()  throws Throwable  {
      String string0 = "org.apache.storm.kafka.spout.KafkaSpoutConfig$Builder";
      Class<Deserializer> class0 = Deserializer.class;
      String[] stringArray0 = new String[1];
      stringArray0[0] = string0;
      KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig_Builder0 = new KafkaSpoutConfig.Builder<ForkJoinTask<LongDeserializer>, Integer>(string0, class0, class0, stringArray0);
      assertEquals(1, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder0);
      
      KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer> kafkaSpoutConfig0 = new KafkaSpoutConfig<ForkJoinTask<LongDeserializer>, Integer>(kafkaSpoutConfig_Builder0);
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig0);
      
      boolean boolean0 = kafkaSpoutConfig0.isConsumerAutoCommitMode();
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertFalse(boolean0);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      
      KafkaSpoutConfig<ForkJoinTask<String>, Integer> kafkaSpoutConfig1 = new KafkaSpoutConfig<ForkJoinTask<String>, Integer>();
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertNotNull(kafkaSpoutConfig1);
      
      long long0 = kafkaSpoutConfig1.getOffsetsCommitPeriodMs();
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(0L, long0);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      
      String string1 = "j";
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder1 = new KafkaSpoutConfig.Builder<Object, PersistentVector>(string1, kafkaSpoutConfig1.keyDesClazz, kafkaSpoutConfig0.keyDesClazz, kafkaSpoutConfig1.subscription);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder1);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder2 = kafkaSpoutConfig_Builder1.setSSLTruststore(stringArray0[0], stringArray0[0]);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder2);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig.Builder<Object, PersistentVector> kafkaSpoutConfig_Builder3 = kafkaSpoutConfig_Builder2.setProp(kafkaSpoutConfig0.kafkaProps);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(30000L, kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(30000L, kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder3);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      long long1 = (-269L);
      kafkaSpoutConfig_Builder1.offsetCommitPeriodMs = long1;
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      
      KafkaSpoutConfig<Object, PersistentVector> kafkaSpoutConfig2 = new KafkaSpoutConfig<Object, PersistentVector>(kafkaSpoutConfig_Builder3);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals((-269L), kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals((-269L), kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals((-269L), kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals((-269L), kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals((-269L), kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertNotNull(kafkaSpoutConfig2);
      
      long long2 = kafkaSpoutConfig2.getOffsetsCommitPeriodMs();
      assertFalse(long2 == long0);
      assertTrue(long2 == long1);
      assertFalse(string0.equals((Object)string1));
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertFalse(kafkaSpoutConfig0.isConsumerAutoCommitMode());
      assertEquals(30000L, kafkaSpoutConfig0.getOffsetsCommitPeriodMs());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig0.getFirstPollOffsetStrategy());
      assertEquals(200L, kafkaSpoutConfig0.getPollTimeoutMs());
      assertEquals(2000L, kafkaSpoutConfig0.getPartitionRefreshPeriodMs());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.getMaxTupleRetries());
      assertEquals(10000000, kafkaSpoutConfig0.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig0.getConsumerGroupId());
      assertEquals(0L, kafkaSpoutConfig1.getOffsetsCommitPeriodMs());
      assertEquals(0L, kafkaSpoutConfig1.getPollTimeoutMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxUncommittedOffsets());
      assertNull(kafkaSpoutConfig1.getFirstPollOffsetStrategy());
      assertEquals(0L, kafkaSpoutConfig1.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig1.getMaxTupleRetries());
      assertEquals(2000L, kafkaSpoutConfig2.getPartitionRefreshPeriodMs());
      assertNull(kafkaSpoutConfig2.getConsumerGroupId());
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.getMaxTupleRetries());
      assertEquals(KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST, kafkaSpoutConfig2.getFirstPollOffsetStrategy());
      assertEquals((-269L), kafkaSpoutConfig2.getOffsetsCommitPeriodMs());
      assertEquals(10000000, kafkaSpoutConfig2.getMaxUncommittedOffsets());
      assertEquals(200L, kafkaSpoutConfig2.getPollTimeoutMs());
      assertFalse(kafkaSpoutConfig2.isConsumerAutoCommitMode());
      assertEquals((-269L), long2);
      assertEquals(10000000, kafkaSpoutConfig_Builder0.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder0.pollTimeoutMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder0.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig_Builder0.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder0.offsetCommitPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig0.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig0.maxRetries);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, kafkaSpoutConfig0.pollTimeoutMs);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(10000000, kafkaSpoutConfig0.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig0.partitionRefreshPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.offsetCommitPeriodMs);
      assertEquals(0L, kafkaSpoutConfig1.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig1.maxRetries);
      assertEquals(0, kafkaSpoutConfig1.maxUncommittedOffsets);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0L, kafkaSpoutConfig1.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals((-269L), kafkaSpoutConfig_Builder1.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder1.maxRetries);
      assertEquals(10000000, kafkaSpoutConfig_Builder1.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder1.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder1.partitionRefreshPeriodMs);
      assertEquals((-269L), kafkaSpoutConfig_Builder2.offsetCommitPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder2.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder2.maxUncommittedOffsets);
      assertEquals(2000L, kafkaSpoutConfig_Builder2.partitionRefreshPeriodMs);
      assertEquals((-269L), kafkaSpoutConfig_Builder3.offsetCommitPeriodMs);
      assertEquals(10000000, kafkaSpoutConfig_Builder3.maxUncommittedOffsets);
      assertEquals(200L, kafkaSpoutConfig_Builder3.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder3.partitionRefreshPeriodMs);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder3.maxRetries);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals((-269L), kafkaSpoutConfig2.offsetCommitPeriodMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(200L, kafkaSpoutConfig2.pollTimeoutMs);
      assertEquals(10000000, kafkaSpoutConfig2.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig2.maxRetries);
      assertEquals(2000L, kafkaSpoutConfig2.partitionRefreshPeriodMs);
      assertNotSame(string0, string1);
      assertNotSame(string1, string0);
      assertSame(kafkaSpoutConfig_Builder2, kafkaSpoutConfig_Builder3);
      assertSame(kafkaSpoutConfig_Builder3, kafkaSpoutConfig_Builder2);
      
      KafkaSpoutConfig.Builder<String, String> kafkaSpoutConfig_Builder4 = KafkaSpoutConfig.builder(string1, stringArray0);
      assertFalse(string1.equals((Object)string0));
      assertEquals(1, stringArray0.length);
      assertEquals(10000000, kafkaSpoutConfig_Builder4.maxUncommittedOffsets);
      assertEquals(Integer.MAX_VALUE, kafkaSpoutConfig_Builder4.maxRetries);
      assertEquals(200L, kafkaSpoutConfig_Builder4.pollTimeoutMs);
      assertEquals(2000L, kafkaSpoutConfig_Builder4.partitionRefreshPeriodMs);
      assertEquals(30000L, kafkaSpoutConfig_Builder4.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig_Builder4);
      assertNotSame(string1, string0);
      
      KafkaSpoutConfig<String, DoubleDeserializer> kafkaSpoutConfig3 = new KafkaSpoutConfig<String, DoubleDeserializer>();
      assertEquals(0L, kafkaSpoutConfig3.getPollTimeoutMs());
      assertEquals(0L, kafkaSpoutConfig3.getOffsetsCommitPeriodMs());
      assertNull(kafkaSpoutConfig3.getFirstPollOffsetStrategy());
      assertEquals(0, kafkaSpoutConfig3.getMaxUncommittedOffsets());
      assertEquals(0L, kafkaSpoutConfig3.getPartitionRefreshPeriodMs());
      assertEquals(0, kafkaSpoutConfig3.getMaxTupleRetries());
      assertEquals(2000L, KafkaSpoutConfig.DEFAULT_PARTITION_REFRESH_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig3.partitionRefreshPeriodMs);
      assertEquals(0, kafkaSpoutConfig3.maxRetries);
      assertEquals(10000000, KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS);
      assertEquals(Integer.MAX_VALUE, KafkaSpoutConfig.DEFAULT_MAX_RETRIES);
      assertEquals(200L, KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS);
      assertEquals(0, kafkaSpoutConfig3.maxUncommittedOffsets);
      assertEquals(0L, kafkaSpoutConfig3.pollTimeoutMs);
      assertEquals(30000L, KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS);
      assertEquals(0L, kafkaSpoutConfig3.offsetCommitPeriodMs);
      assertNotNull(kafkaSpoutConfig3);
      
      // Undeclared exception!
      try { 
        kafkaSpoutConfig3.isConsumerAutoCommitMode();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.apache.storm.kafka.spout.KafkaSpoutConfig", e);
      }
  }
}
