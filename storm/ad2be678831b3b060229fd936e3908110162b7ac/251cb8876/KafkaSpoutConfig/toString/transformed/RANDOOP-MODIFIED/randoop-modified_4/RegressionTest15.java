import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest15 {

    public static boolean debug = false;

    @Test
    public void test07501() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07501");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setPartitionRefreshPeriodMs(141902646130682494L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}");
        int int9 = strBuilder8.maxRetries;
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test07502() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07502");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        int int16 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder11.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder18.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder18.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=10, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07503() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07503");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        strBuilder11.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder11.build();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strBuilder43.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder43.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass49 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder43.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator52 = strBuilder43.translator;
        strBuilder11.translator = strRecordTranslator52;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer56 = null;
        java.util.regex.Pattern pattern57 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer55, strSerializableDeserializer56, pattern57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder58.setPartitionRefreshPeriodMs((long) (short) 0);
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer67 = null;
        strBuilder66.keyDes = strSerializableDeserializer67;
        long long69 = strBuilder66.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder66.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder66.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern75);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator77 = strBuilder76.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder66.setRecordTranslator(strRecordTranslator77);
        org.apache.storm.tuple.Fields fields79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder58.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator77, fields79, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder11.setRecordTranslator(strRecordTranslator77);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strRecordTranslator52);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 32L + "'", long69 == 32L);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strRecordTranslator77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
    }

    @Test
    public void test07504() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07504");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass18 = strBuilder17.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy19;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strBuilder26.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder17.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer35, strSerializableDeserializer36, (java.util.Collection<java.lang.String>) strList39);
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = null;
        strBuilder52.retryService = kafkaSpoutRetryService53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator56 = strBuilder52.translator;
        strBuilder41.translator = strRecordTranslator56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder10.setRecordTranslator(strRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder58.setOffsetCommitPeriodMs(97L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass61 = strBuilder60.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder60.setMaxPartitionFectchBytes(97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder63.setMaxUncommittedOffsets((int) 'a');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strRecordTranslator56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test07505() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07505");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        java.lang.String str16 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer21 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNull(strDeserializer21);
        org.junit.Assert.assertNull(firstPollOffsetStrategy22);
    }

    @Test
    public void test07506() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07506");
        java.util.Collection<java.lang.String> strCollection1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollection1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07507() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07507");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        int int4 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 1 + "'", int4 == 1);
        org.junit.Assert.assertNull(strSerializableDeserializer5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
    }

    @Test
    public void test07508() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07508");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strComparableBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer7, strCollectionSerializableDeserializer8, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPartitionFectchBytes(0);
        org.apache.storm.kafka.spout.Subscription subscription18 = strBuilder15.subscription;
        java.lang.String str19 = subscription18.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.reflect.Type> serializableBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer1, typeSerializableDeserializer2, subscription18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.io.Serializable, java.lang.reflect.Type> serializableKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.io.Serializable, java.lang.reflect.Type>(serializableBuilder20);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str19, "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07509() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07509");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 32;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test07510() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07510");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer8, strArraySerializableDeserializer9, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder26.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder26.setMaxRetries(97);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test07511() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07511");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        strBuilder10.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setPartitionRefreshPeriodMs((long) 1);
        int int16 = strBuilder15.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int22 = strKafkaSpoutConfig21.getMaxTupleRetries();
        strKafkaSpoutConfig21.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = strKafkaSpoutConfig21.retryService;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        strKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder49.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder49.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Subscription subscription56 = strBuilder49.subscription;
        subscription56.refreshAssignment();
        strKafkaSpoutConfig0.subscription = subscription56;
        int int59 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(subscription56);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
    }

    @Test
    public void test07512() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07512");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setGroupId("hi!");
        strBuilder43.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig46 = strBuilder43.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig46);
    }

    @Test
    public void test07513() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07513");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.getRetryService();
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder15.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setPartitionRefreshPeriodMs((long) 1);
        int int21 = strBuilder20.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        strBuilder20.pollTimeoutMs = (byte) 1;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        strBuilder35.keyDes = strSerializableDeserializer36;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strBuilder35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder20.setProp(strMap38);
        strKafkaSpoutConfig0.kafkaProps = strMap38;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass47 = strBuilder46.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc48 = null;
        org.apache.storm.tuple.Fields fields49 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder46.setRecordTranslator(strConsumerRecordFunc48, fields49, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long52 = strBuilder46.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass53 = strBuilder46.valueDesClazz;
        long long54 = strBuilder46.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder46.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.Subscription subscription57 = strBuilder56.subscription;
        strKafkaSpoutConfig0.subscription = subscription57;
        strKafkaSpoutConfig0.maxRetries = (-1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertNotNull(strBuilder51);
// flaky:         org.junit.Assert.assertTrue("'" + long52 + "' != '" + 32L + "'", long52 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass53);
// flaky:         org.junit.Assert.assertTrue("'" + long54 + "' != '" + 32L + "'", long54 == 32L);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(subscription57);
    }

    @Test
    public void test07514() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07514");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer7;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test07515() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07515");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.maxRetries = 1;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
    }

    @Test
    public void test07516() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07516");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long11 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 97;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test07517() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07517");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setRecordTranslator(strRecordTranslator16);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass24 = strBuilder23.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setRecordTranslator(strConsumerRecordFunc25, fields26, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription29 = strBuilder28.subscription;
        strBuilder17.subscription = subscription29;
        strBuilder9.subscription = subscription29;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder9.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setMaxRetries(52);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(subscription29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test07518() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07518");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxUncommittedOffsets(35);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strBuilder4.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig9.maxRetries = (short) 1;
        long long12 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strKafkaSpoutConfig9.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = strKafkaSpoutConfig9.firstPollOffsetStrategy;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass21 = strBuilder20.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder20.setProp(strMap32);
        long long34 = strBuilder20.pollTimeoutMs;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder50.setRecordTranslator(strRecordTranslator51);
        strBuilder50.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder50.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder44.setProp(strMap55);
        strKafkaSpoutConfig9.kafkaProps = strMap55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap55);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap58);
        strBuilder4.kafkaProps = strMap59;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder4.setRecordTranslator(strRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder62.setMaxRetries((int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 32L + "'", long34 == 32L);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test07519() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07519");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer33, strSerializableDeserializer34, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator43 = strBuilder40.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder31.setRecordTranslator(strRecordTranslator43);
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass51 = strBuilder50.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder50.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer55 = strBuilder50.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder50.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator58 = strBuilder57.translator;
        strBuilder44.translator = strRecordTranslator58;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder65.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder65.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator76 = strBuilder75.translator;
        org.apache.storm.tuple.Fields fields77 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder44.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator76, fields77, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strRecordTranslator43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(strSerializableDeserializer55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strRecordTranslator58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strRecordTranslator76);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test07520() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07520");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass8 = strKafkaSpoutConfig0.keyDesClazz;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder18.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass33 = strBuilder32.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder32.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList39);
        strBuilder41.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = strBuilder41.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder32.setProp(strMap44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder24.setProp(strMap44);
        org.apache.storm.kafka.spout.Subscription subscription47 = strBuilder24.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, subscription47);
        strKafkaSpoutConfig0.subscription = subscription47;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        strBuilder58.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder58.setSSLKeystore("", "", "hi!");
        strBuilder58.maxRetries = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder58.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer70 = null;
        strBuilder58.valueDes = strSerializableDeserializer70;
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder58.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.CharSequence> strBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer51, charSequenceSerializableDeserializer52, subscription72);
        strKafkaSpoutConfig0.subscription = subscription72;
        java.lang.String str75 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(subscription72);
    }

    @Test
    public void test07521() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07521");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass10 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(wildcardClass10);
    }

    @Test
    public void test07522() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07522");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        int int23 = strBuilder22.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder22.setSecurityProtocol("hi!");
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        strBuilder35.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder35.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass50 = strBuilder49.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        strBuilder58.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = strBuilder58.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder49.setProp(strMap61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder41.setProp(strMap61);
        org.apache.storm.kafka.spout.Subscription subscription64 = strBuilder41.subscription;
        strBuilder29.subscription = subscription64;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence> strMapBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer10, charSequenceSerializableDeserializer11, subscription64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.reflect.AnnotatedElement> strConsumerRecordFuncBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.reflect.AnnotatedElement>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer7, annotatedElementSerializableDeserializer8, subscription64);
        java.lang.String str68 = subscription64.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.util.List<java.lang.String>> strListBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.util.List<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer4, strListSerializableDeserializer5, subscription64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.Collection<java.lang.String>> annotatedElementBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.util.Collection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription64);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(subscription64);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "" + "'", str68, "");
    }

    @Test
    public void test07523() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07523");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator16 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setRecordTranslator(strRecordTranslator16);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass24 = strBuilder23.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setRecordTranslator(strConsumerRecordFunc25, fields26, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription29 = strBuilder28.subscription;
        strBuilder17.subscription = subscription29;
        strBuilder9.subscription = subscription29;
        java.lang.String str32 = subscription29.getTopicsString();
        subscription29.refreshAssignment();
        subscription29.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(subscription29);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "" + "'", str32, "");
    }

    @Test
    public void test07524() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07524");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(objSerializableDeserializer11);
    }

    @Test
    public void test07525() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07525");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setSecurityProtocol("");
        strBuilder10.maxUncommittedOffsets = 'a';
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setPartitionRefreshPeriodMs((long) 1);
        int int24 = strBuilder23.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int30 = strKafkaSpoutConfig29.getMaxTupleRetries();
        strKafkaSpoutConfig29.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = strKafkaSpoutConfig29.retryService;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass40 = strBuilder39.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        strKafkaSpoutConfig29.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer46, strSerializableDeserializer47, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder53.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator56 = strBuilder53.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder44.setRecordTranslator(strRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder10.setRecordTranslator(strRecordTranslator56);
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList62);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass65 = strBuilder64.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder64.firstPollOffsetStrategy = firstPollOffsetStrategy66;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder64.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder58.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder58.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder72.setPartitionRefreshPeriodMs(35L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strRecordTranslator56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy66 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy66.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
    }

    @Test
    public void test07526() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07526");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder11.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strKafkaSpoutConfig13);
        strBuilder11.maxUncommittedOffsets = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test07527() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07527");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass5 = strKafkaSpoutConfig0.keyDesClazz;
        long long6 = strKafkaSpoutConfig0.pollTimeoutMs;
        strKafkaSpoutConfig0.maxRetries = (short) 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
    }

    @Test
    public void test07528() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07528");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: ");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07529() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07529");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        java.lang.String str11 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = strKafkaSpoutConfig0.getRetryService();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass21 = strBuilder20.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription22 = strBuilder20.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder20.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int30 = strKafkaSpoutConfig29.getMaxTupleRetries();
        strKafkaSpoutConfig29.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strKafkaSpoutConfig29.keyDes;
        int int34 = strKafkaSpoutConfig29.maxUncommittedOffsets;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        strBuilder40.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = strBuilder40.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder40.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = null;
        strBuilder45.retryService = kafkaSpoutRetryService46;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        strKafkaSpoutConfig29.kafkaProps = strMap48;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap48);
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder28.setProp(strMap51);
        strKafkaSpoutConfig0.kafkaProps = strMap51;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService54;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer56 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer58;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(strSerializableDeserializer56);
        org.junit.Assert.assertNull(firstPollOffsetStrategy57);
    }

    @Test
    public void test07530() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07530");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer9 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = ' ';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer9);
    }

    @Test
    public void test07531() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07531");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        strBuilder10.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setPartitionRefreshPeriodMs((long) 1);
        int int16 = strBuilder15.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int22 = strKafkaSpoutConfig21.getMaxTupleRetries();
        strKafkaSpoutConfig21.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = strKafkaSpoutConfig21.retryService;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        strKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        int int38 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strKafkaSpoutConfig0.kafkaProps;
        long long40 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str41 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService42;
        int int44 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.maxRetries = (short) 10;
        int int47 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 141902646130682494L + "'", long40 == 141902646130682494L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}" + "'", str41, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 10 + "'", int47 == 10);
    }

    @Test
    public void test07532() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07532");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig8 = strBuilder5.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setOffsetCommitPeriodMs((long) (byte) 100);
        long long11 = strBuilder5.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = strBuilder5.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setPollTimeoutMs(0L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07533() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07533");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.kafkaProps;
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 0L;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test07534() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07534");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer6, strSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig20 = strBuilder19.build();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strBuilder30.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder30.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder19.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder35);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder36.setRetry(kafkaSpoutRetryService37);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test07535() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07535");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07536() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07536");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer19, strSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer16, strIterableSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.Collection<java.lang.String>> genericDeclarationBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.util.Collection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer10, strCollectionSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Object> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.lang.Object>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", objSerializableDeserializer4, objSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList23);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
    }

    @Test
    public void test07537() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07537");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer12, strCollectionSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer9, strListSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.String>> annotatedElementBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer4, strIterableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList19);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer30, strSerializableDeserializer31, (java.util.Collection<java.lang.String>) strList34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder36.setGroupId("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        strBuilder38.keyDes = strSerializableDeserializer39;
        long long41 = strBuilder38.partitionRefreshPeriodMs;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer48 = null;
        strBuilder47.keyDes = strSerializableDeserializer48;
        long long50 = strBuilder47.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder47.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern56 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern56);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator58 = strBuilder57.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder47.setRecordTranslator(strRecordTranslator58);
        org.apache.storm.tuple.Fields fields60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator58, fields60);
        strBuilder27.translator = strRecordTranslator58;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 32L + "'", long50 == 32L);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strRecordTranslator58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test07538() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07538");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription35 = strBuilder10.subscription;
        long long36 = strBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder10.build();
        org.apache.storm.kafka.spout.Subscription subscription38 = strBuilder10.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder10.setOffsetCommitPeriodMs(35L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder10.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList46);
        strBuilder48.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder48.setSSLKeystore("", "", "hi!");
        strBuilder48.maxRetries = ' ';
        strBuilder48.offsetCommitPeriodMs = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder48.setMaxUncommittedOffsets(2147483647);
        strBuilder60.maxUncommittedOffsets = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder60.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder60.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass67 = strBuilder60.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer68 = null;
        strBuilder60.keyDes = strSerializableDeserializer68;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass76 = strBuilder75.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder75.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder75.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder75.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder82.setMaxUncommittedOffsets(32);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator85 = strBuilder84.translator;
        org.apache.storm.tuple.Fields fields86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder60.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator85, fields86);
        org.apache.storm.tuple.Fields fields88 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator85, fields88);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(subscription35);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2147483647L + "'", long36 == 2147483647L);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(subscription38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strRecordTranslator85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder89);
    }

    @Test
    public void test07539() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07539");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        strBuilder16.retryService = kafkaSpoutRetryService17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strKafkaSpoutConfig0.getKafkaProps();
        int int22 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long23 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long24 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.Subscription subscription25 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(subscription25);
        org.junit.Assert.assertNull(firstPollOffsetStrategy26);
    }

    @Test
    public void test07540() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07540");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        long long6 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        int int10 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long11 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test07541() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07541");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int13 = strKafkaSpoutConfig12.getMaxTupleRetries();
        long long14 = strKafkaSpoutConfig12.getPartitionRefreshPeriodMs();
        long long15 = strKafkaSpoutConfig12.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strKafkaSpoutConfig12.getKafkaProps();
        strKafkaSpoutConfig12.maxUncommittedOffsets = (byte) 0;
        org.apache.storm.kafka.spout.Subscription subscription19 = strKafkaSpoutConfig12.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig20.maxRetries = (short) 1;
        long long23 = strKafkaSpoutConfig20.offsetCommitPeriodMs;
        java.lang.String str24 = strKafkaSpoutConfig20.toString();
        int int25 = strKafkaSpoutConfig20.getMaxTupleRetries();
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        strBuilder31.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder31.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setPartitionRefreshPeriodMs((long) 1);
        int int37 = strBuilder36.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder36.setSecurityProtocol("hi!");
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder49.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder55.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass64 = strBuilder63.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder63.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        strBuilder72.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap75 = strBuilder72.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder63.setProp(strMap75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder55.setProp(strMap75);
        org.apache.storm.kafka.spout.Subscription subscription78 = strBuilder55.subscription;
        strBuilder43.subscription = subscription78;
        subscription78.refreshAssignment();
        strKafkaSpoutConfig20.subscription = subscription78;
        strKafkaSpoutConfig12.subscription = subscription78;
        subscription78.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer10, strComparableSerializableDeserializer11, subscription78);
        subscription78.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement> strListBuilder86 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.reflect.AnnotatedElement>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer7, annotatedElementSerializableDeserializer8, subscription78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription78);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertNull(subscription19);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str24, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 1 + "'", int25 == 1);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strMap75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(subscription78);
    }

    @Test
    public void test07542() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07542");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder4.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = strBuilder4.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder4.setMaxPartitionFectchBytes((int) (short) 0);
        java.lang.Class<?> wildcardClass11 = strBuilder10.getClass();
        org.junit.Assert.assertNotNull(strBuilder7);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test07543() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07543");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass7 = strBuilder5.valueDesClazz;
        strBuilder5.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig10 = strBuilder5.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = strBuilder5.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = strBuilder5.valueDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.Subscription subscription18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer16, strSerializableDeserializer17, subscription18);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator20 = strBuilder19.translator;
        org.apache.storm.tuple.Fields fields21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator20, fields21);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass23 = strBuilder5.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig10);
        org.junit.Assert.assertNull(strSerializableDeserializer11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(strSerializableDeserializer14);
        org.junit.Assert.assertNotNull(strRecordTranslator20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
    }

    @Test
    public void test07544() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07544");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        int int78 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer79 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(firstPollOffsetStrategy77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNull(objDeserializer79);
    }

    @Test
    public void test07545() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07545");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        strKafkaSpoutConfig0.pollTimeoutMs = (byte) 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator8);
    }

    @Test
    public void test07546() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07546");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strKafkaSpoutConfig0.keyDesClazz;
        long long18 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator19 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNull(strRecordTranslator19);
        org.junit.Assert.assertNull(firstPollOffsetStrategy22);
    }

    @Test
    public void test07547() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07547");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.maxRetries = (short) -1;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test07548() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07548");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer5, strBuilderSerializableDeserializer6, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray13);
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass25 = strBuilder24.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        strBuilder33.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = strBuilder33.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder24.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder24.setPollTimeoutMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder39.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder42.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder42.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer50 = null;
        java.util.regex.Pattern pattern51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer49, strSerializableDeserializer50, pattern51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder52.setPartitionRefreshPeriodMs((long) (short) 0);
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = null;
        strBuilder60.keyDes = strSerializableDeserializer61;
        long long63 = strBuilder60.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder60.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder60.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern69 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern69);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator71 = strBuilder70.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder60.setRecordTranslator(strRecordTranslator71);
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator71, fields73, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder47.setRecordTranslator(strRecordTranslator71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder18.setRecordTranslator(strRecordTranslator71);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 32L + "'", long63 == 32L);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strRecordTranslator71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test07549() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07549");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        long long9 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test07550() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07550");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> cloneableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", cloneableSerializableDeserializer1, strRecordTranslatorSerializableDeserializer2, pattern3);
    }

    @Test
    public void test07551() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07551");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer11, strListSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer27, strSerializableDeserializer28, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer24, strBuilderSerializableDeserializer25, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder36.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "hi!");
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder45.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder51.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder51.setMaxPollRecords(100);
        int int56 = strBuilder51.maxUncommittedOffsets;
        java.util.regex.Pattern pattern58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern58);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator60 = strBuilder59.translator;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer67 = null;
        strBuilder66.keyDes = strSerializableDeserializer67;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass76 = strBuilder75.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder75.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator79 = strBuilder75.translator;
        strBuilder66.translator = strRecordTranslator79;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder59.setRecordTranslator(strRecordTranslator79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder51.setRecordTranslator(strRecordTranslator79);
        org.apache.storm.tuple.Fields fields83 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder36.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator79, fields83);
        org.apache.storm.tuple.Fields fields85 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator79, fields85);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
// flaky:         org.junit.Assert.assertTrue("'" + int56 + "' != '" + 10 + "'", int56 == 10);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strRecordTranslator60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strRecordTranslator79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test07552() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07552");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer6, charSequenceSerializableDeserializer7, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07553() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07553");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long7 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass8 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(wildcardClass8);
    }

    @Test
    public void test07554() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07554");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = strKafkaSpoutConfig0.valueDes;
        java.lang.String str17 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy15);
        org.junit.Assert.assertNull(objSerializableDeserializer16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07555() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07555");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass14 = strBuilder13.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder13.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        strBuilder22.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strBuilder22.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder13.setProp(strMap25);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder13.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap27);
        strKafkaSpoutConfig0.kafkaProps = strMap28;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder35.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder38.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int42 = strKafkaSpoutConfig41.getMaxTupleRetries();
        strKafkaSpoutConfig41.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService45 = strKafkaSpoutConfig41.retryService;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass52 = strBuilder51.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        strKafkaSpoutConfig41.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        int int58 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
    }

    @Test
    public void test07556() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07556");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder16.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long21 = strBuilder20.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder20.setMaxUncommittedOffsets(32);
        org.apache.storm.kafka.spout.Subscription subscription24 = strBuilder20.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.reflect.GenericDeclaration> strCollectionBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.reflect.GenericDeclaration>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer1, genericDeclarationSerializableDeserializer2, subscription24);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(subscription24);
    }

    @Test
    public void test07557() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07557");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass3 = strBuilder2.keyDesClazz;
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test07558() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07558");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setRecordTranslator(strRecordTranslator12);
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder19.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig29.maxRetries = (short) 1;
        long long32 = strKafkaSpoutConfig29.offsetCommitPeriodMs;
        java.lang.String str33 = strKafkaSpoutConfig29.toString();
        int int34 = strKafkaSpoutConfig29.getMaxTupleRetries();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        strBuilder40.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = strBuilder40.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder40.setPartitionRefreshPeriodMs((long) 1);
        int int46 = strBuilder45.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder45.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder45.setSecurityProtocol("hi!");
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        strBuilder58.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder58.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder64.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass73 = strBuilder72.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder72.firstPollOffsetStrategy = firstPollOffsetStrategy74;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList79);
        strBuilder81.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = strBuilder81.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = strBuilder72.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder64.setProp(strMap84);
        org.apache.storm.kafka.spout.Subscription subscription87 = strBuilder64.subscription;
        strBuilder52.subscription = subscription87;
        subscription87.refreshAssignment();
        strKafkaSpoutConfig29.subscription = subscription87;
        strBuilder19.subscription = subscription87;
        strBuilder11.subscription = subscription87;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Cloneable> strArrayBuilder93 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Cloneable>("hi!", strArraySerializableDeserializer4, cloneableSerializableDeserializer5, subscription87);
        subscription87.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription87);
        subscription87.refreshAssignment();
        subscription87.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str33, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(subscription87);
    }

    @Test
    public void test07559() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07559");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass5 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 0L;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertNull(wildcardClass5);
    }

    @Test
    public void test07560() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07560");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        long long15 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer16;
        java.lang.String str18 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        java.lang.String str21 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer22 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer23;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str18, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer22);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
    }

    @Test
    public void test07561() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07561");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setRecordTranslator(strRecordTranslator8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder7.setSSLTruststore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder7.setRetry(kafkaSpoutRetryService13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07562() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07562");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        strBuilder5.maxRetries = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder5.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder5.valueDesClazz;
        strBuilder5.maxRetries = (byte) 1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test07563() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07563");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        int int8 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.getTranslator();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        int int23 = strBuilder22.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int29 = strKafkaSpoutConfig28.getMaxTupleRetries();
        strKafkaSpoutConfig28.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = strKafkaSpoutConfig28.retryService;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strBuilder38.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        strKafkaSpoutConfig28.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy40);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        long long45 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer47 = strKafkaSpoutConfig46.getValueDeserializer();
        int int48 = strKafkaSpoutConfig46.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strKafkaSpoutConfig46.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer50 = strKafkaSpoutConfig46.valueDes;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass57 = strBuilder56.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder56.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder56.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder69.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        strKafkaSpoutConfig46.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer73 = strKafkaSpoutConfig46.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = strKafkaSpoutConfig46.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig75.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy78 = strKafkaSpoutConfig75.firstPollOffsetStrategy;
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList82);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer85 = null;
        strBuilder84.keyDes = strSerializableDeserializer85;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer87 = strBuilder84.keyDes;
        int int88 = strBuilder84.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.Subscription subscription89 = strBuilder84.subscription;
        subscription89.refreshAssignment();
        strKafkaSpoutConfig75.subscription = subscription89;
        subscription89.refreshAssignment();
        strKafkaSpoutConfig46.subscription = subscription89;
        strKafkaSpoutConfig0.subscription = subscription89;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 1L + "'", long45 == 1L);
        org.junit.Assert.assertNull(objDeserializer47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertNull(objSerializableDeserializer50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objDeserializer73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(firstPollOffsetStrategy78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNull(strSerializableDeserializer87);
// flaky:         org.junit.Assert.assertTrue("'" + int88 + "' != '" + 10 + "'", int88 == 10);
        org.junit.Assert.assertNotNull(subscription89);
    }

    @Test
    public void test07564() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07564");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        int int27 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long28 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator31 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertNull(strRecordTranslator31);
    }

    @Test
    public void test07565() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07565");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long7 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass8 = strKafkaSpoutConfig0.valueDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (byte) 10;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator12 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(wildcardClass8);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strRecordTranslator12);
    }

    @Test
    public void test07566() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07566");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder8.keyDes = strSerializableDeserializer9;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = strKafkaSpoutConfig12.translator;
        long long14 = strKafkaSpoutConfig12.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer15 = strKafkaSpoutConfig12.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = strKafkaSpoutConfig12.valueDes;
        int int17 = strKafkaSpoutConfig12.getMaxUncommittedOffsets();
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        strBuilder23.keyDes = strSerializableDeserializer24;
        long long26 = strBuilder23.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strBuilder37.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setPartitionRefreshPeriodMs((long) 1);
        int int43 = strBuilder42.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder42.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder42.setSecurityProtocol("hi!");
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        strBuilder55.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder55.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder61.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass70 = strBuilder69.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder69.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        strBuilder78.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = strBuilder78.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder69.setProp(strMap81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder61.setProp(strMap81);
        org.apache.storm.kafka.spout.Subscription subscription84 = strBuilder61.subscription;
        strBuilder49.subscription = subscription84;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer30, strSerializableDeserializer31, subscription84);
        strBuilder23.subscription = subscription84;
        strKafkaSpoutConfig12.subscription = subscription84;
        strBuilder8.subscription = subscription84;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription84);
        java.lang.String str91 = subscription84.getTopicsString();
        java.lang.String str92 = subscription84.getTopicsString();
        java.lang.String str93 = subscription84.getTopicsString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNull(strRecordTranslator13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNull(strDeserializer15);
        org.junit.Assert.assertNull(objSerializableDeserializer16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 32L + "'", long26 == 32L);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(subscription84);
        org.junit.Assert.assertEquals("'" + str91 + "' != '" + "" + "'", str91, "");
        org.junit.Assert.assertEquals("'" + str92 + "' != '" + "" + "'", str92, "");
        org.junit.Assert.assertEquals("'" + str93 + "' != '" + "" + "'", str93, "");
    }

    @Test
    public void test07567() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07567");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strBuilder10.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder34.setGroupId("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder34.partitionRefreshPeriodMs = 'a';
        java.util.Properties properties39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder34.setProp(properties39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test07568() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07568");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer23, strSerializableDeserializer24, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer20, strSerializableDeserializer21, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer16, strRecordTranslatorSerializableDeserializer17, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer13, strComparableSerializableDeserializer14, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer10, strMapSerializableDeserializer11, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.reflect.Type> strCollectionBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer7, typeSerializableDeserializer8, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray28);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> genericDeclarationBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", genericDeclarationSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, strArray28);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
    }

    @Test
    public void test07569() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07569");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={ssl.keystore.password=, ssl.key.password=hi!, group.id=KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}, ssl.keystore.location=, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=30000, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test07570() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07570");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc5 = null;
        org.apache.storm.tuple.Fields fields6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setRecordTranslator(strConsumerRecordFunc5, fields6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder4.setFetchMinBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder4.setPartitionRefreshPeriodMs((long) 0);
        strBuilder4.offsetCommitPeriodMs = 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig15 = strBuilder4.build();
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig15);
    }

    @Test
    public void test07571() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07571");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = strKafkaSpoutConfig0.valueDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 1;
        java.lang.String str10 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07572() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07572");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setPollTimeoutMs((long) 100);
        strBuilder8.pollTimeoutMs = 32L;
        strBuilder8.maxRetries = 0;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test07573() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07573");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder10.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = strBuilder13.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService18;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07574() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07574");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setSecurityProtocol("hi!");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder26.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder32.setProp(strMap52);
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder32.subscription;
        strBuilder20.subscription = subscription55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription55);
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        strBuilder63.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = strBuilder63.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder63.setPartitionRefreshPeriodMs((long) 1);
        int int69 = strBuilder68.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder68.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int75 = strKafkaSpoutConfig74.getMaxTupleRetries();
        strKafkaSpoutConfig74.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = strKafkaSpoutConfig74.retryService;
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList82);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass85 = strBuilder84.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy86 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder84.firstPollOffsetStrategy = firstPollOffsetStrategy86;
        strKafkaSpoutConfig74.firstPollOffsetStrategy = firstPollOffsetStrategy86;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder68.setFirstPollOffsetStrategy(firstPollOffsetStrategy86);
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy86;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder92 = strBuilder57.setPartitionRefreshPeriodMs((long) (byte) 10);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass93 = strBuilder92.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(wildcardClass85);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy86 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy86.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNull(wildcardClass93);
    }

    @Test
    public void test07575() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07575");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer8;
        long long10 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
    }

    @Test
    public void test07576() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07576");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass5 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy6;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertNull(wildcardClass5);
    }

    @Test
    public void test07577() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07577");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Class<?>, java.io.Serializable> wildcardClassBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Class<?>, java.io.Serializable>();
    }

    @Test
    public void test07578() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07578");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        strBuilder31.maxUncommittedOffsets = '4';
        strBuilder31.maxUncommittedOffsets = 52;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
    }

    @Test
    public void test07579() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07579");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription15 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertNull(subscription15);
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
    }

    @Test
    public void test07580() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07580");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07581() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07581");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.io.Serializable> strRecordTranslatorBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.io.Serializable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strRecordTranslatorSerializableDeserializer6, serializableSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.List<java.lang.String>> randomAccessBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.List<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer1, strListSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.RandomAccess, java.util.List<java.lang.String>> randomAccessKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.RandomAccess, java.util.List<java.lang.String>>(randomAccessBuilder21);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07582() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07582");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.getRetryService();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        long long10 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + (-1L) + "'", long10 == (-1L));
    }

    @Test
    public void test07583() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07583");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPartitionRefreshPeriodMs(0L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.valueDesClazz;
        long long14 = strBuilder12.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder12.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder12.setPartitionRefreshPeriodMs((long) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder18.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder35.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder35.setPartitionRefreshPeriodMs((long) 35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder35.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int44 = strBuilder43.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer46, strSerializableDeserializer47, strArray51);
        strBuilder53.maxRetries = '#';
        long long56 = strBuilder53.offsetCommitPeriodMs;
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder62.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = null;
        strBuilder67.retryService = kafkaSpoutRetryService68;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = strBuilder67.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer71 = null;
        strBuilder67.valueDes = strSerializableDeserializer71;
        strBuilder67.pollTimeoutMs = ' ';
        strBuilder67.offsetCommitPeriodMs = ' ';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator77 = strBuilder67.translator;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder53.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator77, fields78, "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder43.setRecordTranslator(strRecordTranslator77);
        strBuilder20.translator = strRecordTranslator77;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2147483647L + "'", long14 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
// flaky:         org.junit.Assert.assertTrue("'" + long56 + "' != '" + 2147483647L + "'", long56 == 2147483647L);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strRecordTranslator77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
    }

    @Test
    public void test07584() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07584");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (-1L);
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int10 = strKafkaSpoutConfig9.getMaxTupleRetries();
        strKafkaSpoutConfig9.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strKafkaSpoutConfig9.keyDes;
        int int14 = strKafkaSpoutConfig9.maxUncommittedOffsets;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = null;
        strBuilder25.retryService = kafkaSpoutRetryService26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        strKafkaSpoutConfig9.kafkaProps = strMap28;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap28);
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap28);
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap28);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap32);
        strKafkaSpoutConfig0.kafkaProps = strMap33;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap33);
    }

    @Test
    public void test07585() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07585");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 0;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        int int10 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test07586() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07586");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass16 = strBuilder15.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder15.setFetchMinBytes((int) (byte) 0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass19 = strBuilder15.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder15.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder15.pollTimeoutMs = 52L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder15.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder32.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setPartitionRefreshPeriodMs((long) 1);
        int int38 = strBuilder37.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        strKafkaSpoutConfig43.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = strKafkaSpoutConfig43.retryService;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder37.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription62 = strBuilder37.subscription;
        java.lang.String[] strArray66 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder67.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder69.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer72 = strBuilder71.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator73 = strBuilder71.translator;
        org.apache.storm.tuple.Fields fields74 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder37.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator73, fields74);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer76 = strBuilder75.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator77 = strBuilder75.translator;
        org.apache.storm.tuple.Fields fields78 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator77, fields78, "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.tuple.Fields fields81 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator77, fields81, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(subscription62);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNull(strSerializableDeserializer72);
        org.junit.Assert.assertNotNull(strRecordTranslator73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNull(strSerializableDeserializer76);
        org.junit.Assert.assertNotNull(strRecordTranslator77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test07587() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07587");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer15, strListSerializableDeserializer16, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]> charSequenceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", charSequenceSerializableDeserializer5, strArraySerializableDeserializer6, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray18);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder25.kafkaProps;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap26);
    }

    @Test
    public void test07588() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07588");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        int int23 = strBuilder22.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder22.setSecurityProtocol("hi!");
        long long30 = strBuilder29.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder29.kafkaProps;
        long long32 = strBuilder29.partitionRefreshPeriodMs;
        long long33 = strBuilder29.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setMaxUncommittedOffsets(32);
        int int36 = strBuilder29.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = strBuilder29.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 32L + "'", long30 == 32L);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 32 + "'", int36 == 32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07589() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07589");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer5, strListSerializableDeserializer6, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray8);
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder16.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = strBuilder18.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder18.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator22 = strBuilder21.translator;
        strBuilder11.translator = strRecordTranslator22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder11.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        java.lang.String[] strArray34 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer31, strSerializableDeserializer32, (java.util.Collection<java.lang.String>) strList35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer28, charSequenceSerializableDeserializer29, (java.util.Collection<java.lang.String>) strList35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder39.offsetCommitPeriodMs = (byte) 10;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder25.setProp(strMap42);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap42);
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap44);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strRecordTranslator22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strMap45);
    }

    @Test
    public void test07590() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07590");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray13);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test07591() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07591");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=32, maxRetries=97, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test07592() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07592");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = strBuilder8.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder8.setMaxPollRecords(52);
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strBuilder15.kafkaProps;
        strBuilder15.pollTimeoutMs = 0L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = strBuilder15.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder15.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strRecordTranslator11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNull(strSerializableDeserializer19);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test07593() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07593");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        int int10 = strKafkaSpoutConfig0.maxRetries;
        long long11 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test07594() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07594");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray15);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("", strSerializableDeserializer1, strSerializableDeserializer2, strArray15);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test07595() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07595");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        long long10 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        int int11 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator12 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(strRecordTranslator12);
    }

    @Test
    public void test07596() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07596");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "hi!", "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.ArrayList<java.lang.String>> subscriptionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", subscriptionSerializableDeserializer4, strListSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        java.util.regex.Pattern pattern24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer22, strSerializableDeserializer23, pattern24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass40 = strBuilder39.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder39.setPartitionRefreshPeriodMs(0L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass47 = strBuilder46.valueDesClazz;
        long long48 = strBuilder46.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder46.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.Subscription subscription51 = strBuilder46.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = null;
        strBuilder46.retryService = kafkaSpoutRetryService52;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator54 = strBuilder46.translator;
        org.apache.storm.tuple.Fields fields55 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator54, fields55, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.tuple.Fields fields58 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator54, fields58, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = null;
        strBuilder60.retryService = kafkaSpoutRetryService61;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2147483647L + "'", long48 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(subscription51);
        org.junit.Assert.assertNotNull(strRecordTranslator54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test07597() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07597");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        strBuilder4.retryService = kafkaSpoutRetryService5;
        long long7 = strBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig8.maxRetries = (short) 1;
        long long11 = strKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig8.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig8.firstPollOffsetStrategy;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        long long33 = strBuilder19.pollTimeoutMs;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass40 = strBuilder39.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setRecordTranslator(strRecordTranslator50);
        strBuilder49.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder43.setProp(strMap54);
        strKafkaSpoutConfig8.kafkaProps = strMap54;
        long long57 = strKafkaSpoutConfig8.getPartitionRefreshPeriodMs();
        int int58 = strKafkaSpoutConfig8.maxRetries;
        long long59 = strKafkaSpoutConfig8.partitionRefreshPeriodMs;
        long long60 = strKafkaSpoutConfig8.pollTimeoutMs;
        int int61 = strKafkaSpoutConfig8.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService62 = strKafkaSpoutConfig8.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strKafkaSpoutConfig8.getKafkaProps();
        strBuilder4.kafkaProps = strMap63;
        strBuilder4.maxUncommittedOffsets = 0;
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 32L + "'", long33 == 32L);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 1 + "'", int58 == 1);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService62);
        org.junit.Assert.assertNotNull(strMap63);
    }

    @Test
    public void test07598() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07598");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int15 = strKafkaSpoutConfig14.getMaxTupleRetries();
        strKafkaSpoutConfig14.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = strKafkaSpoutConfig14.keyDes;
        int int19 = strKafkaSpoutConfig14.maxUncommittedOffsets;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = null;
        strBuilder30.retryService = kafkaSpoutRetryService31;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder30.kafkaProps;
        strKafkaSpoutConfig14.kafkaProps = strMap33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder13.setProp(strMap33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer44, strSerializableDeserializer45, (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer41, strCollectionSerializableDeserializer42, (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer38, strSerializableDeserializer39, (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder13.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder52);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer56 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer55, strSerializableDeserializer56, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder62.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        strBuilder71.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = strBuilder71.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder71.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = strBuilder71.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = null;
        strBuilder71.retryService = kafkaSpoutRetryService78;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder64.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder80.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int85 = strKafkaSpoutConfig84.getMaxTupleRetries();
        strKafkaSpoutConfig84.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = strKafkaSpoutConfig84.retryService;
        long long89 = strKafkaSpoutConfig84.offsetCommitPeriodMs;
        java.lang.String str90 = strKafkaSpoutConfig84.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy91 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        strKafkaSpoutConfig84.firstPollOffsetStrategy = firstPollOffsetStrategy91;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder83.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder52.setFetchMinBytes(97);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str90, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy91 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy91.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test07599() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07599");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer9;
        long long11 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test07600() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07600");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        long long7 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 1L + "'", long7 == 1L);
        org.junit.Assert.assertNull(objSerializableDeserializer10);
    }

    @Test
    public void test07601() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07601");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig31 = strBuilder29.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int35 = strBuilder29.maxUncommittedOffsets;
        long long36 = strBuilder29.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(strBuilder34);
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 2147483647L + "'", long36 == 2147483647L);
    }

    @Test
    public void test07602() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07602");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        java.lang.String str10 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 32L;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07603() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07603");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = strBuilder6.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder6.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder6.setPartitionRefreshPeriodMs(97L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder6.setPartitionRefreshPeriodMs(35L);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07604() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07604");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass8 = strKafkaSpoutConfig0.keyDesClazz;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer10 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long11 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(wildcardClass8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test07605() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07605");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder9.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder9.setMaxPollRecords(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder9.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int18 = strBuilder9.maxUncommittedOffsets;
        strBuilder9.maxRetries = (short) -1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
    }

    @Test
    public void test07606() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07606");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setRecordTranslator(strRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int17 = strBuilder16.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder16.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        strBuilder16.valueDes = strSerializableDeserializer20;
        long long22 = strBuilder16.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
// flaky:         org.junit.Assert.assertTrue("'" + int17 + "' != '" + 10 + "'", int17 == 10);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + (-1L) + "'", long22 == (-1L));
    }

    @Test
    public void test07607() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07607");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.util.AbstractList<java.lang.String>> strRecordTranslatorBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strRecordTranslatorSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test07608() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07608");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strComparableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer1, strRecordTranslatorSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strComparableKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>(strComparableBuilder4);
    }

    @Test
    public void test07609() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07609");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.Subscription> cloneableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", cloneableSerializableDeserializer1, subscriptionSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, org.apache.storm.kafka.spout.Subscription> cloneableKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, org.apache.storm.kafka.spout.Subscription>(cloneableBuilder4);
    }

    @Test
    public void test07610() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07610");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        long long6 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        int int10 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        strBuilder30.keyDes = strSerializableDeserializer31;
        long long33 = strBuilder30.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setPartitionRefreshPeriodMs((long) 1);
        int int50 = strBuilder49.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder49.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder49.setSecurityProtocol("hi!");
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder62.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder68.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList74);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass77 = strBuilder76.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder76.firstPollOffsetStrategy = firstPollOffsetStrategy78;
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList83);
        strBuilder85.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap88 = strBuilder85.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder76.setProp(strMap88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder68.setProp(strMap88);
        org.apache.storm.kafka.spout.Subscription subscription91 = strBuilder68.subscription;
        strBuilder56.subscription = subscription91;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer37, strSerializableDeserializer38, subscription91);
        strBuilder30.subscription = subscription91;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer23, strSerializableDeserializer24, subscription91);
        strBuilder19.subscription = subscription91;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, subscription91);
        strKafkaSpoutConfig0.subscription = subscription91;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer99 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 35 + "'", int10 == 35);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 32L + "'", long33 == 32L);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(wildcardClass77);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy78 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy78.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strMap88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(subscription91);
        org.junit.Assert.assertNull(strDeserializer99);
    }

    @Test
    public void test07611() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07611");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        strBuilder9.pollTimeoutMs = 2147483647;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer13, strSerializableDeserializer14, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator23 = strBuilder20.translator;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator23, fields24, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder9.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder28.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder32.keyDes;
        int int34 = strBuilder32.maxRetries;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strRecordTranslator23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNull(strSerializableDeserializer33);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
    }

    @Test
    public void test07612() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07612");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) -1;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        int int15 = strBuilder14.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription16 = strBuilder14.subscription;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int21 = strKafkaSpoutConfig20.getMaxTupleRetries();
        strKafkaSpoutConfig20.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig20.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig20.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int29 = strKafkaSpoutConfig28.getMaxTupleRetries();
        long long30 = strKafkaSpoutConfig28.getPollTimeoutMs();
        strKafkaSpoutConfig28.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = strKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator34 = strKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = strKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int37 = strKafkaSpoutConfig36.getMaxTupleRetries();
        strKafkaSpoutConfig36.maxRetries = 1;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strBuilder45.kafkaProps;
        strKafkaSpoutConfig36.kafkaProps = strMap46;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strKafkaSpoutConfig36.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strKafkaSpoutConfig36.kafkaProps;
        strKafkaSpoutConfig28.kafkaProps = strMap49;
        strKafkaSpoutConfig20.kafkaProps = strMap49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder19.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder14.setProp(strMap49);
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder59.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        strBuilder68.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder68.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder59.setProp(strMap71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder72.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator77 = strKafkaSpoutConfig0.translator;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass78 = strKafkaSpoutConfig0.keyDesClazz;
        int int79 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strDeserializer6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy33);
        org.junit.Assert.assertNull(strRecordTranslator34);
        org.junit.Assert.assertNull(firstPollOffsetStrategy35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strRecordTranslator77);
        org.junit.Assert.assertNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 1 + "'", int79 == 1);
    }

    @Test
    public void test07613() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07613");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer11, strSerializableDeserializer12, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer4, strRecordTranslatorSerializableDeserializer5, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder22.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long25 = strBuilder24.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder24.keyDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap27);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 32L + "'", long25 == 32L);
        org.junit.Assert.assertNull(wildcardClass26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test07614() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07614");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray12);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07615() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07615");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setPartitionRefreshPeriodMs((long) 1);
        int int24 = strBuilder23.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder23.setSecurityProtocol("hi!");
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder36.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder42.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass51 = strBuilder50.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        strBuilder59.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = strBuilder59.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder50.setProp(strMap62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder42.setProp(strMap62);
        org.apache.storm.kafka.spout.Subscription subscription65 = strBuilder42.subscription;
        strBuilder30.subscription = subscription65;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, subscription65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription65);
        strKafkaSpoutConfig0.subscription = subscription65;
        long long70 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator71 = strKafkaSpoutConfig0.translator;
        long long72 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long73 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(subscription65);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator71);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
    }

    @Test
    public void test07616() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07616");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        long long18 = strBuilder17.pollTimeoutMs;
        long long19 = strBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig20 = strBuilder17.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 32L + "'", long18 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig20);
    }

    @Test
    public void test07617() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07617");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        int int8 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        int int11 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig0.valueDes;
        int int13 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test07618() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07618");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        java.lang.String str3 = strKafkaSpoutConfig0.toString();
        long long4 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator7;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
    }

    @Test
    public void test07619() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07619");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setRecordTranslator(strConsumerRecordFunc7, fields8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long11 = strBuilder5.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder5.valueDesClazz;
        long long13 = strBuilder5.pollTimeoutMs;
        int int14 = strBuilder5.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = strBuilder5.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService15);
    }

    @Test
    public void test07620() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07620");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        long long11 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        int int12 = strKafkaSpoutConfig0.maxRetries;
        long long13 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str14 = strKafkaSpoutConfig0.toString();
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        long long16 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService17;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
    }

    @Test
    public void test07621() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07621");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer21, strSerializableDeserializer22, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.Iterable<java.lang.String>> strKafkaSpoutConfigBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strKafkaSpoutConfigSerializableDeserializer16, strIterableSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Cloneable> typeBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.Cloneable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer4, cloneableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList26);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList26);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07622() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07622");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setRecordTranslator(strRecordTranslator12);
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder19.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder19.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig29.maxRetries = (short) 1;
        long long32 = strKafkaSpoutConfig29.offsetCommitPeriodMs;
        java.lang.String str33 = strKafkaSpoutConfig29.toString();
        int int34 = strKafkaSpoutConfig29.getMaxTupleRetries();
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        strBuilder40.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = strBuilder40.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder40.setPartitionRefreshPeriodMs((long) 1);
        int int46 = strBuilder45.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder45.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder45.setSecurityProtocol("hi!");
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        strBuilder58.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder58.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder64.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass73 = strBuilder72.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder72.firstPollOffsetStrategy = firstPollOffsetStrategy74;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList79);
        strBuilder81.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = strBuilder81.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = strBuilder72.setProp(strMap84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder64.setProp(strMap84);
        org.apache.storm.kafka.spout.Subscription subscription87 = strBuilder64.subscription;
        strBuilder52.subscription = subscription87;
        subscription87.refreshAssignment();
        strKafkaSpoutConfig29.subscription = subscription87;
        strBuilder19.subscription = subscription87;
        strBuilder11.subscription = subscription87;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Cloneable> strArrayBuilder93 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Cloneable>("hi!", strArraySerializableDeserializer4, cloneableSerializableDeserializer5, subscription87);
        subscription87.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription87);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder95.setMaxUncommittedOffsets((int) '4');
        strBuilder95.partitionRefreshPeriodMs = 1L;
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str33, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 1 + "'", int34 == 1);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(subscription87);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test07623() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07623");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription6 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(subscription6);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test07624() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07624");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        java.lang.String str16 = strKafkaSpoutConfig0.toString();
        boolean boolean17 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
        java.lang.String str18 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer19 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long20 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str21 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str18, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07625() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07625");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
    }

    @Test
    public void test07626() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07626");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder11.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy13;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder11.setProp(strMap23);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator25 = null;
        strBuilder11.translator = strRecordTranslator25;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator28 = strKafkaSpoutConfig27.translator;
        long long29 = strKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strKafkaSpoutConfig27.kafkaProps;
        java.lang.String str31 = strKafkaSpoutConfig27.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer32 = null;
        strKafkaSpoutConfig27.valueDes = objSerializableDeserializer32;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder45.setPartitionRefreshPeriodMs((long) 1);
        int int51 = strBuilder50.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder50.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder50.setSecurityProtocol("hi!");
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        strBuilder63.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder63.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder69.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList75);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass78 = strBuilder77.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy79 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder77.firstPollOffsetStrategy = firstPollOffsetStrategy79;
        java.lang.String[] strArray83 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList84 = new java.util.ArrayList<java.lang.String>();
        boolean boolean85 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList84, strArray83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList84);
        strBuilder86.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap89 = strBuilder86.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder77.setProp(strMap89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder69.setProp(strMap89);
        org.apache.storm.kafka.spout.Subscription subscription92 = strBuilder69.subscription;
        strBuilder57.subscription = subscription92;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer38, strSerializableDeserializer39, subscription92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer35, strSerializableDeserializer36, subscription92);
        strKafkaSpoutConfig27.subscription = subscription92;
        strBuilder11.subscription = subscription92;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.reflect.Type> strKafkaSpoutConfigBuilder98 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strKafkaSpoutConfigSerializableDeserializer4, typeSerializableDeserializer5, subscription92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strCollectionBuilder99 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription92);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(strRecordTranslator28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str31, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(wildcardClass78);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy79 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy79.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertTrue("'" + boolean85 + "' != '" + true + "'", boolean85 == true);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strMap89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(subscription92);
    }

    @Test
    public void test07627() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07627");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Iterable<java.lang.String>, java.util.RandomAccess> strIterableKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Iterable<java.lang.String>, java.util.RandomAccess>();
    }

    @Test
    public void test07628() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07628");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer22 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer21, strListSerializableDeserializer22, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]> charSequenceBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", charSequenceSerializableDeserializer11, strArraySerializableDeserializer12, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.Subscription> objBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", objSerializableDeserializer8, subscriptionSerializableDeserializer9, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Object> randomAccessBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Object>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer2, objSerializableDeserializer3, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder33.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test07629() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07629");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer9;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription12 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(subscription11);
        org.junit.Assert.assertNull(subscription12);
    }

    @Test
    public void test07630() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07630");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strBuilder5.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator13 = strBuilder12.translator;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder25.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder25.setMaxPollRecords(100);
        long long30 = strBuilder25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder25.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setSecurityProtocol("");
        strBuilder33.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder33.setMaxUncommittedOffsets((int) (byte) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass48 = strBuilder47.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setRecordTranslator(strConsumerRecordFunc49, fields50, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long53 = strBuilder47.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder47.valueDesClazz;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder60.setRecordTranslator(strRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder60.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = strBuilder60.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        strBuilder41.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        strBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer69 = null;
        strBuilder12.valueDes = strSerializableDeserializer69;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder12.setFetchMinBytes((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strRecordTranslator13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2147483647L + "'", long30 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(strBuilder52);
// flaky:         org.junit.Assert.assertTrue("'" + long53 + "' != '" + 32L + "'", long53 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder72);
    }

    @Test
    public void test07631() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07631");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer12, strCollectionSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer9, strListSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.String>> annotatedElementBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer4, strIterableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer29 = strKafkaSpoutConfig28.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strKafkaSpoutConfig28.getKafkaProps();
        long long31 = strKafkaSpoutConfig28.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass32 = strKafkaSpoutConfig28.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer38, strSerializableDeserializer39, (java.util.Collection<java.lang.String>) strList42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer35, charSequenceSerializableDeserializer36, (java.util.Collection<java.lang.String>) strList42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder46.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder46.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder51.kafkaProps;
        strKafkaSpoutConfig28.kafkaProps = strMap52;
        strBuilder27.kafkaProps = strMap52;
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder27.subscription;
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(objDeserializer29);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(subscription55);
    }

    @Test
    public void test07632() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07632");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.maxRetries = 'a';
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer14 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        int int26 = strBuilder25.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder25.setSecurityProtocol("hi!");
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder38.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass53 = strBuilder52.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strBuilder61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder52.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder44.setProp(strMap64);
        org.apache.storm.kafka.spout.Subscription subscription67 = strBuilder44.subscription;
        strBuilder32.subscription = subscription67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence> strMapBuilder69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer13, charSequenceSerializableDeserializer14, subscription67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.reflect.AnnotatedElement> strConsumerRecordFuncBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.reflect.AnnotatedElement>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer10, annotatedElementSerializableDeserializer11, subscription67);
        java.lang.String str71 = subscription67.getTopicsString();
        strKafkaSpoutConfig0.subscription = subscription67;
        strKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(subscription67);
        org.junit.Assert.assertEquals("'" + str71 + "' != '" + "" + "'", str71, "");
    }

    @Test
    public void test07633() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07633");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        strBuilder9.pollTimeoutMs = 2147483647;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer13, strSerializableDeserializer14, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator23 = strBuilder20.translator;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder9.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator23, fields24, "");
        long long27 = strBuilder26.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder26.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setMaxUncommittedOffsets((int) (short) 1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strRecordTranslator23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 2147483647L + "'", long27 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07634() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07634");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        strBuilder4.retryService = kafkaSpoutRetryService5;
        long long7 = strBuilder4.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder4.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder9.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder9.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPollRecords(10);
// flaky:         org.junit.Assert.assertTrue("'" + long7 + "' != '" + 32L + "'", long7 == 32L);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test07635() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07635");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = strBuilder15.retryService;
        strBuilder15.offsetCommitPeriodMs = 2147483647;
        long long19 = strBuilder15.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder15.setMaxPartitionFectchBytes((int) '4');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService16);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07636() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07636");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        strBuilder33.partitionRefreshPeriodMs = 35L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer37, strSerializableDeserializer38, (java.util.Collection<java.lang.String>) strList41);
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder49.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = null;
        strBuilder54.retryService = kafkaSpoutRetryService55;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator58 = strBuilder54.translator;
        strBuilder43.translator = strRecordTranslator58;
        strBuilder33.translator = strRecordTranslator58;
        long long61 = strBuilder33.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder33.setMaxUncommittedOffsets(52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder33.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer66 = null;
        strBuilder65.keyDes = strSerializableDeserializer66;
        long long68 = strBuilder65.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strRecordTranslator58);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2147483647L + "'", long61 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 35L + "'", long68 == 35L);
    }

    @Test
    public void test07637() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07637");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass9 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test07638() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07638");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.lang.CharSequence> strArrayKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.lang.CharSequence>();
    }

    @Test
    public void test07639() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07639");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07640() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07640");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long7 = strKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass9 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test07641() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07641");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.Subscription subscription3 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription4 = strKafkaSpoutConfig0.subscription;
        int int5 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(subscription3);
        org.junit.Assert.assertNull(subscription4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test07642() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07642");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        int int8 = strBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setOffsetCommitPeriodMs((long) 0);
        long long13 = strBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<?> wildcardClass16 = strBuilder10.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test07643() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07643");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder28.setSSLKeystore("", "", "hi!");
        int int35 = strBuilder34.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder22.setProp(strMap40);
        strKafkaSpoutConfig0.kafkaProps = strMap40;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer43 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.Subscription subscription44 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator45 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator45;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder34);
// flaky:         org.junit.Assert.assertTrue("'" + int35 + "' != '" + 10 + "'", int35 == 10);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNull(strDeserializer43);
        org.junit.Assert.assertNull(subscription44);
    }

    @Test
    public void test07644() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07644");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder17.keyDes = strSerializableDeserializer18;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        strBuilder17.kafkaProps = strMap37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder17.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = strBuilder17.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder45);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService46);
    }

    @Test
    public void test07645() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07645");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer7 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer6, strArraySerializableDeserializer7, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer3, strArraySerializableDeserializer4, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        int int19 = strBuilder18.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + int19 + "' != '" + 10 + "'", int19 == 10);
    }

    @Test
    public void test07646() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07646");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        long long11 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str13 = strKafkaSpoutConfig0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07647() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07647");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = strBuilder7.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder7.valueDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.Subscription subscription11 = strBuilder7.subscription;
        long long12 = strBuilder7.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder7.setMaxPartitionFectchBytes((int) (short) 100);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNotNull(subscription11);
// flaky:         org.junit.Assert.assertTrue("'" + long12 + "' != '" + 32L + "'", long12 == 32L);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07648() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07648");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer14, strSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.CharSequence> typeBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer8, charSequenceSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strBuilder31.keyDes;
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
    }

    @Test
    public void test07649() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07649");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer5, strListSerializableDeserializer6, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int13 = strKafkaSpoutConfig12.getMaxTupleRetries();
        strKafkaSpoutConfig12.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = strKafkaSpoutConfig12.retryService;
        long long17 = strKafkaSpoutConfig12.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = strKafkaSpoutConfig12.retryService;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        strBuilder24.keyDes = strSerializableDeserializer25;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder24.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long29 = strBuilder24.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder24.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int36 = strKafkaSpoutConfig35.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer37 = strKafkaSpoutConfig35.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        strKafkaSpoutConfig35.keyDes = strSerializableDeserializer38;
        strKafkaSpoutConfig35.pollTimeoutMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = strKafkaSpoutConfig35.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer44, strSerializableDeserializer45, (java.util.Collection<java.lang.String>) strList49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder52.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer56 = null;
        strBuilder55.keyDes = strSerializableDeserializer56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder55.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        strKafkaSpoutConfig35.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        strBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        strKafkaSpoutConfig12.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 2147483647L + "'", long29 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNull(strDeserializer37);
        org.junit.Assert.assertNull(firstPollOffsetStrategy42);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder63);
    }

    @Test
    public void test07650() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07650");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strBuilder12.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder12.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder12.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder12.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer23, strSerializableDeserializer24, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder31.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder34.setMaxRetries((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = strBuilder36.valueDes;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        strBuilder43.keyDes = strSerializableDeserializer44;
        long long46 = strBuilder43.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder43.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder43.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern52);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator54 = strBuilder53.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder43.setRecordTranslator(strRecordTranslator54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder55.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder55.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.Subscription subscription60 = strBuilder55.subscription;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = strBuilder55.kafkaProps;
        strBuilder36.kafkaProps = strMap61;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder21.setProp(strMap63);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNull(strSerializableDeserializer37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 32L + "'", long46 == 32L);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strRecordTranslator54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(subscription60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test07651() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07651");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder5.setPollTimeoutMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder23.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        int int28 = strBuilder26.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder26.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = strBuilder30.keyDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(strSerializableDeserializer31);
    }

    @Test
    public void test07652() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07652");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator10);
    }

    @Test
    public void test07653() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07653");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        long long4 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 32;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = strKafkaSpoutConfig0.valueDes;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer11 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(objDeserializer11);
    }

    @Test
    public void test07654() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07654");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strBuilder12.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder12.setOffsetCommitPeriodMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder12.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription19 = strBuilder18.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig20 = strBuilder18.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder18.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(subscription19);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test07655() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07655");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer10 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer9, strArraySerializableDeserializer10, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer6, strArraySerializableDeserializer7, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String> typeBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.Type, java.lang.String> typeKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.Type, java.lang.String>(typeBuilder22);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07656() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07656");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        strBuilder4.partitionRefreshPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int8 = strKafkaSpoutConfig7.getMaxTupleRetries();
        strKafkaSpoutConfig7.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig7.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig7.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int16 = strKafkaSpoutConfig15.getMaxTupleRetries();
        long long17 = strKafkaSpoutConfig15.getPollTimeoutMs();
        strKafkaSpoutConfig15.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = strKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator21 = strKafkaSpoutConfig15.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = strKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int24 = strKafkaSpoutConfig23.getMaxTupleRetries();
        strKafkaSpoutConfig23.maxRetries = 1;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder32.kafkaProps;
        strKafkaSpoutConfig23.kafkaProps = strMap33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strKafkaSpoutConfig23.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = strKafkaSpoutConfig23.kafkaProps;
        strKafkaSpoutConfig15.kafkaProps = strMap36;
        strKafkaSpoutConfig7.kafkaProps = strMap36;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = strKafkaSpoutConfig7.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass40 = strKafkaSpoutConfig7.valueDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strKafkaSpoutConfig7.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder4.setProp(strMap41);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy20);
        org.junit.Assert.assertNull(strRecordTranslator21);
        org.junit.Assert.assertNull(firstPollOffsetStrategy22);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNull(strSerializableDeserializer39);
        org.junit.Assert.assertNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test07657() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07657");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> typeBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>();
    }

    @Test
    public void test07658() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07658");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        long long8 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.Subscription subscription12 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        long long15 = strKafkaSpoutConfig13.getPollTimeoutMs();
        strKafkaSpoutConfig13.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = strKafkaSpoutConfig13.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator19 = strKafkaSpoutConfig13.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = strKafkaSpoutConfig13.getFirstPollOffsetStrategy();
        java.lang.String str21 = strKafkaSpoutConfig13.toString();
        strKafkaSpoutConfig13.partitionRefreshPeriodMs = '#';
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        int int36 = strBuilder35.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder35.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strBuilder40.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap41;
        strKafkaSpoutConfig0.kafkaProps = strMap41;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(subscription12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy18);
        org.junit.Assert.assertNull(strRecordTranslator19);
        org.junit.Assert.assertNull(firstPollOffsetStrategy20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
// flaky:         org.junit.Assert.assertTrue("'" + int36 + "' != '" + 10 + "'", int36 == 10);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap41);
    }

    @Test
    public void test07659() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07659");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long9 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder15.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setPartitionRefreshPeriodMs((long) 1);
        int int21 = strBuilder20.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder20.maxRetries = '4';
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder20.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap28;
        int int30 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 1 + "'", int30 == 1);
    }

    @Test
    public void test07660() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07660");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer33, strSerializableDeserializer34, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator43 = strBuilder40.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder31.setRecordTranslator(strRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig45 = strBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator47 = strKafkaSpoutConfig46.translator;
        long long48 = strKafkaSpoutConfig46.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strKafkaSpoutConfig46.kafkaProps;
        java.lang.String str50 = strKafkaSpoutConfig46.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig46.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder53.setPartitionRefreshPeriodMs(32L);
        strBuilder55.pollTimeoutMs = 35L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        strBuilder55.keyDes = strSerializableDeserializer58;
        long long60 = strBuilder55.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strRecordTranslator43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig45);
        org.junit.Assert.assertNull(strRecordTranslator47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str50, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
// flaky:         org.junit.Assert.assertTrue("'" + long60 + "' != '" + 2147483647L + "'", long60 == 2147483647L);
    }

    @Test
    public void test07661() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07661");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        long long12 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test07662() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07662");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        long long53 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer54 = strKafkaSpoutConfig0.valueDes;
        long long55 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass56 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer54);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNull(wildcardClass56);
    }

    @Test
    public void test07663() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07663");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass23 = strBuilder22.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        strBuilder31.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder31.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder22.setProp(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder14.setProp(strMap34);
        org.apache.storm.kafka.spout.Subscription subscription37 = strBuilder14.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription37);
        strBuilder38.maxRetries = (byte) -1;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(subscription37);
    }

    @Test
    public void test07664() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07664");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = strBuilder2.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder2.offsetCommitPeriodMs = '#';
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
    }

    @Test
    public void test07665() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07665");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.Cloneable> strBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.Cloneable>();
    }

    @Test
    public void test07666() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07666");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer16, strListSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strMapBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer1, strBuilderSerializableDeserializer2, strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test07667() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07667");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder11.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig15.maxRetries = (short) 1;
        long long18 = strKafkaSpoutConfig15.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass19 = strKafkaSpoutConfig15.keyDesClazz;
        int int20 = strKafkaSpoutConfig15.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer21 = strKafkaSpoutConfig15.getKeyDeserializer();
        strKafkaSpoutConfig15.offsetCommitPeriodMs = (short) -1;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription31 = strBuilder29.subscription;
        java.util.regex.Pattern pattern33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int36 = strKafkaSpoutConfig35.getMaxTupleRetries();
        strKafkaSpoutConfig35.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig35.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig35.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        long long45 = strKafkaSpoutConfig43.getPollTimeoutMs();
        strKafkaSpoutConfig43.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = strKafkaSpoutConfig43.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator49 = strKafkaSpoutConfig43.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = strKafkaSpoutConfig43.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int52 = strKafkaSpoutConfig51.getMaxTupleRetries();
        strKafkaSpoutConfig51.maxRetries = 1;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = strBuilder60.kafkaProps;
        strKafkaSpoutConfig51.kafkaProps = strMap61;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strKafkaSpoutConfig51.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strKafkaSpoutConfig51.kafkaProps;
        strKafkaSpoutConfig43.kafkaProps = strMap64;
        strKafkaSpoutConfig35.kafkaProps = strMap64;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder34.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder29.setProp(strMap64);
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList72);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass75 = strBuilder74.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder74.firstPollOffsetStrategy = firstPollOffsetStrategy76;
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList81);
        strBuilder83.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = strBuilder83.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder74.setProp(strMap86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy88 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder87.firstPollOffsetStrategy = firstPollOffsetStrategy88;
        strBuilder68.firstPollOffsetStrategy = firstPollOffsetStrategy88;
        strKafkaSpoutConfig15.firstPollOffsetStrategy = firstPollOffsetStrategy88;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder92 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = strBuilder92.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass96 = strBuilder92.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNull(strDeserializer21);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
        org.junit.Assert.assertNotNull(subscription31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy48);
        org.junit.Assert.assertNull(strRecordTranslator49);
        org.junit.Assert.assertNull(firstPollOffsetStrategy50);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy88 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy88.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertNotNull(strBuilder95);
        org.junit.Assert.assertNotNull(wildcardClass96);
    }

    @Test
    public void test07668() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07668");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        strBuilder5.maxRetries = (byte) 100;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        strBuilder5.valueDes = strSerializableDeserializer10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setMaxRetries(35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder5.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig16 = strBuilder5.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig16);
    }

    @Test
    public void test07669() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07669");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        long long15 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer16;
        java.lang.String str18 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        java.lang.String str21 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str18, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str21, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNull(kafkaSpoutRetryService23);
    }

    @Test
    public void test07670() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07670");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        int int9 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.translator;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(strRecordTranslator10);
        org.junit.Assert.assertNull(wildcardClass11);
    }

    @Test
    public void test07671() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07671");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxUncommittedOffsets((int) (short) -1);
        long long15 = strBuilder14.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = strBuilder14.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 1L + "'", long15 == 1L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07672() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07672");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long8 = strKafkaSpoutConfig0.pollTimeoutMs;
        long long9 = strKafkaSpoutConfig0.pollTimeoutMs;
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(wildcardClass11);
    }

    @Test
    public void test07673() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07673");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(subscription11);
    }

    @Test
    public void test07674() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07674");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setRetry(kafkaSpoutRetryService13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07675() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07675");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        long long11 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        int int13 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder23.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        strBuilder26.keyDes = strSerializableDeserializer27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        org.apache.storm.kafka.spout.Subscription subscription32 = strKafkaSpoutConfig0.getSubscription();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 0;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(subscription32);
        org.junit.Assert.assertNull(strMap35);
    }

    @Test
    public void test07676() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07676");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        java.lang.String str16 = strKafkaSpoutConfig0.getConsumerGroupId();
        int int17 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator18;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer20;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(str16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test07677() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07677");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        strBuilder21.keyDes = strSerializableDeserializer22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder21.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setMaxPollRecords((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder27.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator33 = strKafkaSpoutConfig32.translator;
        long long34 = strKafkaSpoutConfig32.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strKafkaSpoutConfig32.kafkaProps;
        java.lang.String str36 = strKafkaSpoutConfig32.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strKafkaSpoutConfig32.kafkaProps;
        long long38 = strKafkaSpoutConfig32.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator39 = null;
        strKafkaSpoutConfig32.translator = strRecordTranslator39;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer41 = null;
        strKafkaSpoutConfig32.valueDes = objSerializableDeserializer41;
        long long43 = strKafkaSpoutConfig32.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder27.setProp("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) long43);
        java.lang.Class<?> wildcardClass45 = strBuilder44.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(strRecordTranslator33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNull(strMap35);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str36, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap37);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test07678() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07678");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setOffsetCommitPeriodMs(100L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder10.setMaxPollRecords((int) (short) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer25, strSerializableDeserializer26, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer22, charSequenceSerializableDeserializer23, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray30);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder10.setProp(strMap35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder36.setOffsetCommitPeriodMs((long) (byte) 10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test07679() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07679");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        long long7 = strKafkaSpoutConfig0.pollTimeoutMs;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strRecordTranslator10);
    }

    @Test
    public void test07680() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07680");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService10;
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        long long13 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.String str14 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strDeserializer6);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07681() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07681");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass4 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = strKafkaSpoutConfig0.getRetryService();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        long long10 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        strKafkaSpoutConfig0.pollTimeoutMs = 97;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test07682() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07682");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        int int6 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig8.maxRetries = (short) 1;
        long long11 = strKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass12 = strKafkaSpoutConfig8.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = strKafkaSpoutConfig8.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strKafkaSpoutConfig8.getKafkaProps();
        strKafkaSpoutConfig8.maxUncommittedOffsets = 10;
        java.lang.String str17 = strKafkaSpoutConfig8.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = strKafkaSpoutConfig8.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig19.maxRetries = (short) 1;
        long long22 = strKafkaSpoutConfig19.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strKafkaSpoutConfig19.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = strKafkaSpoutConfig19.firstPollOffsetStrategy;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass31 = strBuilder30.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy32;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder30.setProp(strMap42);
        long long44 = strBuilder30.pollTimeoutMs;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass51 = strBuilder50.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder60.setRecordTranslator(strRecordTranslator61);
        strBuilder60.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder54.setProp(strMap65);
        strKafkaSpoutConfig19.kafkaProps = strMap65;
        long long68 = strKafkaSpoutConfig19.getPartitionRefreshPeriodMs();
        int int69 = strKafkaSpoutConfig19.maxRetries;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = strKafkaSpoutConfig19.getKafkaProps();
        strKafkaSpoutConfig8.kafkaProps = strMap70;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap70);
        strKafkaSpoutConfig0.kafkaProps = strMap72;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy18);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy32 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy32.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder43);
// flaky:         org.junit.Assert.assertTrue("'" + long44 + "' != '" + 32L + "'", long44 == 32L);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + long68 + "' != '" + 0L + "'", long68 == 0L);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 1 + "'", int69 == 1);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strMap72);
    }

    @Test
    public void test07683() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07683");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.maxRetries = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strKafkaSpoutConfig0.keyDes;
        int int11 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer12;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test07684() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07684");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        java.lang.String str16 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator18;
        org.apache.storm.kafka.spout.Subscription subscription20 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
        org.junit.Assert.assertNull(subscription20);
    }

    @Test
    public void test07685() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07685");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer9 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        strKafkaSpoutConfig13.valueDes = objSerializableDeserializer26;
        java.lang.String str28 = strKafkaSpoutConfig13.toString();
        java.lang.String str29 = strKafkaSpoutConfig13.toString();
        boolean boolean30 = strKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strKafkaSpoutConfig13.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap31;
        org.apache.storm.kafka.spout.Subscription subscription33 = strKafkaSpoutConfig0.getSubscription();
        long long34 = strKafkaSpoutConfig0.pollTimeoutMs;
        long long35 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer9);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str28, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str29, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNull(subscription33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test07686() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07686");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig0.valueDes;
        strKafkaSpoutConfig0.pollTimeoutMs = 97L;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
    }

    @Test
    public void test07687() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07687");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer2, strBuilderSerializableDeserializer3, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder14.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "hi!");
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder23.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder29.setMaxPollRecords(100);
        int int34 = strBuilder29.maxUncommittedOffsets;
        java.util.regex.Pattern pattern36 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern36);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator38 = strBuilder37.translator;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        strBuilder44.keyDes = strSerializableDeserializer45;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder53.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator57 = strBuilder53.translator;
        strBuilder44.translator = strRecordTranslator57;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder37.setRecordTranslator(strRecordTranslator57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder29.setRecordTranslator(strRecordTranslator57);
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder14.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator57, fields61);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer63 = strBuilder14.keyDes;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + int34 + "' != '" + 10 + "'", int34 == 10);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strRecordTranslator38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strRecordTranslator57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNull(strSerializableDeserializer63);
    }

    @Test
    public void test07688() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07688");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.Subscription subscription10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setRecordTranslator(strConsumerRecordFunc12, fields13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer17, strSerializableDeserializer18, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder32.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setPartitionRefreshPeriodMs((long) 1);
        int int38 = strBuilder37.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        strKafkaSpoutConfig43.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = strKafkaSpoutConfig43.retryService;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        int int62 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        strBuilder68.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder68.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder68.setPartitionRefreshPeriodMs((long) 1);
        int int74 = strBuilder73.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder73.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder73.setSecurityProtocol("hi!");
        long long81 = strBuilder80.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = strBuilder80.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap82);
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap83);
        strKafkaSpoutConfig0.kafkaProps = strMap84;
        org.apache.storm.kafka.spout.Subscription subscription86 = strKafkaSpoutConfig0.getSubscription();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass87 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
// flaky:         org.junit.Assert.assertTrue("'" + long81 + "' != '" + 32L + "'", long81 == 32L);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNull(subscription86);
        org.junit.Assert.assertNull(wildcardClass87);
    }

    @Test
    public void test07689() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07689");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        long long9 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (-1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass12 = strKafkaSpoutConfig0.valueDesClazz;
        java.lang.String str13 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription14 = strKafkaSpoutConfig0.getSubscription();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription14);
    }

    @Test
    public void test07690() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07690");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        int int27 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long28 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator29 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator29);
        org.junit.Assert.assertNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNull(kafkaSpoutRetryService31);
    }

    @Test
    public void test07691() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07691");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig44.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = null;
        strKafkaSpoutConfig44.retryService = kafkaSpoutRetryService47;
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        strBuilder54.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder54.setPartitionRefreshPeriodMs((long) 1);
        int int60 = strBuilder59.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder59.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int66 = strKafkaSpoutConfig65.getMaxTupleRetries();
        strKafkaSpoutConfig65.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService69 = strKafkaSpoutConfig65.retryService;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass76 = strBuilder75.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder75.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        strKafkaSpoutConfig65.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder59.setFirstPollOffsetStrategy(firstPollOffsetStrategy77);
        strKafkaSpoutConfig44.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        strBuilder41.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder41.setMaxPartitionFectchBytes(97);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder84);
    }

    @Test
    public void test07692() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07692");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer6;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (-1);
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strKafkaSpoutConfig0.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean14 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strMap13);
    }

    @Test
    public void test07693() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07693");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer3;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder12.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder12.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder12.setRecordTranslator(strConsumerRecordFunc18, fields19, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder27.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder27.setProp(strMap39);
        long long41 = strBuilder27.pollTimeoutMs;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass48 = strBuilder47.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        strBuilder56.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = strBuilder56.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder47.setProp(strMap59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        strBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = strKafkaSpoutConfig0.getRetryService();
        strKafkaSpoutConfig0.maxRetries = ' ';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder40);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(kafkaSpoutRetryService66);
    }

    @Test
    public void test07694() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07694");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder5.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long45 = strBuilder44.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder44.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder48.setPartitionRefreshPeriodMs((long) 0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 32L + "'", long45 == 32L);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test07695() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07695");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer33, strSerializableDeserializer34, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator43 = strBuilder40.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder31.setRecordTranslator(strRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig45 = strBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator47 = strKafkaSpoutConfig46.translator;
        long long48 = strKafkaSpoutConfig46.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strKafkaSpoutConfig46.kafkaProps;
        java.lang.String str50 = strKafkaSpoutConfig46.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig46.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder53.setPartitionRefreshPeriodMs(32L);
        strBuilder55.pollTimeoutMs = 35L;
        java.lang.Object obj59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder55.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", obj59);
        strBuilder60.pollTimeoutMs = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder60.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService65 = strBuilder60.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strRecordTranslator43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig45);
        org.junit.Assert.assertNull(strRecordTranslator47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str50, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService65);
    }

    @Test
    public void test07696() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07696");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07697() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07697");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        long long18 = strBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder20.pollTimeoutMs = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder20.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder26.setMaxPollRecords(32);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 32L + "'", long18 == 32L);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test07698() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07698");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer12, strCollectionSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractCollection<java.lang.String>> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer6, strCollectionSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test07699() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07699");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder11.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setMaxUncommittedOffsets(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setMaxPollRecords(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder16.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder16.setMaxRetries((int) (short) 0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07700() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07700");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        strBuilder33.partitionRefreshPeriodMs = 35L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer37, strSerializableDeserializer38, (java.util.Collection<java.lang.String>) strList41);
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder49.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = null;
        strBuilder54.retryService = kafkaSpoutRetryService55;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator58 = strBuilder54.translator;
        strBuilder43.translator = strRecordTranslator58;
        strBuilder33.translator = strRecordTranslator58;
        long long61 = strBuilder33.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder33.setMaxUncommittedOffsets(52);
        strBuilder33.offsetCommitPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder33.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder67.setMaxRetries(0);
        strBuilder69.maxUncommittedOffsets = (short) 1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strRecordTranslator58);
// flaky:         org.junit.Assert.assertTrue("'" + long61 + "' != '" + 2147483647L + "'", long61 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test07701() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07701");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        long long7 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass11 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = strKafkaSpoutConfig0.retryService;
        int int13 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(wildcardClass11);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
    }

    @Test
    public void test07702() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07702");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries(0);
        int int7 = strBuilder4.maxRetries;
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test07703() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07703");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder6.setMaxPartitionFectchBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int12 = strKafkaSpoutConfig11.getMaxTupleRetries();
        strKafkaSpoutConfig11.maxRetries = 1;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder20.kafkaProps;
        strKafkaSpoutConfig11.kafkaProps = strMap21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strKafkaSpoutConfig11.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = strKafkaSpoutConfig11.kafkaProps;
        strKafkaSpoutConfig11.offsetCommitPeriodMs = 0L;
        strKafkaSpoutConfig11.maxRetries = 97;
        int int29 = strKafkaSpoutConfig11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.Subscription subscription30 = strKafkaSpoutConfig11.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strKafkaSpoutConfig11.kafkaProps;
        strBuilder10.kafkaProps = strMap31;
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(subscription30);
        org.junit.Assert.assertNotNull(strMap31);
    }

    @Test
    public void test07704() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07704");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setRecordTranslator(strRecordTranslator11);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        strBuilder5.valueDes = strSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder5.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator17 = strBuilder5.translator;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(strRecordTranslator17);
    }

    @Test
    public void test07705() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07705");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        int int12 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription13 = strKafkaSpoutConfig0.getSubscription();
        java.lang.String str14 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(subscription13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07706() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07706");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer11 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.pollTimeoutMs = 30000L;
        java.lang.String str14 = strKafkaSpoutConfig0.toString();
        int int15 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strDeserializer11);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=30000, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=30000, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test07707() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07707");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> cloneableBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> cloneableKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>(cloneableBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07708() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07708");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer22, strListSerializableDeserializer23, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer19, strSerializableDeserializer20, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer16, strKafkaSpoutConfigSerializableDeserializer17, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Iterable<java.lang.String>> firstPollOffsetStrategyEnumBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer10, strIterableSerializableDeserializer11, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Iterable<java.lang.String>> strListBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer7, strIterableSerializableDeserializer8, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.String[]> annotatedElementBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=10, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer4, strArraySerializableDeserializer5, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, strArray25);
        org.junit.Assert.assertNotNull(strArray25);
    }

    @Test
    public void test07709() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07709");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        int int17 = strBuilder16.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setSecurityProtocol("hi!");
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder43.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        strBuilder52.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder43.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder35.setProp(strMap55);
        org.apache.storm.kafka.spout.Subscription subscription58 = strBuilder35.subscription;
        strBuilder23.subscription = subscription58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder23.setPartitionRefreshPeriodMs((long) (byte) 100);
        strBuilder23.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.Subscription subscription64 = strBuilder23.subscription;
        subscription64.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.lang.Object> strRecordTranslatorBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.lang.Object>("hi!", strRecordTranslatorSerializableDeserializer4, objSerializableDeserializer5, subscription64);
        subscription64.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.Map<java.lang.String, java.lang.Object>> charSequenceBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", charSequenceSerializableDeserializer1, strMapSerializableDeserializer2, subscription64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.CharSequence, java.util.Map<java.lang.String, java.lang.Object>> charSequenceKafkaSpoutConfig69 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.CharSequence, java.util.Map<java.lang.String, java.lang.Object>>(charSequenceBuilder68);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(subscription64);
    }

    @Test
    public void test07710() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07710");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
    }

    @Test
    public void test07711() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07711");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        java.util.Collection<java.lang.String> strCollection3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Iterable<java.lang.String>> serializableBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer1, strIterableSerializableDeserializer2, strCollection3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07712() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07712");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        long long9 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass10 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.translator;
        int int12 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 1L + "'", long9 == 1L);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test07713() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07713");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07714() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07714");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription21 = strBuilder20.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder22.setMaxPartitionFectchBytes(0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass25 = strBuilder24.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(subscription21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNull(wildcardClass25);
    }

    @Test
    public void test07715() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07715");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        strBuilder16.keyDes = strSerializableDeserializer17;
        long long19 = strBuilder16.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        strBuilder30.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder30.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setPartitionRefreshPeriodMs((long) 1);
        int int36 = strBuilder35.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder35.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder35.setSecurityProtocol("hi!");
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList46);
        strBuilder48.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder48.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass63 = strBuilder62.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder62.firstPollOffsetStrategy = firstPollOffsetStrategy64;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        strBuilder71.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = strBuilder71.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder62.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder54.setProp(strMap74);
        org.apache.storm.kafka.spout.Subscription subscription77 = strBuilder54.subscription;
        strBuilder42.subscription = subscription77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer23, strSerializableDeserializer24, subscription77);
        strBuilder16.subscription = subscription77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, subscription77);
        strBuilder5.subscription = subscription77;
        strBuilder5.pollTimeoutMs = 52L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = strBuilder5.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder5.setPartitionRefreshPeriodMs((long) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder88.setPartitionRefreshPeriodMs((long) (short) 100);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
    }

    @Test
    public void test07716() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07716");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test07717() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07717");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>();
    }

    @Test
    public void test07718() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07718");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07719() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07719");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setSecurityProtocol("hi!");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder26.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder32.setProp(strMap52);
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder32.subscription;
        strBuilder20.subscription = subscription55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription55);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        strBuilder57.valueDes = strSerializableDeserializer58;
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder64.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = strBuilder66.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder66.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator70 = strBuilder69.translator;
        strBuilder57.translator = strRecordTranslator70;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder57.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder57.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder78.setPollTimeoutMs((long) (short) 0);
        int int81 = strBuilder80.maxRetries;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strRecordTranslator70);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder80);
// flaky:         org.junit.Assert.assertTrue("'" + int81 + "' != '" + 10 + "'", int81 == 10);
    }

    @Test
    public void test07720() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07720");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer6, strSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig20 = strBuilder19.build();
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strBuilder30.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder30.setMaxUncommittedOffsets((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder19.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder36.setPollTimeoutMs(100L);
        long long39 = strBuilder36.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
// flaky:         org.junit.Assert.assertTrue("'" + long39 + "' != '" + 2147483647L + "'", long39 == 2147483647L);
    }

    @Test
    public void test07721() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07721");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig3.translator;
        long long5 = strKafkaSpoutConfig3.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig3.kafkaProps;
        java.lang.String str7 = strKafkaSpoutConfig3.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig3.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig3.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strKafkaSpoutConfig3.keyDes;
        strKafkaSpoutConfig3.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        strBuilder27.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setPartitionRefreshPeriodMs((long) 1);
        int int33 = strBuilder32.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder32.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription40 = strBuilder39.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer20, strSerializableDeserializer21, subscription40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String> strListBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer17, strSerializableDeserializer18, subscription40);
        java.lang.String str43 = subscription40.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, subscription40);
        strKafkaSpoutConfig3.subscription = subscription40;
        java.lang.String str46 = subscription40.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription40);
        java.lang.String str48 = subscription40.getTopicsString();
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(subscription40);
        org.junit.Assert.assertEquals("'" + str43 + "' != '" + "" + "'", str43, "");
        org.junit.Assert.assertEquals("'" + str46 + "' != '" + "" + "'", str46, "");
        org.junit.Assert.assertEquals("'" + str48 + "' != '" + "" + "'", str48, "");
    }

    @Test
    public void test07722() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07722");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer7 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass15 = strBuilder14.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder14.setProp(strMap26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder14.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap28);
        strKafkaSpoutConfig0.kafkaProps = strMap29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder37.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSecurityProtocol("");
        long long43 = strBuilder37.partitionRefreshPeriodMs;
        strBuilder37.maxRetries = 32;
        int int46 = strBuilder37.maxRetries;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = strBuilder55.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder55.setMaxUncommittedOffsets((int) ' ');
        java.lang.String[] strArray63 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder65.firstPollOffsetStrategy = firstPollOffsetStrategy66;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy66);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy66;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(objDeserializer7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
// flaky:         org.junit.Assert.assertTrue("'" + long43 + "' != '" + 32L + "'", long43 == 32L);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 32 + "'", int46 == 32);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy66 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy66.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test07723() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07723");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        int int5 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig6.translator;
        long long8 = strKafkaSpoutConfig6.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig6.kafkaProps;
        java.lang.String str10 = strKafkaSpoutConfig6.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        strKafkaSpoutConfig6.valueDes = objSerializableDeserializer11;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setPartitionRefreshPeriodMs((long) 1);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder29.setSecurityProtocol("hi!");
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        strBuilder42.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder42.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder48.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass57 = strBuilder56.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder56.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder56.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder48.setProp(strMap68);
        org.apache.storm.kafka.spout.Subscription subscription71 = strBuilder48.subscription;
        strBuilder36.subscription = subscription71;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer17, strSerializableDeserializer18, subscription71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer14, strSerializableDeserializer15, subscription71);
        strKafkaSpoutConfig6.subscription = subscription71;
        strKafkaSpoutConfig0.subscription = subscription71;
        long long77 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator78 = strKafkaSpoutConfig0.translator;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 32;
        int int81 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator82 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator83 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator78);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNull(strRecordTranslator82);
        org.junit.Assert.assertNull(strRecordTranslator83);
    }

    @Test
    public void test07724() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07724");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = strBuilder15.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder15.setMaxRetries((int) (byte) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder18.kafkaProps;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNull(strSerializableDeserializer16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap19);
    }

    @Test
    public void test07725() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07725");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setMaxPartitionFectchBytes(52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setPartitionRefreshPeriodMs((-1L));
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = null;
        strBuilder27.keyDes = strSerializableDeserializer28;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator30 = strBuilder27.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder19.setRecordTranslator(strRecordTranslator30);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        strBuilder31.valueDes = strSerializableDeserializer32;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strRecordTranslator30);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07726() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07726");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder11.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strKafkaSpoutConfig13);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer40 = null;
        java.lang.String[] strArray44 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer39, strSerializableDeserializer40, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer36, strSerializableDeserializer37, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer32, strRecordTranslatorSerializableDeserializer33, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer29, strSerializableDeserializer30, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder50.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList62);
        strBuilder64.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = strBuilder64.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder64.setPartitionRefreshPeriodMs((long) 1);
        int int70 = strBuilder69.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder69.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder69.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription77 = strBuilder76.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer57, strSerializableDeserializer58, subscription77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String> strListBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer54, strSerializableDeserializer55, subscription77);
        java.lang.String str80 = subscription77.getTopicsString();
        java.lang.String str81 = subscription77.getTopicsString();
        strBuilder50.subscription = subscription77;
        strBuilder11.subscription = subscription77;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertEquals("'" + str80 + "' != '" + "" + "'", str80, "");
        org.junit.Assert.assertEquals("'" + str81 + "' != '" + "" + "'", str81, "");
    }

    @Test
    public void test07727() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07727");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer1, strKafkaSpoutConfigSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>(strListBuilder4);
    }

    @Test
    public void test07728() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07728");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        strBuilder5.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer12, strSerializableDeserializer13, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator22 = strBuilder19.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder5.setRecordTranslator(strRecordTranslator22);
        strBuilder23.partitionRefreshPeriodMs = 35;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strRecordTranslator22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test07729() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07729");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.translator;
        java.lang.String str11 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertNull(strRecordTranslator10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07730() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07730");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer15 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer14, strArraySerializableDeserializer15, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strIterableBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test07731() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07731");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setRecordTranslator(strRecordTranslator9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder8.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strBuilder8.firstPollOffsetStrategy;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder19.kafkaProps;
        strBuilder8.kafkaProps = strMap20;
        org.apache.storm.kafka.spout.Subscription subscription22 = strBuilder8.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, strBuilderSerializableDeserializer2, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strListKafkaSpoutConfig24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>(strListBuilder23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strListKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>(strListBuilder23);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test07732() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07732");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
    }

    @Test
    public void test07733() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07733");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPollRecords(35);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList19);
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        strBuilder27.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService33 = null;
        strBuilder32.retryService = kafkaSpoutRetryService33;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder32.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator36 = strBuilder32.translator;
        strBuilder21.translator = strRecordTranslator36;
        org.apache.storm.tuple.Fields fields38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder11.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator36, fields38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig40 = strBuilder11.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strRecordTranslator36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig40);
    }

    @Test
    public void test07734() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07734");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder17.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService24);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer37 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer36, strListSerializableDeserializer37, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer33, strSerializableDeserializer34, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer29, strSerializableDeserializer30, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder43.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.Subscription subscription46 = strBuilder45.subscription;
        java.lang.String str47 = subscription46.getTopicsString();
        strBuilder10.subscription = subscription46;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(subscription46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str47, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07735() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07735");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        strKafkaSpoutConfig0.kafkaProps = strMap3;
        int int5 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
    }

    @Test
    public void test07736() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07736");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setRecordTranslator(strRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder5.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long21 = strBuilder20.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder20);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2147483647L + "'", long21 == 2147483647L);
    }

    @Test
    public void test07737() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07737");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator16 = strBuilder15.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder5.setRecordTranslator(strRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        long long23 = strBuilder22.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder22.setMaxPollRecords((int) 'a');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strRecordTranslator16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 32L + "'", long23 == 32L);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test07738() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07738");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setOffsetCommitPeriodMs(35L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder31.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        strBuilder35.valueDes = strSerializableDeserializer36;
        strBuilder35.partitionRefreshPeriodMs = 52L;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
    }

    @Test
    public void test07739() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07739");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        long long5 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        long long7 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test07740() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07740");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = strKafkaSpoutConfig0.getRetryService();
        strKafkaSpoutConfig0.pollTimeoutMs = 1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
    }

    @Test
    public void test07741() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07741");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.AbstractCollection<java.lang.String>> firstPollOffsetStrategyEnumKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.AbstractCollection<java.lang.String>>();
    }

    @Test
    public void test07742() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07742");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxRetries = ' ';
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        strKafkaSpoutConfig0.maxRetries = (-1);
        int int15 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(subscription10);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test07743() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07743");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setMaxRetries((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.Subscription subscription20 = strBuilder17.subscription;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription20);
    }

    @Test
    public void test07744() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07744");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder8.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder8.setMaxUncommittedOffsets((int) (short) 1);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder18.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder18.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder18.maxRetries = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder18.setMaxPollRecords((int) (byte) 10);
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass35 = strBuilder34.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder34.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder34.setMaxPartitionFectchBytes((int) (short) 10);
        int int44 = strBuilder34.maxRetries;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = strBuilder51.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder51.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder51.setFetchMinBytes((int) (short) 10);
        int int57 = strBuilder51.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer63 = null;
        strBuilder62.valueDes = strSerializableDeserializer63;
        strBuilder62.maxUncommittedOffsets = (short) 100;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 10 + "'", int44 == 10);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test07745() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07745");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries((int) (short) 1);
        int int7 = strBuilder6.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setPartitionRefreshPeriodMs((long) 1);
        int int25 = strBuilder24.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder24.setSecurityProtocol("hi!");
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder37.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder43.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass52 = strBuilder51.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        strBuilder60.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder51.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder43.setProp(strMap63);
        org.apache.storm.kafka.spout.Subscription subscription66 = strBuilder43.subscription;
        strBuilder31.subscription = subscription66;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, subscription66);
        java.lang.String str69 = subscription66.getTopicsString();
        subscription66.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, subscription66);
        java.lang.String str72 = subscription66.getTopicsString();
        strBuilder6.subscription = subscription66;
        subscription66.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
        org.junit.Assert.assertEquals("'" + str72 + "' != '" + "" + "'", str72, "");
    }

    @Test
    public void test07746() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07746");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        long long6 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
    }

    @Test
    public void test07747() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07747");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        long long9 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        int int10 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(subscription11);
    }

    @Test
    public void test07748() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07748");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass3 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.getTranslator();
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        strBuilder10.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setPartitionRefreshPeriodMs((long) 1);
        int int16 = strBuilder15.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder15.setSecurityProtocol("hi!");
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder28.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder34.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass43 = strBuilder42.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        strBuilder51.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = strBuilder51.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder42.setProp(strMap54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder34.setProp(strMap54);
        org.apache.storm.kafka.spout.Subscription subscription57 = strBuilder34.subscription;
        strBuilder22.subscription = subscription57;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder22.setPartitionRefreshPeriodMs((long) (byte) 100);
        strBuilder22.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.Subscription subscription63 = strBuilder22.subscription;
        subscription63.refreshAssignment();
        subscription63.refreshAssignment();
        subscription63.refreshAssignment();
        subscription63.refreshAssignment();
        strKafkaSpoutConfig0.subscription = subscription63;
        java.lang.String str69 = subscription63.getTopicsString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(wildcardClass3);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(subscription63);
        org.junit.Assert.assertEquals("'" + str69 + "' != '" + "" + "'", str69, "");
    }

    @Test
    public void test07749() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07749");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (-1L);
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer8 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long9 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder21.setMaxPollRecords(100);
        long long26 = strBuilder21.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder21.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.Subscription subscription30 = strBuilder29.subscription;
        strKafkaSpoutConfig0.subscription = subscription30;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer32;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + (-1L) + "'", long9 == (-1L));
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
// flaky:         org.junit.Assert.assertTrue("'" + long26 + "' != '" + 2147483647L + "'", long26 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(subscription30);
    }

    @Test
    public void test07750() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07750");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = strBuilder2.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        strBuilder2.retryService = kafkaSpoutRetryService5;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder2.setMaxPollRecords(32);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
    }

    @Test
    public void test07751() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07751");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer19, strListSerializableDeserializer20, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer16, strSerializableDeserializer17, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer13, strKafkaSpoutConfigSerializableDeserializer14, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer10, strSerializableDeserializer11, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Iterable<java.lang.String>> firstPollOffsetStrategyEnumBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer7, strIterableSerializableDeserializer8, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, strListSerializableDeserializer2, strArray22);
        org.junit.Assert.assertNotNull(strArray22);
    }

    @Test
    public void test07752() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07752");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long8 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test07753() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07753");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig6.maxRetries = (short) 1;
        long long9 = strKafkaSpoutConfig6.offsetCommitPeriodMs;
        java.lang.String str10 = strKafkaSpoutConfig6.toString();
        int int11 = strKafkaSpoutConfig6.getMaxTupleRetries();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        int int23 = strBuilder22.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder22.setSecurityProtocol("hi!");
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        strBuilder35.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder35.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass50 = strBuilder49.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        strBuilder58.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = strBuilder58.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder49.setProp(strMap61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder41.setProp(strMap61);
        org.apache.storm.kafka.spout.Subscription subscription64 = strBuilder41.subscription;
        strBuilder29.subscription = subscription64;
        subscription64.refreshAssignment();
        strKafkaSpoutConfig6.subscription = subscription64;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.reflect.GenericDeclaration> strCollectionBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.lang.reflect.GenericDeclaration>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer4, genericDeclarationSerializableDeserializer5, subscription64);
        subscription64.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription64);
        int int71 = strBuilder70.maxRetries;
        strBuilder70.offsetCommitPeriodMs = 0L;
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 1 + "'", int11 == 1);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(wildcardClass50);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(subscription64);
// flaky:         org.junit.Assert.assertTrue("'" + int71 + "' != '" + 10 + "'", int71 == 10);
    }

    @Test
    public void test07754() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07754");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        int int77 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.pollTimeoutMs = '#';
        java.lang.String str80 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test07755() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07755");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer4 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = strKafkaSpoutConfig0.retryService;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 97L;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strDeserializer4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
    }

    @Test
    public void test07756() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07756");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.util.AbstractCollection<java.lang.String>> strBuilderBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.util.AbstractCollection<java.lang.String>>();
    }

    @Test
    public void test07757() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07757");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        int int4 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test07758() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07758");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer10;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07759() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07759");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        int int16 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder11.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder18.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setGroupId("");
        strBuilder23.maxRetries = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setMaxPollRecords((int) '#');
        int int28 = strBuilder23.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder23.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        java.lang.String[] strArray37 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer32, strSerializableDeserializer33, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder39.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList46);
        strBuilder48.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = strBuilder48.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder48.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = strBuilder48.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = null;
        strBuilder48.retryService = kafkaSpoutRetryService55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder41.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder57.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = strBuilder60.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder30.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test07760() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07760");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Object> serializableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Object>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer8, objSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder21.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test07761() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07761");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder17.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig27 = strBuilder10.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder10.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder34.setSSLTruststore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        strBuilder34.keyDes = strSerializableDeserializer38;
        long long40 = strBuilder34.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 32L + "'", long40 == 32L);
    }

    @Test
    public void test07762() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07762");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer48 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer47, strSerializableDeserializer48, (java.util.Collection<java.lang.String>) strList51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer44, strSerializableDeserializer45, (java.util.Collection<java.lang.String>) strList51);
        int int55 = strBuilder54.maxUncommittedOffsets;
        strBuilder54.maxRetries = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder54.setMaxRetries(0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = strBuilder59.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder59);
        long long63 = strBuilder62.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(wildcardClass60);
        org.junit.Assert.assertNull(strSerializableDeserializer61);
        org.junit.Assert.assertNotNull(strBuilder62);
// flaky:         org.junit.Assert.assertTrue("'" + long63 + "' != '" + 32L + "'", long63 == 32L);
    }

    @Test
    public void test07763() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07763");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setSecurityProtocol("");
        strBuilder19.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder19.setMaxUncommittedOffsets((int) (byte) 100);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        strBuilder27.valueDes = strSerializableDeserializer29;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2147483647L + "'", long16 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test07764() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07764");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        strBuilder11.keyDes = strSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxPartitionFectchBytes((int) (short) -1);
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        strBuilder22.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder22.setSSLKeystore("", "", "hi!");
        int int29 = strBuilder22.maxRetries;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        strBuilder35.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strBuilder35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder35.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = null;
        strBuilder40.retryService = kafkaSpoutRetryService41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = strBuilder40.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.Subscription subscription47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer45, strSerializableDeserializer46, subscription47);
        strBuilder48.partitionRefreshPeriodMs = 0L;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass57 = strBuilder56.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder56.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        strBuilder48.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder63.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=32, maxRetries=97, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test07765() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07765");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        strBuilder13.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strBuilder13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        strBuilder18.retryService = kafkaSpoutRetryService19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator22 = strBuilder18.translator;
        strBuilder7.translator = strRecordTranslator22;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator24 = strBuilder7.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder7.setBootstrapServers("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        strBuilder32.keyDes = strSerializableDeserializer33;
        long long35 = strBuilder32.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder32.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern41);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator43 = strBuilder42.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder32.setRecordTranslator(strRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder44.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer49 = strBuilder48.valueDes;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass56 = strBuilder55.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder55.setFetchMinBytes((int) (byte) 0);
        strBuilder55.pollTimeoutMs = 100;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder66.setPartitionRefreshPeriodMs((long) 1);
        int int72 = strBuilder71.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder71.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder71.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer79 = null;
        strBuilder78.keyDes = strSerializableDeserializer79;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder78.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy83 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder78.setFirstPollOffsetStrategy(firstPollOffsetStrategy83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = strBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy83);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator86 = strBuilder55.translator;
        org.apache.storm.tuple.Fields fields87 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator86, fields87, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder92 = strBuilder7.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator86, fields90, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Properties properties93 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder92.setProp(properties93);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strRecordTranslator22);
        org.junit.Assert.assertNotNull(strRecordTranslator24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 32L + "'", long35 == 32L);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strRecordTranslator43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNull(strSerializableDeserializer49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy83 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy83.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strRecordTranslator86);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder92);
    }

    @Test
    public void test07766() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07766");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (-1L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass10 = strKafkaSpoutConfig0.keyDesClazz;
        int int11 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer12 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        long long15 = strKafkaSpoutConfig13.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = strKafkaSpoutConfig13.firstPollOffsetStrategy;
        strKafkaSpoutConfig13.pollTimeoutMs = 100L;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer19 = strKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer25, strSerializableDeserializer26, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer22, charSequenceSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder33.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder38.partitionRefreshPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = strBuilder38.retryService;
        strBuilder38.partitionRefreshPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = strBuilder38.firstPollOffsetStrategy;
        strKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = strKafkaSpoutConfig13.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = strKafkaSpoutConfig13.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNull(strDeserializer12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
        org.junit.Assert.assertNull(objDeserializer19);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07767() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07767");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        long long15 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer16 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer16;
        java.lang.String str18 = strKafkaSpoutConfig0.toString();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass19 = strKafkaSpoutConfig0.valueDesClazz;
        long long20 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator21 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str18, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator21);
    }

    @Test
    public void test07768() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07768");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder17.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService24);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc27 = null;
        org.apache.storm.tuple.Fields fields28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder10.setRecordTranslator(strConsumerRecordFunc27, fields28);
        int int30 = strBuilder10.maxRetries;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 10 + "'", int30 == 10);
    }

    @Test
    public void test07769() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07769");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer12, strListSerializableDeserializer13, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.List<java.lang.String>> objBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.List<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", objSerializableDeserializer1, strListSerializableDeserializer2, strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07770() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07770");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription5 = strKafkaSpoutConfig0.subscription;
        int int6 = strKafkaSpoutConfig0.maxRetries;
        strKafkaSpoutConfig0.maxRetries = (byte) 10;
        int int9 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass10 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(subscription5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 1 + "'", int6 == 1);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(wildcardClass10);
    }

    @Test
    public void test07771() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07771");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription5 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription6 = strKafkaSpoutConfig0.getSubscription();
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator8;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(subscription5);
        org.junit.Assert.assertNull(subscription6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07772() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07772");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = strBuilder2.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder2.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int10 = strKafkaSpoutConfig9.getMaxTupleRetries();
        strKafkaSpoutConfig9.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = strKafkaSpoutConfig9.retryService;
        long long14 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.lang.String str15 = strKafkaSpoutConfig9.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = strKafkaSpoutConfig9.firstPollOffsetStrategy;
        java.lang.String str17 = strKafkaSpoutConfig9.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = strKafkaSpoutConfig9.getTranslator();
        strKafkaSpoutConfig9.maxUncommittedOffsets = (byte) -1;
        long long21 = strKafkaSpoutConfig9.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int23 = strKafkaSpoutConfig22.getMaxTupleRetries();
        long long24 = strKafkaSpoutConfig22.getPollTimeoutMs();
        strKafkaSpoutConfig22.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = strKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig22.partitionRefreshPeriodMs = (-1L);
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer30 = strKafkaSpoutConfig22.getKeyDeserializer();
        long long31 = strKafkaSpoutConfig22.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = null;
        strKafkaSpoutConfig22.retryService = kafkaSpoutRetryService32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int35 = strKafkaSpoutConfig34.getMaxTupleRetries();
        long long36 = strKafkaSpoutConfig34.getPartitionRefreshPeriodMs();
        long long37 = strKafkaSpoutConfig34.getOffsetsCommitPeriodMs();
        long long38 = strKafkaSpoutConfig34.getPollTimeoutMs();
        long long39 = strKafkaSpoutConfig34.getPartitionRefreshPeriodMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass40 = strKafkaSpoutConfig34.valueDesClazz;
        strKafkaSpoutConfig34.pollTimeoutMs = 'a';
        int int43 = strKafkaSpoutConfig34.maxUncommittedOffsets;
        strKafkaSpoutConfig34.maxUncommittedOffsets = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strKafkaSpoutConfig34.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        strKafkaSpoutConfig22.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        strKafkaSpoutConfig9.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        strBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator18);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy27);
        org.junit.Assert.assertNull(strDeserializer30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + (-1L) + "'", long31 == (-1L));
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
    }

    @Test
    public void test07773() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07773");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setMaxPartitionFectchBytes(52);
        long long20 = strBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setMaxRetries((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder17.setMaxUncommittedOffsets(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder17.setPollTimeoutMs(52L);
        strBuilder17.pollTimeoutMs = (short) 100;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 32L + "'", long20 == 32L);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test07774() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07774");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.translator;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 52;
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        strBuilder16.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder16.setSSLKeystore("", "", "hi!");
        int int23 = strBuilder22.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes(35);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder29.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap30;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder22);
// flaky:         org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test07775() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07775");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer21, strSerializableDeserializer22, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer14, strRecordTranslatorSerializableDeserializer15, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer11, strComparableSerializableDeserializer12, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer8, strMapSerializableDeserializer9, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type> strIterableBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer4, typeSerializableDeserializer5, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess> strArrayBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.RandomAccess>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer1, randomAccessSerializableDeserializer2, strArray26);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test07776() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07776");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 97;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07777() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07777");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        long long7 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long8 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator10;
        int int12 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = strKafkaSpoutConfig0.translator;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (short) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(strRecordTranslator13);
    }

    @Test
    public void test07778() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07778");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strRecordTranslator11);
    }

    @Test
    public void test07779() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07779");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        java.lang.String str3 = strKafkaSpoutConfig0.toString();
        long long4 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = 52;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer8 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0L;
        strKafkaSpoutConfig0.maxRetries = (short) -1;
        long long13 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer8);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test07780() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07780");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription35 = strBuilder10.subscription;
        java.lang.String[] strArray39 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder42.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = strBuilder44.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator46 = strBuilder44.translator;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator46, fields47);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer53 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer56 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer59 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer60 = null;
        java.lang.String[] strArray62 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer59, strListSerializableDeserializer60, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer56, strSerializableDeserializer57, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer53, strKafkaSpoutConfigSerializableDeserializer54, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer50, strSerializableDeserializer51, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig67.maxRetries = (short) 1;
        long long70 = strKafkaSpoutConfig67.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass71 = strKafkaSpoutConfig67.keyDesClazz;
        strKafkaSpoutConfig67.pollTimeoutMs = 0L;
        int int74 = strKafkaSpoutConfig67.maxUncommittedOffsets;
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList78);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass81 = strBuilder80.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy82 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder80.firstPollOffsetStrategy = firstPollOffsetStrategy82;
        java.lang.String[] strArray86 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList87 = new java.util.ArrayList<java.lang.String>();
        boolean boolean88 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList87, strArray86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList87);
        strBuilder89.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = strBuilder89.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder80.setProp(strMap92);
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = strBuilder80.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap94);
        strKafkaSpoutConfig67.kafkaProps = strMap95;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder66.setProp(strMap95);
        strBuilder10.kafkaProps = strMap95;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(subscription35);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(strSerializableDeserializer45);
        org.junit.Assert.assertNotNull(strRecordTranslator46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(wildcardClass81);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy82 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy82.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray86);
        org.junit.Assert.assertTrue("'" + boolean88 + "' != '" + true + "'", boolean88 == true);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test07781() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07781");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        int int6 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int7 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 0;
        long long10 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.getSubscription();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(subscription11);
    }

    @Test
    public void test07782() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07782");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        int int12 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = strKafkaSpoutConfig17.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer19 = strKafkaSpoutConfig17.getKeyDeserializer();
        int int20 = strKafkaSpoutConfig17.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        strKafkaSpoutConfig17.retryService = kafkaSpoutRetryService21;
        int int23 = strKafkaSpoutConfig17.maxUncommittedOffsets;
        long long24 = strKafkaSpoutConfig17.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass25 = strKafkaSpoutConfig17.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer27 = strKafkaSpoutConfig26.getValueDeserializer();
        int int28 = strKafkaSpoutConfig26.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig26.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = strKafkaSpoutConfig26.valueDes;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass37 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder36.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        strKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        strKafkaSpoutConfig17.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder54.setPollTimeoutMs((long) (short) 1);
        java.util.regex.Pattern pattern60 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", pattern60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder61.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int65 = strKafkaSpoutConfig64.getMaxTupleRetries();
        long long66 = strKafkaSpoutConfig64.getPollTimeoutMs();
        strKafkaSpoutConfig64.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = strKafkaSpoutConfig64.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator70 = strKafkaSpoutConfig64.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = strKafkaSpoutConfig64.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int73 = strKafkaSpoutConfig72.getMaxTupleRetries();
        strKafkaSpoutConfig72.maxRetries = 1;
        java.lang.String[] strArray78 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList79 = new java.util.ArrayList<java.lang.String>();
        boolean boolean80 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList79, strArray78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList79);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = strBuilder81.kafkaProps;
        strKafkaSpoutConfig72.kafkaProps = strMap82;
        java.util.Map<java.lang.String, java.lang.Object> strMap84 = strKafkaSpoutConfig72.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = strKafkaSpoutConfig72.kafkaProps;
        strKafkaSpoutConfig64.kafkaProps = strMap85;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder63.setProp(strMap85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder58.setProp(strMap85);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(strRecordTranslator18);
        org.junit.Assert.assertNull(strDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(wildcardClass25);
        org.junit.Assert.assertNull(objDeserializer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(objSerializableDeserializer30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy69);
        org.junit.Assert.assertNull(strRecordTranslator70);
        org.junit.Assert.assertNull(firstPollOffsetStrategy71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNotNull(strArray78);
        org.junit.Assert.assertTrue("'" + boolean80 + "' != '" + true + "'", boolean80 == true);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strMap84);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
    }

    @Test
    public void test07783() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07783");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer10, strSerializableDeserializer11, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> serializableBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={ssl.keystore.password=KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}, ssl.keystore.location=hi!, bootstrap.servers=}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer4, strKafkaSpoutConfigSerializableDeserializer5, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>> strArrayBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer1, strMapSerializableDeserializer2, strArray17);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07784() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07784");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer4, strBuilderSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.String> cloneableBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.String>("hi!", cloneableSerializableDeserializer1, strSerializableDeserializer2, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, java.lang.String> cloneableKafkaSpoutConfig17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, java.lang.String>(cloneableBuilder16);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07785() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07785");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 0;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        long long8 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator9;
        strKafkaSpoutConfig0.maxRetries = 10;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator13);
    }

    @Test
    public void test07786() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07786");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer6;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass10 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer11 = strKafkaSpoutConfig0.getValueDeserializer();
        long long12 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        int int13 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNull(objDeserializer11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test07787() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07787");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription7 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        java.lang.Class<?> wildcardClass9 = strKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(subscription7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test07788() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07788");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = '4';
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strDeserializer6);
    }

    @Test
    public void test07789() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07789");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        java.lang.String str11 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription12 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        strKafkaSpoutConfig13.valueDes = objSerializableDeserializer26;
        long long28 = strKafkaSpoutConfig13.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = strKafkaSpoutConfig13.retryService;
        java.lang.String str30 = strKafkaSpoutConfig13.toString();
        long long31 = strKafkaSpoutConfig13.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer37, strSerializableDeserializer38, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer34, charSequenceSerializableDeserializer35, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray42);
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer53 = null;
        strBuilder52.keyDes = strSerializableDeserializer53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder46.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = strBuilder46.firstPollOffsetStrategy;
        strKafkaSpoutConfig13.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator60 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str30, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(strRecordTranslator60);
    }

    @Test
    public void test07790() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07790");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = strKafkaSpoutConfig0.getRetryService();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
    }

    @Test
    public void test07791() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07791");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPartitionRefreshPeriodMs(0L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.valueDesClazz;
        int int14 = strBuilder12.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.Subscription subscription15 = strBuilder12.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder12.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=30000, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(subscription15);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07792() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07792");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 32;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer12 = strKafkaSpoutConfig0.getValueDeserializer();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertNull(objDeserializer12);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
    }

    @Test
    public void test07793() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07793");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Class<?>, java.lang.Object> wildcardClassKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Class<?>, java.lang.Object>();
    }

    @Test
    public void test07794() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07794");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer4, strBuilderSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray12);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder16.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription21 = strBuilder20.subscription;
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(subscription21);
    }

    @Test
    public void test07795() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07795");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int4 = strKafkaSpoutConfig3.getMaxTupleRetries();
        long long5 = strKafkaSpoutConfig3.getPollTimeoutMs();
        strKafkaSpoutConfig3.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig3.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = strKafkaSpoutConfig3.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig3.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig3.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setPartitionRefreshPeriodMs((long) 1);
        int int29 = strBuilder28.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder28.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder28.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription36 = strBuilder35.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer16, strSerializableDeserializer17, subscription36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String> strListBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer13, strSerializableDeserializer14, subscription36);
        java.lang.String str39 = subscription36.getTopicsString();
        subscription36.refreshAssignment();
        strKafkaSpoutConfig3.subscription = subscription36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer1, strRecordTranslatorSerializableDeserializer2, subscription36);
        subscription36.refreshAssignment();
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(strRecordTranslator9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(subscription36);
        org.junit.Assert.assertEquals("'" + str39 + "' != '" + "" + "'", str39, "");
    }

    @Test
    public void test07796() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07796");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        int int6 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(strRecordTranslator9);
    }

    @Test
    public void test07797() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07797");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription6 = strKafkaSpoutConfig0.subscription;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer7 = strKafkaSpoutConfig0.getValueDeserializer();
        int int8 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 0;
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer13 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(subscription6);
        org.junit.Assert.assertNull(objDeserializer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objDeserializer13);
        org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test07798() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07798");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        strBuilder12.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer17, strSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder25.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder28.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder28.setFetchMinBytes((int) (byte) 10);
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder12.setProp("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder28);
        long long35 = strBuilder12.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strBuilder34);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 32L + "'", long35 == 32L);
    }

    @Test
    public void test07799() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07799");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass19 = strBuilder18.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        strBuilder27.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder18.setProp(strMap30);
        long long32 = strBuilder18.pollTimeoutMs;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strBuilder38.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder38.setProp(strMap50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder11.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig57 = strBuilder56.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder56.setMaxPollRecords((int) 'a');
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strBuilder31);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 32L + "'", long32 == 32L);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test07800() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07800");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = null;
        strBuilder2.kafkaProps = strMap3;
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test07801() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07801");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        strBuilder5.pollTimeoutMs = 100;
        strBuilder5.maxUncommittedOffsets = 35;
        strBuilder5.partitionRefreshPeriodMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig15 = strBuilder5.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        strBuilder5.valueDes = strSerializableDeserializer16;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder32.setSSLKeystore("", "", "hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strBuilder38.valueDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription40 = strBuilder38.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Comparable<java.lang.String>> strIterableBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Comparable<java.lang.String>>("hi!", strIterableSerializableDeserializer25, strComparableSerializableDeserializer26, subscription40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.List<java.lang.String>> serializableBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.util.List<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer22, strListSerializableDeserializer23, subscription40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.AbstractList<java.lang.String>> firstPollOffsetStrategyBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategySerializableDeserializer19, strListSerializableDeserializer20, subscription40);
        strBuilder5.subscription = subscription40;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig15);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertNotNull(subscription40);
    }

    @Test
    public void test07802() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07802");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07803() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07803");
        java.util.Collection<java.lang.String> strCollection1 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strCollection1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07804() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07804");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.retryService;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass30 = strBuilder29.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strBuilder38.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder29.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder21.setProp(strMap41);
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap41);
        strKafkaSpoutConfig0.kafkaProps = strMap41;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator46 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNull(strRecordTranslator46);
    }

    @Test
    public void test07805() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07805");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        long long7 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long8 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass10 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertNull(wildcardClass10);
    }

    @Test
    public void test07806() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07806");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strBuilder10.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = strBuilder10.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder10.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder10.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder10.setMaxRetries((int) (byte) -1);
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setPartitionRefreshPeriodMs((long) 1);
        int int50 = strBuilder49.maxRetries;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass57 = strBuilder56.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder56.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder56.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder69.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        strBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass74 = strBuilder10.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + (-1) + "'", int50 == (-1));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test07807() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07807");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder7.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = strBuilder11.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setMaxRetries((int) (short) -1);
        strBuilder19.partitionRefreshPeriodMs = (byte) -1;
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(strSerializableDeserializer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07808() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07808");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass9 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test07809() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07809");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer11, strSerializableDeserializer12, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.util.AbstractList<java.lang.String>> typeBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer2, strListSerializableDeserializer3, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test07810() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07810");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        long long7 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig8.maxRetries = (short) 1;
        long long11 = strKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strKafkaSpoutConfig8.keyDesClazz;
        strKafkaSpoutConfig8.pollTimeoutMs = 0L;
        int int15 = strKafkaSpoutConfig8.maxUncommittedOffsets;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass22 = strBuilder21.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder21.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        strBuilder30.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder30.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder21.setProp(strMap33);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder21.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap35);
        strKafkaSpoutConfig8.kafkaProps = strMap36;
        strKafkaSpoutConfig0.kafkaProps = strMap36;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService39;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
    }

    @Test
    public void test07811() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07811");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.lang.reflect.Type> cloneableBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, java.lang.reflect.Type> cloneableKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Cloneable, java.lang.reflect.Type>(cloneableBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07812() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07812");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig3.maxRetries = (short) 1;
        long long6 = strKafkaSpoutConfig3.offsetCommitPeriodMs;
        java.lang.String str7 = strKafkaSpoutConfig3.toString();
        int int8 = strKafkaSpoutConfig3.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig9.translator;
        long long11 = strKafkaSpoutConfig9.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig9.kafkaProps;
        java.lang.String str13 = strKafkaSpoutConfig9.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = null;
        strKafkaSpoutConfig9.valueDes = objSerializableDeserializer14;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        strBuilder27.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setPartitionRefreshPeriodMs((long) 1);
        int int33 = strBuilder32.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder32.setSecurityProtocol("hi!");
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder45.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder51.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder59.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        strBuilder68.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder68.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder59.setProp(strMap71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder51.setProp(strMap71);
        org.apache.storm.kafka.spout.Subscription subscription74 = strBuilder51.subscription;
        strBuilder39.subscription = subscription74;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer20, strSerializableDeserializer21, subscription74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer17, strSerializableDeserializer18, subscription74);
        strKafkaSpoutConfig9.subscription = subscription74;
        strKafkaSpoutConfig3.subscription = subscription74;
        long long80 = strKafkaSpoutConfig3.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator81 = strKafkaSpoutConfig3.translator;
        org.apache.storm.kafka.spout.Subscription subscription82 = strKafkaSpoutConfig3.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription82);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 1 + "'", int8 == 1);
        org.junit.Assert.assertNull(strRecordTranslator10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(subscription74);
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator81);
        org.junit.Assert.assertNotNull(subscription82);
    }

    @Test
    public void test07813() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07813");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass5 = strKafkaSpoutConfig0.valueDesClazz;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07814() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07814");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setRecordTranslator(strRecordTranslator11);
        strBuilder5.partitionRefreshPeriodMs = (-1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long19 = strBuilder18.partitionRefreshPeriodMs;
        long long20 = strBuilder18.partitionRefreshPeriodMs;
        int int21 = strBuilder18.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + (-1L) + "'", long19 == (-1L));
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + (-1L) + "'", long20 == (-1L));
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
    }

    @Test
    public void test07815() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07815");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder5.setMaxPartitionFectchBytes(32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = null;
        strBuilder5.keyDes = strSerializableDeserializer26;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder5.valueDesClazz;
        java.lang.Class<?> wildcardClass29 = strBuilder5.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(wildcardClass29);
    }

    @Test
    public void test07816() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07816");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        strBuilder21.keyDes = strSerializableDeserializer22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder21.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setMaxPollRecords((int) (byte) 100);
        int int28 = strBuilder21.maxRetries;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
// flaky:         org.junit.Assert.assertTrue("'" + int28 + "' != '" + 10 + "'", int28 == 10);
    }

    @Test
    public void test07817() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07817");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer8 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer9 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer10 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator15 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator15;
        int int17 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objDeserializer8);
        org.junit.Assert.assertNull(strDeserializer9);
        org.junit.Assert.assertNull(strDeserializer10);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test07818() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07818");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        strKafkaSpoutConfig0.pollTimeoutMs = 52;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.subscription;
        long long12 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(subscription11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 52L + "'", long12 == 52L);
    }

    @Test
    public void test07819() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07819");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder11.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strKafkaSpoutConfig13);
        strBuilder11.pollTimeoutMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder11.setMaxRetries(32);
        long long32 = strBuilder31.offsetCommitPeriodMs;
        long long33 = strBuilder31.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        strBuilder31.valueDes = strSerializableDeserializer34;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 2147483647L + "'", long32 == 2147483647L);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 1L + "'", long33 == 1L);
    }

    @Test
    public void test07820() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07820");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strRecordTranslator6);
    }

    @Test
    public void test07821() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07821");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String> firstPollOffsetStrategyBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String> firstPollOffsetStrategyKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.String>(firstPollOffsetStrategyBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07822() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07822");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder5.valueDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = strBuilder5.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setFetchMinBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = strBuilder13.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strBuilder13.kafkaProps;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNull(strSerializableDeserializer11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test07823() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07823");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder9.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strBuilder12.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, strArray20);
        strBuilder22.maxRetries = '#';
        long long25 = strBuilder22.offsetCommitPeriodMs;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        strBuilder31.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder31.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = null;
        strBuilder36.retryService = kafkaSpoutRetryService37;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer40 = null;
        strBuilder36.valueDes = strSerializableDeserializer40;
        strBuilder36.pollTimeoutMs = ' ';
        strBuilder36.offsetCommitPeriodMs = ' ';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator46 = strBuilder36.translator;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder22.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator46, fields47, "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator46, fields50, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer54 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList62);
        strBuilder64.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = strBuilder64.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder64.setPartitionRefreshPeriodMs((long) 1);
        int int70 = strBuilder69.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder69.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder69.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription77 = strBuilder76.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.List<java.lang.String>> firstPollOffsetStrategyEnumBuilder78 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.List<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer57, strListSerializableDeserializer58, subscription77);
        subscription77.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strListBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer54, strConsumerRecordFuncSerializableDeserializer55, subscription77);
        strBuilder52.subscription = subscription77;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2147483647L + "'", long25 == 2147483647L);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strRecordTranslator46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(subscription77);
    }

    @Test
    public void test07824() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07824");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder14.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass29 = strBuilder28.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strBuilder37.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder28.setProp(strMap40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder20.setProp(strMap40);
        strBuilder42.partitionRefreshPeriodMs = 35L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder42.setPartitionRefreshPeriodMs(97L);
        org.apache.storm.kafka.spout.Subscription subscription47 = strBuilder42.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> typeBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer7, firstPollOffsetStrategySerializableDeserializer8, subscription47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration> strComparableBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.reflect.GenericDeclaration>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer4, genericDeclarationSerializableDeserializer5, subscription47);
        java.lang.String str50 = subscription47.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription47);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(wildcardClass29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "" + "'", str50, "");
    }

    @Test
    public void test07825() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07825");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder10.retryService = kafkaSpoutRetryService11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        strBuilder10.valueDes = strSerializableDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder10.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder10.setBootstrapServers("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setPollTimeoutMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer24, strSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList28);
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = null;
        strBuilder41.retryService = kafkaSpoutRetryService42;
        java.util.Map<java.lang.String, java.lang.Object> strMap44 = strBuilder41.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator45 = strBuilder41.translator;
        strBuilder30.translator = strRecordTranslator45;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig47.maxRetries = (short) 1;
        long long50 = strKafkaSpoutConfig47.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = strKafkaSpoutConfig47.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = strKafkaSpoutConfig47.firstPollOffsetStrategy;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass59 = strBuilder58.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder58.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList65);
        strBuilder67.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = strBuilder67.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder58.setProp(strMap70);
        long long72 = strBuilder58.pollTimeoutMs;
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass79 = strBuilder78.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder78.firstPollOffsetStrategy = firstPollOffsetStrategy80;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder58.setFirstPollOffsetStrategy(firstPollOffsetStrategy80);
        java.lang.String[] strArray85 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList86 = new java.util.ArrayList<java.lang.String>();
        boolean boolean87 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList86, strArray85);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList86);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder88.setRecordTranslator(strRecordTranslator89);
        strBuilder88.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = strBuilder88.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder82.setProp(strMap93);
        strKafkaSpoutConfig47.kafkaProps = strMap93;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder30.setProp(strMap93);
        java.util.Map<java.lang.String, java.lang.Object> strMap97 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap93);
        strBuilder22.kafkaProps = strMap97;
        org.apache.storm.kafka.spout.Subscription subscription99 = strBuilder22.subscription;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMap44);
        org.junit.Assert.assertNotNull(strRecordTranslator45);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNull(strMap51);
        org.junit.Assert.assertNull(firstPollOffsetStrategy52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strBuilder71);
// flaky:         org.junit.Assert.assertTrue("'" + long72 + "' != '" + 32L + "'", long72 == 32L);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strArray85);
        org.junit.Assert.assertTrue("'" + boolean87 + "' != '" + true + "'", boolean87 == true);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strMap97);
        org.junit.Assert.assertNotNull(subscription99);
    }

    @Test
    public void test07826() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07826");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder31.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder34.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = null;
        strBuilder38.retryService = kafkaSpoutRetryService39;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder38);
    }

    @Test
    public void test07827() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07827");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setOffsetCommitPeriodMs(1L);
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder42.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService49 = null;
        strBuilder44.retryService = kafkaSpoutRetryService49;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer53 = null;
        java.util.regex.Pattern pattern54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer52, strSerializableDeserializer53, pattern54);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService56 = null;
        strBuilder55.retryService = kafkaSpoutRetryService56;
        long long58 = strBuilder55.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder55.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = strBuilder55.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder55.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator65 = strKafkaSpoutConfig64.translator;
        long long66 = strKafkaSpoutConfig64.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = strKafkaSpoutConfig64.kafkaProps;
        java.lang.String str68 = strKafkaSpoutConfig64.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strKafkaSpoutConfig64.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer70 = strKafkaSpoutConfig64.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer71 = strKafkaSpoutConfig64.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator72 = strKafkaSpoutConfig64.getTranslator();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass79 = strBuilder78.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder78.firstPollOffsetStrategy = firstPollOffsetStrategy80;
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList85);
        strBuilder87.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = strBuilder87.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder78.setProp(strMap90);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = strBuilder78.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap92);
        strKafkaSpoutConfig64.kafkaProps = strMap93;
        strBuilder55.kafkaProps = strMap93;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder44.setProp(strMap93);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder31.setProp(strMap93);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder48);
// flaky:         org.junit.Assert.assertTrue("'" + long58 + "' != '" + 32L + "'", long58 == 32L);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(strRecordTranslator65);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNull(strMap67);
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str68, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap69);
        org.junit.Assert.assertNull(objDeserializer70);
        org.junit.Assert.assertNull(objDeserializer71);
        org.junit.Assert.assertNull(strRecordTranslator72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass79);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test07828() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07828");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(firstPollOffsetStrategy53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
    }

    @Test
    public void test07829() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07829");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder4.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder4.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer22, strSerializableDeserializer23, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer19, strCollectionSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer16, strListSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList26);
        long long33 = strBuilder32.partitionRefreshPeriodMs;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder39.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder39.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer48 = null;
        java.lang.String[] strArray52 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer47, strSerializableDeserializer48, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator57 = strBuilder56.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder45.setRecordTranslator(strRecordTranslator57);
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder32.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator57, fields59);
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator57, fields61);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder32);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 32L + "'", long33 == 32L);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strRecordTranslator57);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test07830() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07830");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setPartitionRefreshPeriodMs((long) '4');
        java.lang.Object obj19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", obj19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder10.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.Subscription subscription23 = strBuilder10.subscription;
        strBuilder10.offsetCommitPeriodMs = '#';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = strBuilder10.keyDes;
        strBuilder10.maxRetries = 2147483647;
        int int29 = strBuilder10.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(subscription23);
        org.junit.Assert.assertNull(strSerializableDeserializer26);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 10 + "'", int29 == 10);
    }

    @Test
    public void test07831() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07831");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder16.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        strBuilder16.valueDes = strSerializableDeserializer19;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = strBuilder16.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setMaxUncommittedOffsets((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNull(strSerializableDeserializer21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test07832() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07832");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.util.AbstractList<java.lang.String>> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.util.AbstractList<java.lang.String>>();
    }

    @Test
    public void test07833() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07833");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, java.lang.Cloneable> strListKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, java.lang.Cloneable>();
    }

    @Test
    public void test07834() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07834");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setSecurityProtocol("");
        strBuilder10.pollTimeoutMs = 2147483647L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder10.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder10.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Properties properties17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder16.setProp(properties17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test07835() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07835");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        strBuilder5.pollTimeoutMs = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator23 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder5.setRecordTranslator(strRecordTranslator23);
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass31 = strBuilder30.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder30.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPartitionRefreshPeriodMs((long) 1);
        int int45 = strBuilder44.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int51 = strKafkaSpoutConfig50.getMaxTupleRetries();
        strKafkaSpoutConfig50.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = strKafkaSpoutConfig50.retryService;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass61 = strBuilder60.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        strKafkaSpoutConfig50.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        int int66 = strBuilder65.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = strBuilder65.firstPollOffsetStrategy;
        int int68 = strBuilder65.maxUncommittedOffsets;
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList72);
        strBuilder74.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = strBuilder74.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder74.setPartitionRefreshPeriodMs((long) 1);
        int int80 = strBuilder79.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder79.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder79.setSecurityProtocol("hi!");
        long long87 = strBuilder86.pollTimeoutMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator88 = strBuilder86.translator;
        org.apache.storm.tuple.Fields fields89 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder65.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator88, fields89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder33.setRecordTranslator(strRecordTranslator88);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator88, fields92);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(wildcardClass31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
// flaky:         org.junit.Assert.assertTrue("'" + int68 + "' != '" + 10 + "'", int68 == 10);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
// flaky:         org.junit.Assert.assertTrue("'" + long87 + "' != '" + 32L + "'", long87 == 32L);
        org.junit.Assert.assertNotNull(strRecordTranslator88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
    }

    @Test
    public void test07836() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07836");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig9.maxRetries = (short) 1;
        long long12 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.lang.String str13 = strKafkaSpoutConfig9.toString();
        int int14 = strKafkaSpoutConfig9.getMaxTupleRetries();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        int int26 = strBuilder25.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder25.setSecurityProtocol("hi!");
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder38.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass53 = strBuilder52.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strBuilder61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder52.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder44.setProp(strMap64);
        org.apache.storm.kafka.spout.Subscription subscription67 = strBuilder44.subscription;
        strBuilder32.subscription = subscription67;
        subscription67.refreshAssignment();
        strKafkaSpoutConfig9.subscription = subscription67;
        strBuilder5.subscription = subscription67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder5.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder5.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder5.setMaxRetries((int) (short) 100);
        strBuilder79.pollTimeoutMs = (short) -1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(subscription67);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test07837() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07837");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer24 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strComparableBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer23, strCollectionSerializableDeserializer24, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer20, strSerializableDeserializer21, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setMaxPartitionFectchBytes(0);
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass40 = strBuilder39.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder13.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer46 = strKafkaSpoutConfig45.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strKafkaSpoutConfig45.getKafkaProps();
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        strBuilder53.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder53.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder59.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList65);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass68 = strBuilder67.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder67.firstPollOffsetStrategy = firstPollOffsetStrategy69;
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList74);
        strBuilder76.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = strBuilder76.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder67.setProp(strMap79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder59.setProp(strMap79);
        java.util.Map<java.lang.String, java.lang.Object> strMap82 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap79);
        strKafkaSpoutConfig45.kafkaProps = strMap79;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder44.setProp(strMap79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder84.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNull(objDeserializer46);
        org.junit.Assert.assertNull(strMap47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy69 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy69.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strMap82);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
    }

    @Test
    public void test07838() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07838");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer11, strSerializableDeserializer12, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer4, strRecordTranslatorSerializableDeserializer5, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder22.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setMaxPollRecords((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder24.setMaxRetries(97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder28.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder30.setMaxPollRecords((int) (byte) 100);
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strBuilder38.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder38.setPartitionRefreshPeriodMs((long) 1);
        int int44 = strBuilder43.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder43.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int50 = strKafkaSpoutConfig49.getMaxTupleRetries();
        strKafkaSpoutConfig49.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = strKafkaSpoutConfig49.retryService;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder59.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        strKafkaSpoutConfig49.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder43.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer66 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer67 = null;
        java.lang.String[] strArray71 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer66, strSerializableDeserializer67, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder73.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator76 = strBuilder73.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder64.setRecordTranslator(strRecordTranslator76);
        strBuilder32.translator = strRecordTranslator76;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer79 = strBuilder32.keyDes;
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strRecordTranslator76);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNull(strSerializableDeserializer79);
    }

    @Test
    public void test07839() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07839");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(firstPollOffsetStrategy3);
        org.junit.Assert.assertNull(strDeserializer6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription8);
    }

    @Test
    public void test07840() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07840");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        strBuilder11.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder11.setPartitionRefreshPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder11.setRetry(kafkaSpoutRetryService40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test07841() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07841");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setPartitionRefreshPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder31.setPollTimeoutMs((long) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxRetries((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int39 = strKafkaSpoutConfig38.getMaxTupleRetries();
        strKafkaSpoutConfig38.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig38.maxUncommittedOffsets = 35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strKafkaSpoutConfig38.keyDesClazz;
        long long45 = strKafkaSpoutConfig38.offsetCommitPeriodMs;
        strKafkaSpoutConfig38.maxRetries = ' ';
        long long48 = strKafkaSpoutConfig38.partitionRefreshPeriodMs;
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        strBuilder54.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder54.setPartitionRefreshPeriodMs((long) 1);
        int int60 = strBuilder59.maxRetries;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass67 = strBuilder66.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder66.firstPollOffsetStrategy = firstPollOffsetStrategy68;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        strBuilder75.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = strBuilder75.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder66.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder79.firstPollOffsetStrategy = firstPollOffsetStrategy80;
        strBuilder59.firstPollOffsetStrategy = firstPollOffsetStrategy80;
        strKafkaSpoutConfig38.firstPollOffsetStrategy = firstPollOffsetStrategy80;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy80;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + (-1) + "'", int60 == (-1));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy80 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy80.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test07842() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07842");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setPartitionRefreshPeriodMs((long) 1);
        int int24 = strBuilder23.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder23.setSecurityProtocol("hi!");
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder36.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder42.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass51 = strBuilder50.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        strBuilder59.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = strBuilder59.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder50.setProp(strMap62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder42.setProp(strMap62);
        org.apache.storm.kafka.spout.Subscription subscription65 = strBuilder42.subscription;
        strBuilder30.subscription = subscription65;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, subscription65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription65);
        strKafkaSpoutConfig0.subscription = subscription65;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer70 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass72 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(subscription65);
        org.junit.Assert.assertNull(strSerializableDeserializer70);
        org.junit.Assert.assertNull(strMap71);
        org.junit.Assert.assertNull(wildcardClass72);
    }

    @Test
    public void test07843() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07843");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        strBuilder13.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strBuilder13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setPartitionRefreshPeriodMs((long) 1);
        int int19 = strBuilder18.maxRetries;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        strBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        java.lang.String[] strArray46 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer43, strSerializableDeserializer44, (java.util.Collection<java.lang.String>) strList47);
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        strBuilder55.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = strBuilder55.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder55.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService61 = null;
        strBuilder60.retryService = kafkaSpoutRetryService61;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator64 = strBuilder60.translator;
        strBuilder49.translator = strRecordTranslator64;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder18.setRecordTranslator(strRecordTranslator64);
        org.apache.storm.tuple.Fields fields67 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator64, fields67, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder5.pollTimeoutMs = 0;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strRecordTranslator64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test07844() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07844");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setMaxUncommittedOffsets((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder14.setGroupId("hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07845() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07845");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        strBuilder33.partitionRefreshPeriodMs = 35L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder33.setPartitionRefreshPeriodMs(97L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = strBuilder37.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder37.setFetchMinBytes((int) '#');
        org.apache.storm.kafka.spout.Subscription subscription41 = null;
        strBuilder37.subscription = subscription41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder37.setPollTimeoutMs(97L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test07846() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07846");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, pattern3);
    }

    @Test
    public void test07847() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07847");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer6, strSerializableDeserializer7, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
        int int16 = strBuilder15.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int18 = strKafkaSpoutConfig17.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer19 = strKafkaSpoutConfig17.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        strKafkaSpoutConfig17.keyDes = strSerializableDeserializer20;
        strKafkaSpoutConfig17.pollTimeoutMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = strKafkaSpoutConfig17.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer26, strSerializableDeserializer27, (java.util.Collection<java.lang.String>) strList31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder34.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        strBuilder37.keyDes = strSerializableDeserializer38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        strKafkaSpoutConfig17.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = strKafkaSpoutConfig17.getFirstPollOffsetStrategy();
        strBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder15.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder14);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNull(strDeserializer19);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test07848() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07848");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator9;
        long long11 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy14;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(wildcardClass13);
    }

    @Test
    public void test07849() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07849");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "hi!", "hi!", "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strKafkaSpoutConfigBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strKafkaSpoutConfigSerializableDeserializer5, strBuilderSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategyBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategySerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07850() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07850");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder11.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig15.maxRetries = (short) 1;
        long long18 = strKafkaSpoutConfig15.offsetCommitPeriodMs;
        java.lang.String str19 = strKafkaSpoutConfig15.toString();
        int int20 = strKafkaSpoutConfig15.getMaxTupleRetries();
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strBuilder26.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setPartitionRefreshPeriodMs((long) 1);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder31.setSecurityProtocol("hi!");
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder44.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder50.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass59 = strBuilder58.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder58.firstPollOffsetStrategy = firstPollOffsetStrategy60;
        java.lang.String[] strArray64 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList65 = new java.util.ArrayList<java.lang.String>();
        boolean boolean66 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList65, strArray64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList65);
        strBuilder67.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = strBuilder67.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder58.setProp(strMap70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder50.setProp(strMap70);
        org.apache.storm.kafka.spout.Subscription subscription73 = strBuilder50.subscription;
        strBuilder38.subscription = subscription73;
        subscription73.refreshAssignment();
        strKafkaSpoutConfig15.subscription = subscription73;
        strBuilder11.subscription = subscription73;
        subscription73.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> firstPollOffsetStrategyEnumBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer4, strKafkaSpoutConfigSerializableDeserializer5, subscription73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.Collection<java.lang.String>> strListBuilder80 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.Collection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, strCollectionSerializableDeserializer2, subscription73);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertEquals("'" + str19 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str19, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 1 + "'", int20 == 1);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy60 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy60.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray64);
        org.junit.Assert.assertTrue("'" + boolean66 + "' != '" + true + "'", boolean66 == true);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(subscription73);
    }

    @Test
    public void test07851() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07851");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = strBuilder2.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder4.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) subscription72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder76.setFirstPollOffsetStrategy(firstPollOffsetStrategy77);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = null;
        strBuilder78.kafkaProps = strMap79;
        strBuilder78.partitionRefreshPeriodMs = (byte) 0;
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder78);
    }

    @Test
    public void test07852() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07852");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator6;
        long long8 = strKafkaSpoutConfig0.pollTimeoutMs;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 2147483647L;
        int int11 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test07853() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07853");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder9.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        strBuilder12.keyDes = strSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        strBuilder22.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strBuilder22.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setPartitionRefreshPeriodMs((long) 1);
        int int28 = strBuilder27.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder27.setSecurityProtocol("hi!");
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        strBuilder40.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder40.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder46.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass55 = strBuilder54.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder54.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        strBuilder63.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = strBuilder63.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder54.setProp(strMap66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder46.setProp(strMap66);
        org.apache.storm.kafka.spout.Subscription subscription69 = strBuilder46.subscription;
        strBuilder46.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig72 = strBuilder46.build();
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        strBuilder78.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = strBuilder78.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder78.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass84 = strBuilder78.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder78.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator87 = strBuilder78.translator;
        strBuilder46.translator = strRecordTranslator87;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder34.setRecordTranslator(strRecordTranslator87);
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator87, fields90);
        strBuilder91.pollTimeoutMs = 97;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(subscription69);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig72);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(wildcardClass84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strRecordTranslator87);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder91);
    }

    @Test
    public void test07854() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07854");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPartitionRefreshPeriodMs(0L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.valueDesClazz;
        long long14 = strBuilder12.offsetCommitPeriodMs;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = strBuilder21.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder21.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        strBuilder30.keyDes = strSerializableDeserializer31;
        long long33 = strBuilder30.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern39);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator41 = strBuilder40.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder30.setRecordTranslator(strRecordTranslator41);
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder21.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator41, fields43, "hi!");
        org.apache.storm.tuple.Fields fields46 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator41, fields46);
        long long48 = strBuilder47.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = strBuilder47.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 2147483647L + "'", long14 == 2147483647L);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 32L + "'", long33 == 32L);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strRecordTranslator41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
// flaky:         org.junit.Assert.assertTrue("'" + long48 + "' != '" + 2147483647L + "'", long48 == 2147483647L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test07855() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07855");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = strBuilder2.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig8.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig8.getKafkaProps();
        long long11 = strKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass12 = strKafkaSpoutConfig8.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer18, strSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer15, charSequenceSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder26.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder31.kafkaProps;
        strKafkaSpoutConfig8.kafkaProps = strMap32;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer34 = strKafkaSpoutConfig8.valueDes;
        strKafkaSpoutConfig8.maxRetries = 100;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        strKafkaSpoutConfig8.keyDes = strSerializableDeserializer37;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strKafkaSpoutConfig8.keyDesClazz;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder45.setPartitionRefreshPeriodMs((long) 1);
        int int51 = strBuilder50.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder50.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder50.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        strBuilder57.keyDes = strSerializableDeserializer58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder57.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator62 = strBuilder61.translator;
        java.util.regex.Pattern pattern64 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern64);
        org.apache.storm.kafka.spout.Subscription subscription66 = strBuilder65.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = strBuilder65.firstPollOffsetStrategy;
        strBuilder61.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        strKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNull(objSerializableDeserializer34);
        org.junit.Assert.assertNull(wildcardClass39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + (-1) + "'", int51 == (-1));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strRecordTranslator62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder70);
    }

    @Test
    public void test07856() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07856");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long9 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test07857() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07857");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.maxRetries = 32;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer7 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer8;
        strKafkaSpoutConfig0.pollTimeoutMs = 10L;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strDeserializer7);
    }

    @Test
    public void test07858() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07858");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass4 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = strKafkaSpoutConfig0.getRetryService();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator8;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNull(subscription7);
    }

    @Test
    public void test07859() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07859");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setPollTimeoutMs((long) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = strBuilder13.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService14);
    }

    @Test
    public void test07860() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07860");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        int int8 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int9 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long10 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        long long13 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test07861() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07861");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 0;
        org.apache.storm.kafka.spout.Subscription subscription7 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig8.maxRetries = (short) 1;
        long long11 = strKafkaSpoutConfig8.offsetCommitPeriodMs;
        java.lang.String str12 = strKafkaSpoutConfig8.toString();
        int int13 = strKafkaSpoutConfig8.getMaxTupleRetries();
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setPartitionRefreshPeriodMs((long) 1);
        int int25 = strBuilder24.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder24.setSecurityProtocol("hi!");
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder37.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder43.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass52 = strBuilder51.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        strBuilder60.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder51.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder43.setProp(strMap63);
        org.apache.storm.kafka.spout.Subscription subscription66 = strBuilder43.subscription;
        strBuilder31.subscription = subscription66;
        subscription66.refreshAssignment();
        strKafkaSpoutConfig8.subscription = subscription66;
        strKafkaSpoutConfig0.subscription = subscription66;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer71 = strKafkaSpoutConfig0.valueDes;
        int int72 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription73 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(subscription7);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertNull(objSerializableDeserializer71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertNotNull(subscription73);
    }

    @Test
    public void test07862() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07862");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer3 = strKafkaSpoutConfig0.getValueDeserializer();
        strKafkaSpoutConfig0.maxRetries = 10;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        int int7 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(objDeserializer3);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 10 + "'", int7 == 10);
    }

    @Test
    public void test07863() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07863");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer5 = strKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass6 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer20 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strComparableBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer19, strCollectionSerializableDeserializer20, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>> strArrayBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer16, strCollectionSerializableDeserializer17, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> annotatedElementBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer13, strConsumerRecordFuncSerializableDeserializer14, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setPollTimeoutMs(0L);
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder33.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap34);
        strKafkaSpoutConfig0.kafkaProps = strMap35;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strDeserializer5);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test07864() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07864");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strBuilder12.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder12.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        strBuilder17.partitionRefreshPeriodMs = (byte) 1;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test07865() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07865");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>();
        int int1 = strBuilder0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder3 = strBuilder0.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        strBuilder3.valueDes = strSerializableDeserializer4;
        java.util.Properties properties6 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder3.setProp(properties6);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 10 + "'", int1 == 10);
        org.junit.Assert.assertNotNull(strBuilder3);
    }

    @Test
    public void test07866() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07866");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer14, strSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.Object> strConsumerRecordFuncBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.Object>("hi!", strConsumerRecordFuncSerializableDeserializer11, objSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type> annotatedElementBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer8, typeSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.util.Collection<java.lang.String>> strBuilderBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.util.Collection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strBuilderSerializableDeserializer4, strCollectionSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList19);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
    }

    @Test
    public void test07867() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07867");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setRecordTranslator(strConsumerRecordFunc7, fields8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long11 = strBuilder5.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder5.valueDesClazz;
        long long13 = strBuilder5.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder5.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.Subscription subscription16 = strBuilder15.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = strBuilder15.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder15.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig20 = strBuilder15.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int22 = strKafkaSpoutConfig21.getMaxTupleRetries();
        long long23 = strKafkaSpoutConfig21.getPollTimeoutMs();
        strKafkaSpoutConfig21.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = strKafkaSpoutConfig21.getFirstPollOffsetStrategy();
        int int27 = strKafkaSpoutConfig21.maxUncommittedOffsets;
        java.lang.String str28 = strKafkaSpoutConfig21.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = strKafkaSpoutConfig21.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int31 = strKafkaSpoutConfig30.getMaxTupleRetries();
        long long32 = strKafkaSpoutConfig30.getPollTimeoutMs();
        strKafkaSpoutConfig30.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = strKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator36 = strKafkaSpoutConfig30.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = strKafkaSpoutConfig30.getFirstPollOffsetStrategy();
        java.lang.String str38 = strKafkaSpoutConfig30.toString();
        strKafkaSpoutConfig30.maxUncommittedOffsets = 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int42 = strKafkaSpoutConfig41.getMaxTupleRetries();
        strKafkaSpoutConfig41.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig41.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig41.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig49 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int50 = strKafkaSpoutConfig49.getMaxTupleRetries();
        long long51 = strKafkaSpoutConfig49.getPollTimeoutMs();
        strKafkaSpoutConfig49.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = strKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator55 = strKafkaSpoutConfig49.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = strKafkaSpoutConfig49.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int58 = strKafkaSpoutConfig57.getMaxTupleRetries();
        strKafkaSpoutConfig57.maxRetries = 1;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = strBuilder66.kafkaProps;
        strKafkaSpoutConfig57.kafkaProps = strMap67;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strKafkaSpoutConfig57.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = strKafkaSpoutConfig57.kafkaProps;
        strKafkaSpoutConfig49.kafkaProps = strMap70;
        strKafkaSpoutConfig41.kafkaProps = strMap70;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer73 = strKafkaSpoutConfig41.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass74 = strKafkaSpoutConfig41.valueDesClazz;
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList78);
        strBuilder80.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder80.setSSLKeystore("", "", "hi!");
        int int87 = strBuilder86.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder86.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = strBuilder91.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap93 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap92);
        strKafkaSpoutConfig41.kafkaProps = strMap93;
        strKafkaSpoutConfig30.kafkaProps = strMap93;
        strKafkaSpoutConfig21.kafkaProps = strMap93;
        strBuilder15.kafkaProps = strMap93;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(subscription16);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str28, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objSerializableDeserializer29);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy35);
        org.junit.Assert.assertNull(strRecordTranslator36);
        org.junit.Assert.assertNull(firstPollOffsetStrategy37);
        org.junit.Assert.assertEquals("'" + str38 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str38, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy54);
        org.junit.Assert.assertNull(strRecordTranslator55);
        org.junit.Assert.assertNull(firstPollOffsetStrategy56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNull(strSerializableDeserializer73);
        org.junit.Assert.assertNull(wildcardClass74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder86);
// flaky:         org.junit.Assert.assertTrue("'" + int87 + "' != '" + 10 + "'", int87 == 10);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strMap93);
    }

    @Test
    public void test07868() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07868");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str3 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = strKafkaSpoutConfig0.keyDes;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertNull(strSerializableDeserializer5);
        org.junit.Assert.assertNull(objDeserializer6);
    }

    @Test
    public void test07869() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07869");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder15.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setPartitionRefreshPeriodMs((long) 1);
        int int21 = strBuilder20.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int27 = strKafkaSpoutConfig26.getMaxTupleRetries();
        strKafkaSpoutConfig26.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = strKafkaSpoutConfig26.retryService;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass37 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        strKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder20.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription45 = strBuilder20.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription45);
        strKafkaSpoutConfig0.subscription = subscription45;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer48 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(subscription45);
        org.junit.Assert.assertNull(objDeserializer48);
    }

    @Test
    public void test07870() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07870");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        strBuilder19.keyDes = strSerializableDeserializer20;
        long long22 = strBuilder19.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        strBuilder33.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = strBuilder33.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder33.setPartitionRefreshPeriodMs((long) 1);
        int int39 = strBuilder38.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder38.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder38.setSecurityProtocol("hi!");
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        strBuilder51.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder51.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder57.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass66 = strBuilder65.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder65.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList72);
        strBuilder74.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = strBuilder74.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder65.setProp(strMap77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder57.setProp(strMap77);
        org.apache.storm.kafka.spout.Subscription subscription80 = strBuilder57.subscription;
        strBuilder45.subscription = subscription80;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer26, strSerializableDeserializer27, subscription80);
        strBuilder19.subscription = subscription80;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, subscription80);
        strKafkaSpoutConfig0.subscription = subscription80;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean86 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 32L + "'", long22 == 32L);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + (-1) + "'", int39 == (-1));
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(subscription80);
    }

    @Test
    public void test07871() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07871");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer11, strSerializableDeserializer12, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer8, charSequenceSerializableDeserializer9, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder22.setFetchMinBytes((int) (short) 100);
        int int25 = strBuilder24.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
// flaky:         org.junit.Assert.assertTrue("'" + int25 + "' != '" + 10 + "'", int25 == 10);
    }

    @Test
    public void test07872() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07872");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        long long8 = strKafkaSpoutConfig0.getPollTimeoutMs();
        int int9 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.getSubscription();
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNull(subscription10);
        org.junit.Assert.assertNull(subscription11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07873() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07873");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer16, strListSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=2147483647, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test07874() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07874");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer22, strSerializableDeserializer23, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer19, strSerializableDeserializer20, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer15, strRecordTranslatorSerializableDeserializer16, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer12, strComparableSerializableDeserializer13, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer9, strMapSerializableDeserializer10, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.String> strArrayBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer1, strSerializableDeserializer2, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.lang.String> strArrayKafkaSpoutConfig39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.lang.String>(strArrayBuilder38);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test07875() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07875");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxRetries = '#';
        int int16 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
    }

    @Test
    public void test07876() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07876");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Cloneable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=2147483647, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, cloneableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test07877() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07877");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass7 = strBuilder5.valueDesClazz;
        strBuilder5.partitionRefreshPeriodMs = 1L;
        long long10 = strBuilder5.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setMaxPartitionFectchBytes(100);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
// flaky:         org.junit.Assert.assertTrue("'" + long10 + "' != '" + 32L + "'", long10 == 32L);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test07878() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07878");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> annotatedElementBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", annotatedElementSerializableDeserializer5, firstPollOffsetStrategySerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("hi!", strSerializableDeserializer2, strBuilderSerializableDeserializer3, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder16.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer20, strSerializableDeserializer21, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator30 = strBuilder27.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder27.setMaxPollRecords(52);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder34.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder16.setProp(strMap35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder16.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=2147483647, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strRecordTranslator30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test07879() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07879");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        int int17 = strBuilder16.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setSecurityProtocol("hi!");
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder43.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        strBuilder52.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder43.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder35.setProp(strMap55);
        org.apache.storm.kafka.spout.Subscription subscription58 = strBuilder35.subscription;
        strBuilder23.subscription = subscription58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription58);
        java.lang.String str61 = subscription58.getTopicsString();
        subscription58.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription58);
        long long64 = strBuilder63.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = strBuilder63.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder63.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder67.setSSLTruststore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray73 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList74 = new java.util.ArrayList<java.lang.String>();
        boolean boolean75 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList74, strArray73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList74);
        strBuilder76.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = strBuilder76.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder76.setPartitionRefreshPeriodMs((long) 1);
        int int82 = strBuilder81.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder81.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder81.setSecurityProtocol("hi!");
        long long89 = strBuilder88.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = strBuilder88.kafkaProps;
        long long91 = strBuilder88.partitionRefreshPeriodMs;
        long long92 = strBuilder88.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder88.setMaxUncommittedOffsets(32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy95 = strBuilder88.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder70.setFirstPollOffsetStrategy(firstPollOffsetStrategy95);
        java.util.Properties properties97 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder98 = strBuilder70.setProp(properties97);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
// flaky:         org.junit.Assert.assertTrue("'" + long64 + "' != '" + 32L + "'", long64 == 32L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strArray73);
        org.junit.Assert.assertTrue("'" + boolean75 + "' != '" + true + "'", boolean75 == true);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + (-1) + "'", int82 == (-1));
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder88);
// flaky:         org.junit.Assert.assertTrue("'" + long89 + "' != '" + 32L + "'", long89 == 32L);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertTrue("'" + long91 + "' != '" + 1L + "'", long91 == 1L);
        org.junit.Assert.assertTrue("'" + long92 + "' != '" + 1L + "'", long92 == 1L);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy95 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy95.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test07880() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07880");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setFetchMinBytes(100);
        long long18 = strBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setOffsetCommitPeriodMs((long) (short) -1);
        long long21 = strBuilder17.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = strBuilder17.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 32L + "'", long18 == 32L);
        org.junit.Assert.assertNotNull(strBuilder20);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService22);
    }

    @Test
    public void test07881() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07881");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer18, strSerializableDeserializer19, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer11, strRecordTranslatorSerializableDeserializer12, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer8, strComparableSerializableDeserializer9, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer5, strMapSerializableDeserializer6, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type> strIterableBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer1, typeSerializableDeserializer2, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type> strIterableKafkaSpoutConfig33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Iterable<java.lang.String>, java.lang.reflect.Type>(strIterableBuilder32);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07882() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07882");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07883() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07883");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator8);
    }

    @Test
    public void test07884() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07884");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer4, strListSerializableDeserializer5, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder9.setMaxRetries((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder9.setMaxPollRecords(52);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder9.setRetry(kafkaSpoutRetryService14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07885() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07885");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer5;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
    }

    @Test
    public void test07886() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07886");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        int int27 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long28 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long30 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass31 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator32 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int35 = strKafkaSpoutConfig34.getMaxTupleRetries();
        strKafkaSpoutConfig34.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = strKafkaSpoutConfig34.keyDes;
        int int39 = strKafkaSpoutConfig34.maxUncommittedOffsets;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder45.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = null;
        strBuilder50.retryService = kafkaSpoutRetryService51;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = strBuilder50.kafkaProps;
        strKafkaSpoutConfig34.kafkaProps = strMap53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap53);
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap55);
        strKafkaSpoutConfig0.kafkaProps = strMap55;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(wildcardClass31);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer38);
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strMap56);
    }

    @Test
    public void test07887() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07887");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer19 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer18, strArraySerializableDeserializer19, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer15, strArraySerializableDeserializer16, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder34.kafkaProps;
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap35);
    }

    @Test
    public void test07888() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07888");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.util.Properties properties11 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setProp(properties11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test07889() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07889");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer13, strSerializableDeserializer14, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator23 = strBuilder22.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder11.setRecordTranslator(strRecordTranslator23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy25 = strBuilder24.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strRecordTranslator23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy25 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy25.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07890() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07890");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        java.lang.String str16 = strKafkaSpoutConfig0.toString();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strKafkaSpoutConfig0.keyDesClazz;
        long long18 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test07891() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07891");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService5;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 100;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test07892() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07892");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig10.translator;
        long long12 = strKafkaSpoutConfig10.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strKafkaSpoutConfig10.kafkaProps;
        java.lang.String str14 = strKafkaSpoutConfig10.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strKafkaSpoutConfig10.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer16 = strKafkaSpoutConfig10.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = strKafkaSpoutConfig10.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = null;
        strKafkaSpoutConfig10.retryService = kafkaSpoutRetryService18;
        strKafkaSpoutConfig10.partitionRefreshPeriodMs = 141902646130682494L;
        java.lang.String str22 = strKafkaSpoutConfig10.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int27 = strKafkaSpoutConfig26.getMaxTupleRetries();
        long long28 = strKafkaSpoutConfig26.getPollTimeoutMs();
        strKafkaSpoutConfig26.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strKafkaSpoutConfig26.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator32 = strKafkaSpoutConfig26.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = strKafkaSpoutConfig26.getFirstPollOffsetStrategy();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPartitionRefreshPeriodMs((long) 1);
        int int45 = strBuilder44.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder44.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder51.subscription;
        strKafkaSpoutConfig26.subscription = subscription52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String[]> strIterableBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer24, strArraySerializableDeserializer25, subscription52);
        strKafkaSpoutConfig10.subscription = subscription52;
        subscription52.refreshAssignment();
        strKafkaSpoutConfig0.subscription = subscription52;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator58 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator58;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = strKafkaSpoutConfig0.getKafkaProps();
        int int61 = strKafkaSpoutConfig0.maxRetries;
        int int62 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(objDeserializer16);
        org.junit.Assert.assertNull(strSerializableDeserializer17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str22, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy31);
        org.junit.Assert.assertNull(strRecordTranslator32);
        org.junit.Assert.assertNull(firstPollOffsetStrategy33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNull(strMap60);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test07893() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07893");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.Subscription subscription18 = strBuilder11.subscription;
        subscription18.refreshAssignment();
        subscription18.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test07894() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07894");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setMaxRetries(100);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = strBuilder13.valueDes;
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(strSerializableDeserializer18);
    }

    @Test
    public void test07895() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07895");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer3;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder12.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder12.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc18 = null;
        org.apache.storm.tuple.Fields fields19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder12.setRecordTranslator(strConsumerRecordFunc18, fields19, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder27.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder27.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder27.setProp(strMap39);
        long long41 = strBuilder27.pollTimeoutMs;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass48 = strBuilder47.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        strBuilder56.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = strBuilder56.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder47.setProp(strMap59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy61);
        strBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer66 = strKafkaSpoutConfig0.keyDes;
        long long67 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator69 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder40);
// flaky:         org.junit.Assert.assertTrue("'" + long41 + "' != '" + 32L + "'", long41 == 32L);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNull(strSerializableDeserializer66);
        org.junit.Assert.assertTrue("'" + long67 + "' != '" + 0L + "'", long67 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertNull(strRecordTranslator69);
    }

    @Test
    public void test07896() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07896");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxRetries = ' ';
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator12 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(subscription10);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertNull(strRecordTranslator12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
    }

    @Test
    public void test07897() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07897");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strKafkaSpoutConfig8.retryService;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder16.setProp(strMap28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        strKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        long long34 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        long long35 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
    }

    @Test
    public void test07898() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07898");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07899() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07899");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        strBuilder5.valueDes = strSerializableDeserializer10;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test07900() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07900");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 97L;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07901() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07901");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig10.translator;
        long long12 = strKafkaSpoutConfig10.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strKafkaSpoutConfig10.kafkaProps;
        java.lang.String str14 = strKafkaSpoutConfig10.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strKafkaSpoutConfig10.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer16 = strKafkaSpoutConfig10.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = strKafkaSpoutConfig10.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService18 = null;
        strKafkaSpoutConfig10.retryService = kafkaSpoutRetryService18;
        strKafkaSpoutConfig10.partitionRefreshPeriodMs = 141902646130682494L;
        java.lang.String str22 = strKafkaSpoutConfig10.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int27 = strKafkaSpoutConfig26.getMaxTupleRetries();
        long long28 = strKafkaSpoutConfig26.getPollTimeoutMs();
        strKafkaSpoutConfig26.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strKafkaSpoutConfig26.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator32 = strKafkaSpoutConfig26.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = strKafkaSpoutConfig26.getFirstPollOffsetStrategy();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPartitionRefreshPeriodMs((long) 1);
        int int45 = strBuilder44.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder44.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder51.subscription;
        strKafkaSpoutConfig26.subscription = subscription52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String[]> strIterableBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer24, strArraySerializableDeserializer25, subscription52);
        strKafkaSpoutConfig10.subscription = subscription52;
        subscription52.refreshAssignment();
        strKafkaSpoutConfig0.subscription = subscription52;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator58 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator58;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer60 = strKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass61 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap15);
        org.junit.Assert.assertNull(objDeserializer16);
        org.junit.Assert.assertNull(strSerializableDeserializer17);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str22, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy31);
        org.junit.Assert.assertNull(strRecordTranslator32);
        org.junit.Assert.assertNull(firstPollOffsetStrategy33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNull(strDeserializer60);
        org.junit.Assert.assertNull(wildcardClass61);
    }

    @Test
    public void test07902() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07902");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator16 = strBuilder15.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder5.setRecordTranslator(strRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "");
        long long25 = strBuilder24.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder24.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder28.setOffsetCommitPeriodMs(100L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strRecordTranslator16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder24);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2147483647L + "'", long25 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
    }

    @Test
    public void test07903() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07903");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={ssl.keystore.password=KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}, ssl.keystore.location=hi!, bootstrap.servers=}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={ssl/keystore/password=KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}, ssl/keystore/location=hi!, bootstrap/servers=}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07904() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07904");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig3.maxRetries = (short) 1;
        long long6 = strKafkaSpoutConfig3.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass7 = strKafkaSpoutConfig3.keyDesClazz;
        int int8 = strKafkaSpoutConfig3.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer9 = strKafkaSpoutConfig3.getKeyDeserializer();
        strKafkaSpoutConfig3.offsetCommitPeriodMs = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = strKafkaSpoutConfig3.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        strKafkaSpoutConfig3.retryService = kafkaSpoutRetryService13;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        int int26 = strBuilder25.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int32 = strKafkaSpoutConfig31.getMaxTupleRetries();
        strKafkaSpoutConfig31.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = strKafkaSpoutConfig31.retryService;
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList39);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass42 = strBuilder41.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder41.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        strKafkaSpoutConfig31.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder25.setFirstPollOffsetStrategy(firstPollOffsetStrategy43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder25.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription50 = strBuilder25.subscription;
        long long51 = strBuilder25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig52 = strBuilder25.build();
        org.apache.storm.kafka.spout.Subscription subscription53 = strBuilder25.subscription;
        java.lang.String str54 = subscription53.getTopicsString();
        java.lang.String str55 = subscription53.getTopicsString();
        strKafkaSpoutConfig3.subscription = subscription53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig58 = strBuilder57.build();
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(wildcardClass7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(strDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(subscription50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 2147483647L + "'", long51 == 2147483647L);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig52);
        org.junit.Assert.assertNotNull(subscription53);
        org.junit.Assert.assertEquals("'" + str54 + "' != '" + "" + "'", str54, "");
        org.junit.Assert.assertEquals("'" + str55 + "' != '" + "" + "'", str55, "");
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig58);
    }

    @Test
    public void test07905() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07905");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder11.setOffsetCommitPeriodMs((long) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder11.setPollTimeoutMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setRetry(kafkaSpoutRetryService21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2147483647L + "'", long16 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07906() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07906");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator7 = null;
        strBuilder5.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets(1);
        strBuilder5.maxUncommittedOffsets = 2147483647;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        strBuilder5.retryService = kafkaSpoutRetryService13;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test07907() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07907");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long11 = strKafkaSpoutConfig0.pollTimeoutMs;
        int int12 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str16 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07908() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07908");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = strKafkaSpoutConfig0.getRetryService();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 10;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass82 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer83 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator86 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator86;
        strKafkaSpoutConfig0.maxRetries = 10;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(kafkaSpoutRetryService77);
        org.junit.Assert.assertNull(wildcardClass82);
        org.junit.Assert.assertNull(strDeserializer83);
    }

    @Test
    public void test07909() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07909");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass16 = strBuilder15.keyDesClazz;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder15.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) wildcardClass17);
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setPartitionRefreshPeriodMs((long) 1);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder29.setSecurityProtocol("hi!");
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        strBuilder42.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder42.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder48.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass57 = strBuilder56.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder56.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder56.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder48.setProp(strMap68);
        org.apache.storm.kafka.spout.Subscription subscription71 = strBuilder48.subscription;
        strBuilder48.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig74 = strBuilder48.build();
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList78);
        strBuilder80.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = strBuilder80.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = strBuilder80.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass86 = strBuilder80.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder80.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator89 = strBuilder80.translator;
        strBuilder48.translator = strRecordTranslator89;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder36.setRecordTranslator(strRecordTranslator89);
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator89, fields92, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder94.setMaxPartitionFectchBytes((int) 'a');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(subscription71);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig74);
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(wildcardClass86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strRecordTranslator89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test07910() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07910");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.AnnotatedElement> firstPollOffsetStrategyBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.AnnotatedElement>();
    }

    @Test
    public void test07911() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07911");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        int int8 = strBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder5.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSSLTruststore("hi!", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
// flaky:         org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07912() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07912");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        strBuilder5.pollTimeoutMs = 100;
        strBuilder5.maxUncommittedOffsets = 35;
        strBuilder5.partitionRefreshPeriodMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig15 = strBuilder5.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig16 = strBuilder5.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setPollTimeoutMs(52L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig15);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test07913() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07913");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        int int12 = strBuilder5.maxRetries;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder23.retryService = kafkaSpoutRetryService24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.Subscription subscription30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer28, strSerializableDeserializer29, subscription30);
        strBuilder31.partitionRefreshPeriodMs = 0L;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass40 = strBuilder39.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder39.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy41;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy41);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        strBuilder45.keyDes = strSerializableDeserializer46;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer48 = strBuilder45.keyDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + (-1) + "'", int12 == (-1));
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy41 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy41.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNull(strSerializableDeserializer48);
    }

    @Test
    public void test07914() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07914");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNull(objSerializableDeserializer7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
    }

    @Test
    public void test07915() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07915");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder9.setPollTimeoutMs((long) 100);
        strBuilder11.offsetCommitPeriodMs = 35;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test07916() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07916");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setPartitionRefreshPeriodMs((long) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder6.setMaxPartitionFectchBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setMaxPollRecords((int) (short) 100);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test07917() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07917");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder23.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        strBuilder46.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strBuilder46.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder37.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder29.setProp(strMap49);
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder29.subscription;
        strBuilder17.subscription = subscription52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder17.setPartitionRefreshPeriodMs((long) (byte) 100);
        strBuilder17.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.Subscription subscription58 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder17.setPartitionRefreshPeriodMs((long) 35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder17.setPartitionRefreshPeriodMs((long) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer63 = null;
        strBuilder17.valueDes = strSerializableDeserializer63;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test07918() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07918");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        int int17 = strBuilder16.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int23 = strKafkaSpoutConfig22.getMaxTupleRetries();
        strKafkaSpoutConfig22.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = strKafkaSpoutConfig22.retryService;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass33 = strBuilder32.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder32.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        strKafkaSpoutConfig22.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder16.setFirstPollOffsetStrategy(firstPollOffsetStrategy34);
        int int38 = strBuilder37.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = strBuilder37.valueDes;
        strBuilder37.maxUncommittedOffsets = '4';
        long long42 = strBuilder37.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig43.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = null;
        strKafkaSpoutConfig43.retryService = kafkaSpoutRetryService46;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        strBuilder53.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = strBuilder53.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder53.setPartitionRefreshPeriodMs((long) 1);
        int int59 = strBuilder58.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder58.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int65 = strKafkaSpoutConfig64.getMaxTupleRetries();
        strKafkaSpoutConfig64.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService68 = strKafkaSpoutConfig64.retryService;
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList72);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass75 = strBuilder74.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder74.firstPollOffsetStrategy = firstPollOffsetStrategy76;
        strKafkaSpoutConfig64.firstPollOffsetStrategy = firstPollOffsetStrategy76;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder58.setFirstPollOffsetStrategy(firstPollOffsetStrategy76);
        strKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy76;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy76;
        org.apache.storm.kafka.spout.Subscription subscription82 = strBuilder37.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.ArrayList<java.lang.String>> strBuilder84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strListSerializableDeserializer2, subscription82);
        java.lang.String str85 = subscription82.getTopicsString();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer39);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 1L + "'", long42 == 1L);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(subscription82);
        org.junit.Assert.assertEquals("'" + str85 + "' != '" + "" + "'", str85, "");
    }

    @Test
    public void test07919() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07919");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder7.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = strBuilder11.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setMaxRetries((int) '#');
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder17.kafkaProps;
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(strSerializableDeserializer15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap18);
    }

    @Test
    public void test07920() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07920");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray10);
        strBuilder14.maxUncommittedOffsets = 100;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass23 = strBuilder22.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        strBuilder31.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder31.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder22.setProp(strMap34);
        long long36 = strBuilder22.pollTimeoutMs;
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass43 = strBuilder42.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy44;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder22.setFirstPollOffsetStrategy(firstPollOffsetStrategy44);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator47 = strBuilder46.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder14.setRecordTranslator(strRecordTranslator47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder14.setOffsetCommitPeriodMs((long) (byte) 1);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strBuilder35);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(wildcardClass43);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy44 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy44.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strRecordTranslator47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
    }

    @Test
    public void test07921() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07921");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray24 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> firstPollOffsetStrategyBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategySerializableDeserializer8, strKafkaSpoutConfigSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList25);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer37, strSerializableDeserializer38, (java.util.Collection<java.lang.String>) strList41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator46 = strBuilder45.translator;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder33.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator46, fields47, "");
        long long50 = strBuilder49.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strRecordTranslator46);
        org.junit.Assert.assertNotNull(strBuilder49);
// flaky:         org.junit.Assert.assertTrue("'" + long50 + "' != '" + 32L + "'", long50 == 32L);
    }

    @Test
    public void test07922() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07922");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription4 = strKafkaSpoutConfig0.subscription;
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = strKafkaSpoutConfig0.valueDes;
        strKafkaSpoutConfig0.pollTimeoutMs = 100L;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertNull(subscription4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objSerializableDeserializer7);
    }

    @Test
    public void test07923() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07923");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer7;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 100;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
    }

    @Test
    public void test07924() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07924");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.Map<java.lang.String, java.lang.Object>> cloneableBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Cloneable, java.util.Map<java.lang.String, java.lang.Object>>();
    }

    @Test
    public void test07925() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07925");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        int int23 = strBuilder22.maxRetries;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass30 = strBuilder29.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strBuilder38.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder29.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder42.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        strBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator52 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder51.setRecordTranslator(strRecordTranslator52);
        strBuilder51.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = strBuilder51.kafkaProps;
        strBuilder22.kafkaProps = strMap56;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap56);
        strKafkaSpoutConfig0.kafkaProps = strMap58;
        long long60 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 1L + "'", long60 == 1L);
    }

    @Test
    public void test07926() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07926");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strCollectionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer4, strKafkaSpoutConfigSerializableDeserializer5, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray15);
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder20.kafkaProps;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test07927() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07927");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setSecurityProtocol("");
        strBuilder19.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder19.setMaxUncommittedOffsets((int) (byte) 100);
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        strBuilder33.keyDes = strSerializableDeserializer34;
        long long36 = strBuilder33.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder33.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder33.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator44 = strBuilder43.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder33.setRecordTranslator(strRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder45.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.Subscription subscription50 = strBuilder45.subscription;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder19.setProp(strMap51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder52.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator56 = strBuilder52.translator;
        strBuilder52.partitionRefreshPeriodMs = (byte) 100;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 2147483647L + "'", long16 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strRecordTranslator44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strRecordTranslator56);
    }

    @Test
    public void test07928() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07928");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder5.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long16 = strBuilder15.pollTimeoutMs;
        org.apache.storm.kafka.spout.Subscription subscription17 = strBuilder15.subscription;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test07929() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07929");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer12, strListSerializableDeserializer13, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> genericDeclarationBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer2, firstPollOffsetStrategySerializableDeserializer3, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = strBuilder21.retryService;
        long long23 = strBuilder21.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService22);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 32L + "'", long23 == 32L);
    }

    @Test
    public void test07930() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07930");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 2147483647L;
        long long13 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer14);
    }

    @Test
    public void test07931() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07931");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer33, strSerializableDeserializer34, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator43 = strBuilder40.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder31.setRecordTranslator(strRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig45 = strBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator47 = strKafkaSpoutConfig46.translator;
        long long48 = strKafkaSpoutConfig46.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strKafkaSpoutConfig46.kafkaProps;
        java.lang.String str50 = strKafkaSpoutConfig46.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig46.firstPollOffsetStrategy = firstPollOffsetStrategy51;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy51);
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder59.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder62.setSecurityProtocol("");
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList68);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass71 = strBuilder70.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder70.firstPollOffsetStrategy = firstPollOffsetStrategy72;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = strBuilder70.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig75 = strBuilder70.build();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator76 = strBuilder70.translator;
        strBuilder62.translator = strRecordTranslator76;
        strBuilder53.translator = strRecordTranslator76;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strRecordTranslator43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig45);
        org.junit.Assert.assertNull(strRecordTranslator47);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNull(strMap49);
        org.junit.Assert.assertEquals("'" + str50 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str50, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy51 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy51.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(wildcardClass71);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy72 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy72.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig75);
        org.junit.Assert.assertNotNull(strRecordTranslator76);
    }

    @Test
    public void test07932() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07932");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strBuilder9.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder9.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription13 = strBuilder12.subscription;
        java.lang.String str14 = subscription13.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer1, strKafkaSpoutConfigSerializableDeserializer2, subscription13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strCollectionKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>(strCollectionBuilder15);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(subscription13);
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str14, "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test07933() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07933");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer8, strArraySerializableDeserializer9, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer5, strArraySerializableDeserializer6, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        long long21 = strBuilder20.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder20.setMaxPollRecords(32);
        org.apache.storm.kafka.spout.Subscription subscription24 = strBuilder23.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder23.setFetchMinBytes(2147483647);
        long long27 = strBuilder26.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder19);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 2147483647L + "'", long21 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(subscription24);
        org.junit.Assert.assertNotNull(strBuilder26);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 32L + "'", long27 == 32L);
    }

    @Test
    public void test07934() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07934");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer11, strListSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer30, strSerializableDeserializer31, (java.util.Collection<java.lang.String>) strList34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer27, strCollectionSerializableDeserializer28, (java.util.Collection<java.lang.String>) strList34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer24, strSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder38.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer42 = null;
        strBuilder38.keyDes = strSerializableDeserializer42;
        org.apache.storm.kafka.spout.Subscription subscription44 = strBuilder38.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder21.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder21.setMaxRetries(0);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(subscription44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
    }

    @Test
    public void test07935() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07935");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.maxRetries = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long11 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        long long13 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52L;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer20);
    }

    @Test
    public void test07936() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07936");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator5;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer7 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer7);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test07937() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07937");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer9 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strDeserializer9);
    }

    @Test
    public void test07938() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07938");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        strBuilder11.maxRetries = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = null;
        strBuilder11.retryService = kafkaSpoutRetryService15;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder11.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
// flaky:         org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNull(wildcardClass17);
    }

    @Test
    public void test07939() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07939");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer12, strListSerializableDeserializer13, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={security.protocol=hi!, ssl.keystore.password=hi!, ssl.key.password=KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}, ssl.keystore.location=KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray15);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test07940() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07940");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setPollTimeoutMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass18 = strBuilder13.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test07941() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07941");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        int int27 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long28 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long30 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int31 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 'a';
        long long35 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer36 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer37 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNull(objDeserializer36);
        org.junit.Assert.assertNull(objSerializableDeserializer37);
    }

    @Test
    public void test07942() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07942");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer5 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> annotatedElementBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", annotatedElementSerializableDeserializer4, firstPollOffsetStrategySerializableDeserializer5, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder14.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator19 = strKafkaSpoutConfig18.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer20 = strKafkaSpoutConfig18.getKeyDeserializer();
        int int21 = strKafkaSpoutConfig18.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        strKafkaSpoutConfig18.retryService = kafkaSpoutRetryService22;
        int int24 = strKafkaSpoutConfig18.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig18.getKafkaProps();
        java.lang.String str26 = strKafkaSpoutConfig18.toString();
        int int27 = strKafkaSpoutConfig18.getMaxTupleRetries();
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        strBuilder33.keyDes = strSerializableDeserializer34;
        long long36 = strBuilder33.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder33.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder33.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator44 = strBuilder43.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder33.setRecordTranslator(strRecordTranslator44);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strBuilder45.kafkaProps;
        strKafkaSpoutConfig18.kafkaProps = strMap46;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder17.setProp(strMap48);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(strRecordTranslator19);
        org.junit.Assert.assertNull(strDeserializer20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertEquals("'" + str26 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str26, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strRecordTranslator44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder49);
    }

    @Test
    public void test07943() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07943");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc5 = null;
        org.apache.storm.tuple.Fields fields6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setRecordTranslator(strConsumerRecordFunc5, fields6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder4.valueDes = strSerializableDeserializer9;
        strBuilder4.pollTimeoutMs = 97L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder4.setSecurityProtocol("hi!");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test07944() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07944");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        long long77 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer78 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer78;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer80 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer80;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertTrue("'" + long77 + "' != '" + 0L + "'", long77 == 0L);
    }

    @Test
    public void test07945() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07945");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer12 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder18.setSSLKeystore("", "", "hi!");
        strBuilder18.maxRetries = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder18.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        strBuilder18.valueDes = strSerializableDeserializer30;
        org.apache.storm.kafka.spout.Subscription subscription32 = strBuilder18.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.CharSequence> strBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, charSequenceSerializableDeserializer12, subscription32);
        strKafkaSpoutConfig0.subscription = subscription32;
        int int35 = strKafkaSpoutConfig0.maxRetries;
        long long36 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int37 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test07946() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07946");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries((int) (short) 1);
        int int7 = strBuilder6.maxRetries;
        strBuilder6.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer11 = strKafkaSpoutConfig10.getValueDeserializer();
        int int12 = strKafkaSpoutConfig10.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strKafkaSpoutConfig10.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = strKafkaSpoutConfig10.valueDes;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass21 = strBuilder20.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder20.setProp(strMap32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder33.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        strKafkaSpoutConfig10.firstPollOffsetStrategy = firstPollOffsetStrategy34;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = strKafkaSpoutConfig10.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = strKafkaSpoutConfig10.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder6.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer40 = strBuilder6.valueDes;
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertNull(objDeserializer11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(objSerializableDeserializer14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(strSerializableDeserializer40);
    }

    @Test
    public void test07947() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07947");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int9 = strKafkaSpoutConfig8.getMaxTupleRetries();
        strKafkaSpoutConfig8.maxRetries = 1;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder17.kafkaProps;
        strKafkaSpoutConfig8.kafkaProps = strMap18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strKafkaSpoutConfig8.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strKafkaSpoutConfig8.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap21;
        int int23 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long24 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test07948() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07948");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0L;
        strKafkaSpoutConfig0.pollTimeoutMs = (short) -1;
        int int7 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int8 = strKafkaSpoutConfig0.maxRetries;
        long long9 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap10);
    }

    @Test
    public void test07949() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07949");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strKafkaSpoutConfig0.keyDesClazz;
        long long18 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str20 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator21 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        strBuilder30.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder30.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder36.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder36.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setMaxPollRecords((int) ' ');
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList46);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass49 = strBuilder48.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription50 = strBuilder48.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder48.setMaxRetries((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder48.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int58 = strKafkaSpoutConfig57.getMaxTupleRetries();
        strKafkaSpoutConfig57.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = strKafkaSpoutConfig57.keyDes;
        int int62 = strKafkaSpoutConfig57.maxUncommittedOffsets;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        strBuilder68.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder68.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder68.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService74 = null;
        strBuilder73.retryService = kafkaSpoutRetryService74;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = strBuilder73.kafkaProps;
        strKafkaSpoutConfig57.kafkaProps = strMap76;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap76);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder56.setProp(strMap79);
        strBuilder42.kafkaProps = strMap79;
        strKafkaSpoutConfig0.kafkaProps = strMap79;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer83 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer83;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator85 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str20, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNull(firstPollOffsetStrategy24);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(wildcardClass49);
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer61);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNull(strRecordTranslator85);
    }

    @Test
    public void test07950() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07950");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer22, strSerializableDeserializer23, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer19, strSerializableDeserializer20, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer15, strRecordTranslatorSerializableDeserializer16, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer12, strComparableSerializableDeserializer13, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer9, strMapSerializableDeserializer10, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String> typeBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer1, strSerializableDeserializer2, strArray27);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test07951() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07951");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder5.setMaxPartitionFectchBytes(32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig26 = strBuilder5.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder5.setPollTimeoutMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test07952() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07952");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator16 = strBuilder15.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder5.setRecordTranslator(strRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder17.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.Subscription subscription22 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.Subscription subscription23 = null;
        strBuilder17.subscription = subscription23;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder17.setPartitionRefreshPeriodMs(0L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder26.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription31 = strBuilder30.subscription;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strBuilder38.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder38.setPartitionRefreshPeriodMs((long) 1);
        int int44 = strBuilder43.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder43.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder43.setSecurityProtocol("hi!");
        long long51 = strBuilder50.pollTimeoutMs;
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder50.subscription;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer53 = strBuilder50.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder50.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder30.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) wildcardClass54);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strRecordTranslator16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNull(subscription31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
// flaky:         org.junit.Assert.assertTrue("'" + long51 + "' != '" + 32L + "'", long51 == 32L);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNull(strSerializableDeserializer53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strBuilder55);
    }

    @Test
    public void test07953() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07953");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList15);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = null;
        strBuilder28.retryService = kafkaSpoutRetryService29;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator32 = strBuilder28.translator;
        strBuilder17.translator = strRecordTranslator32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig34.maxRetries = (short) 1;
        long long37 = strKafkaSpoutConfig34.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strKafkaSpoutConfig34.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = strKafkaSpoutConfig34.firstPollOffsetStrategy;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass46 = strBuilder45.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder45.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        strBuilder54.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder45.setProp(strMap57);
        long long59 = strBuilder45.pollTimeoutMs;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass66 = strBuilder65.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder65.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder45.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator76 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder75.setRecordTranslator(strRecordTranslator76);
        strBuilder75.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strBuilder75.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder69.setProp(strMap80);
        strKafkaSpoutConfig34.kafkaProps = strMap80;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder17.setProp(strMap80);
        strKafkaSpoutConfig0.kafkaProps = strMap80;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator85 = strKafkaSpoutConfig0.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer86 = strKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str87 = strKafkaSpoutConfig0.toString();
        int int88 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strRecordTranslator32);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNull(strMap38);
        org.junit.Assert.assertNull(firstPollOffsetStrategy39);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strBuilder58);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 32L + "'", long59 == 32L);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(wildcardClass66);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(strRecordTranslator85);
        org.junit.Assert.assertNull(objDeserializer86);
        org.junit.Assert.assertEquals("'" + str87 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str87, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int88 + "' != '" + 0 + "'", int88 == 0);
    }

    @Test
    public void test07954() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07954");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer11, strCollectionSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer8, strListSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = strBuilder25.keyDes;
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNull(strSerializableDeserializer26);
    }

    @Test
    public void test07955() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07955");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder10.retryService = kafkaSpoutRetryService11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        strBuilder10.valueDes = strSerializableDeserializer14;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder10.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder10.setBootstrapServers("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder10.maxRetries = (short) 0;
        strBuilder10.offsetCommitPeriodMs = 52L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = strBuilder10.valueDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNull(strSerializableDeserializer25);
    }

    @Test
    public void test07956() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07956");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder17.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder26.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setBootstrapServers("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strBuilder31.keyDes;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
    }

    @Test
    public void test07957() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07957");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strBuilder5.keyDes;
        int int9 = strBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.Subscription subscription10 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder14.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = strBuilder14.valueDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(strSerializableDeserializer18);
    }

    @Test
    public void test07958() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07958");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test07959() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07959");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer7;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 0L;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
    }

    @Test
    public void test07960() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07960");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder(",KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test07961() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07961");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.pollTimeoutMs = 100L;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer12, strSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder25.partitionRefreshPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = strBuilder25.retryService;
        strBuilder25.partitionRefreshPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strBuilder25.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        int int33 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int34 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy3);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test07962() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07962");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        int int16 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder11.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder18.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setGroupId("");
        strBuilder23.maxRetries = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setMaxPollRecords((int) '#');
        int int28 = strBuilder23.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator30 = strKafkaSpoutConfig29.translator;
        long long31 = strKafkaSpoutConfig29.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strKafkaSpoutConfig29.getKafkaProps();
        strKafkaSpoutConfig29.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = strKafkaSpoutConfig29.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.Subscription subscription39 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer37, strSerializableDeserializer38, subscription39);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc41 = null;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder40.setRecordTranslator(strConsumerRecordFunc41, fields42, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer46, strSerializableDeserializer47, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder53.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strBuilder61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder61.setPartitionRefreshPeriodMs((long) 1);
        int int67 = strBuilder66.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder66.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig72 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int73 = strKafkaSpoutConfig72.getMaxTupleRetries();
        strKafkaSpoutConfig72.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService76 = strKafkaSpoutConfig72.retryService;
        java.lang.String[] strArray79 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList80 = new java.util.ArrayList<java.lang.String>();
        boolean boolean81 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList80, strArray79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList80);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass83 = strBuilder82.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy84 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder82.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        strKafkaSpoutConfig72.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder66.setFirstPollOffsetStrategy(firstPollOffsetStrategy84);
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        strKafkaSpoutConfig29.firstPollOffsetStrategy = firstPollOffsetStrategy84;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder23.setFirstPollOffsetStrategy(firstPollOffsetStrategy84);
        java.util.Map<java.lang.String, java.lang.Object> strMap92 = strBuilder91.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig93 = strBuilder91.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
        org.junit.Assert.assertNull(strRecordTranslator30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertNull(firstPollOffsetStrategy35);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService76);
        org.junit.Assert.assertNotNull(strArray79);
        org.junit.Assert.assertTrue("'" + boolean81 + "' != '" + true + "'", boolean81 == true);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy84 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy84.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strMap92);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig93);
    }

    @Test
    public void test07963() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07963");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = strBuilder8.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setOffsetCommitPeriodMs((long) (short) 10);
        long long14 = strBuilder13.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int16 = strKafkaSpoutConfig15.getMaxTupleRetries();
        strKafkaSpoutConfig15.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = strKafkaSpoutConfig15.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer20 = null;
        strKafkaSpoutConfig15.valueDes = objSerializableDeserializer20;
        org.apache.storm.kafka.spout.Subscription subscription22 = strKafkaSpoutConfig15.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strKafkaSpoutConfig15.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int25 = strKafkaSpoutConfig24.getMaxTupleRetries();
        strKafkaSpoutConfig24.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = strKafkaSpoutConfig24.keyDes;
        int int29 = strKafkaSpoutConfig24.maxUncommittedOffsets;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        strBuilder35.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strBuilder35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder35.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = null;
        strBuilder40.retryService = kafkaSpoutRetryService41;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = strBuilder40.kafkaProps;
        strKafkaSpoutConfig24.kafkaProps = strMap43;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = strKafkaSpoutConfig24.getKafkaProps();
        boolean boolean46 = strKafkaSpoutConfig24.isConsumerAutoCommitMode();
        long long47 = strKafkaSpoutConfig24.getPollTimeoutMs();
        java.lang.String[] strArray51 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder52.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService55 = strBuilder54.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer60 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = null;
        java.lang.String[] strArray65 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer60, strSerializableDeserializer61, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer57, strSerializableDeserializer58, strArray65);
        strBuilder68.offsetCommitPeriodMs = 52;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder68.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder54.setProp(strMap71);
        strKafkaSpoutConfig24.kafkaProps = strMap71;
        strKafkaSpoutConfig15.kafkaProps = strMap71;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder13.setProp(strMap71);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator76 = strBuilder75.translator;
        java.lang.Class<?> wildcardClass77 = strBuilder75.getClass();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strRecordTranslator11);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer19);
        org.junit.Assert.assertNull(subscription22);
        org.junit.Assert.assertNull(strMap23);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer28);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService55);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strRecordTranslator76);
        org.junit.Assert.assertNotNull(wildcardClass77);
    }

    @Test
    public void test07964() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07964");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 0L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap20);
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap21);
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(strSerializableDeserializer19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strMap22);
    }

    @Test
    public void test07965() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07965");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setRecordTranslator(strConsumerRecordFunc7, fields8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long11 = strBuilder5.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder5.valueDesClazz;
        long long13 = strBuilder5.pollTimeoutMs;
        int int14 = strBuilder5.maxUncommittedOffsets;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass22 = strBuilder21.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc23 = null;
        org.apache.storm.tuple.Fields fields24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setRecordTranslator(strConsumerRecordFunc23, fields24, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long27 = strBuilder21.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder21.valueDesClazz;
        long long29 = strBuilder21.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder21.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.Subscription subscription32 = strBuilder31.subscription;
        org.apache.storm.kafka.spout.Subscription subscription33 = null;
        strBuilder31.subscription = subscription33;
        strBuilder31.maxUncommittedOffsets = 2147483647;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder31.setSecurityProtocol("");
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder31.kafkaProps;
        int int40 = strBuilder31.maxUncommittedOffsets;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        strBuilder46.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strBuilder46.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder46.setPartitionRefreshPeriodMs((long) 1);
        int int52 = strBuilder51.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder51.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder51.setSecurityProtocol("hi!");
        long long59 = strBuilder58.pollTimeoutMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator60 = strBuilder58.translator;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator60, fields61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder31);
        int int64 = strBuilder63.maxRetries;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 10 + "'", int14 == 10);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(wildcardClass22);
        org.junit.Assert.assertNotNull(strBuilder26);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 32L + "'", long27 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass28);
// flaky:         org.junit.Assert.assertTrue("'" + long29 + "' != '" + 32L + "'", long29 == 32L);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 2147483647 + "'", int40 == 2147483647);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + (-1) + "'", int52 == (-1));
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
// flaky:         org.junit.Assert.assertTrue("'" + long59 + "' != '" + 32L + "'", long59 == 32L);
        org.junit.Assert.assertNotNull(strRecordTranslator60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder63);
// flaky:         org.junit.Assert.assertTrue("'" + int64 + "' != '" + 10 + "'", int64 == 10);
    }

    @Test
    public void test07966() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07966");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = strKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = strKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.maxRetries = ' ';
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer83 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(kafkaSpoutRetryService77);
        org.junit.Assert.assertNull(kafkaSpoutRetryService78);
        org.junit.Assert.assertNull(strMap79);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(strDeserializer83);
    }

    @Test
    public void test07967() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07967");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        int int27 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long28 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long30 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long31 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        long long32 = strKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str33 = strKafkaSpoutConfig0.toString();
        int int34 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        long long54 = strBuilder40.pollTimeoutMs;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass61 = strBuilder60.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        strBuilder69.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = strBuilder69.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder60.setProp(strMap72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder73.firstPollOffsetStrategy = firstPollOffsetStrategy74;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder40.setFirstPollOffsetStrategy(firstPollOffsetStrategy74);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy74;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertEquals("'" + str33 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}" + "'", str33, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
// flaky:         org.junit.Assert.assertTrue("'" + long54 + "' != '" + 32L + "'", long54 == 32L);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test07968() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07968");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07969() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07969");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass77 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strKafkaSpoutConfig0.kafkaProps;
        int int81 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator82 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator82;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(wildcardClass77);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
    }

    @Test
    public void test07970() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07970");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer19 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer18, strArraySerializableDeserializer19, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer15, strArraySerializableDeserializer16, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList24);
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription42 = strBuilder40.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy43;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = strBuilder40.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = strBuilder40.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int48 = strKafkaSpoutConfig47.getMaxTupleRetries();
        strKafkaSpoutConfig47.maxRetries = 1;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder56.kafkaProps;
        strKafkaSpoutConfig47.kafkaProps = strMap57;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = strKafkaSpoutConfig47.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = strKafkaSpoutConfig47.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap60);
        strBuilder40.kafkaProps = strMap61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder34.setProp(strMap61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder63.setMaxPartitionFectchBytes(10);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertNotNull(subscription42);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy43 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy43.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(strSerializableDeserializer45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test07971() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07971");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass7 = strBuilder5.valueDesClazz;
        strBuilder5.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig10 = strBuilder5.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = strBuilder5.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setBootstrapServers("");
        java.lang.String[] strArray17 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList18);
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        strBuilder35.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strBuilder35.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder26.setProp(strMap38);
        long long40 = strBuilder26.pollTimeoutMs;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass47 = strBuilder46.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder46.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder26.setFirstPollOffsetStrategy(firstPollOffsetStrategy48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig51 = strBuilder26.build();
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        strBuilder57.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = strBuilder57.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder57.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass63 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder57.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator66 = strBuilder57.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder26.setRecordTranslator(strRecordTranslator66);
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder20.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator66, fields68, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder13.setRecordTranslator(strRecordTranslator66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder13.setMaxRetries((int) '#');
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass74 = strBuilder13.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig10);
        org.junit.Assert.assertNull(strSerializableDeserializer11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strBuilder39);
// flaky:         org.junit.Assert.assertTrue("'" + long40 + "' != '" + 32L + "'", long40 == 32L);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strRecordTranslator66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test07972() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07972");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        strBuilder4.keyDes = strSerializableDeserializer5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strBuilder4.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder4.setMaxRetries(0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder4.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder4.setMaxRetries((int) (byte) 10);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test07973() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07973");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.Subscription subscription6 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator7;
        int int9 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(subscription6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test07974() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07974");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray13);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        strBuilder23.keyDes = strSerializableDeserializer24;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder17.setProp(strMap26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = strBuilder17.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.Subscription subscription29 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription29);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription29);
    }

    @Test
    public void test07975() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07975");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strBuilder2.valueDes;
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
    }

    @Test
    public void test07976() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07976");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        java.lang.String str77 = strKafkaSpoutConfig0.toString();
        java.lang.String str78 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 100;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
    }

    @Test
    public void test07977() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07977");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 35;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy3);
    }

    @Test
    public void test07978() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07978");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setFetchMinBytes(0);
        strBuilder11.maxUncommittedOffsets = 1;
        strBuilder11.maxUncommittedOffsets = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = strBuilder11.firstPollOffsetStrategy;
        strBuilder11.offsetCommitPeriodMs = 97L;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07979() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07979");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription18 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test07980() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07980");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig3.translator;
        long long5 = strKafkaSpoutConfig3.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig3.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig3.keyDes;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setRecordTranslator(strRecordTranslator14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setBootstrapServers("");
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator24 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setRecordTranslator(strRecordTranslator24);
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc33 = null;
        org.apache.storm.tuple.Fields fields34 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setRecordTranslator(strConsumerRecordFunc33, fields34, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription37 = strBuilder36.subscription;
        strBuilder25.subscription = subscription37;
        strBuilder17.subscription = subscription37;
        strKafkaSpoutConfig3.subscription = subscription37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setMaxUncommittedOffsets((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig44.maxRetries = (short) 1;
        long long47 = strKafkaSpoutConfig44.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strKafkaSpoutConfig44.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = strKafkaSpoutConfig44.firstPollOffsetStrategy;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass56 = strBuilder55.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder55.firstPollOffsetStrategy = firstPollOffsetStrategy57;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList62);
        strBuilder64.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = strBuilder64.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder55.setProp(strMap67);
        long long69 = strBuilder55.pollTimeoutMs;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass76 = strBuilder75.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder75.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy77);
        java.lang.String[] strArray82 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList83 = new java.util.ArrayList<java.lang.String>();
        boolean boolean84 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList83, strArray82);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList83);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator86 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder85.setRecordTranslator(strRecordTranslator86);
        strBuilder85.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap90 = strBuilder85.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder79.setProp(strMap90);
        strKafkaSpoutConfig44.kafkaProps = strMap90;
        long long93 = strKafkaSpoutConfig44.getPartitionRefreshPeriodMs();
        int int94 = strKafkaSpoutConfig44.maxRetries;
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = strKafkaSpoutConfig44.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder41.setProp(strMap95);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNull(strMap48);
        org.junit.Assert.assertNull(firstPollOffsetStrategy49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy57 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy57.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strBuilder68);
// flaky:         org.junit.Assert.assertTrue("'" + long69 + "' != '" + 32L + "'", long69 == 32L);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strArray82);
        org.junit.Assert.assertTrue("'" + boolean84 + "' != '" + true + "'", boolean84 == true);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strMap90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 0L + "'", long93 == 0L);
        org.junit.Assert.assertTrue("'" + int94 + "' != '" + 1 + "'", int94 == 1);
        org.junit.Assert.assertNotNull(strMap95);
        org.junit.Assert.assertNotNull(strBuilder96);
    }

    @Test
    public void test07981() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07981");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
    }

    @Test
    public void test07982() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07982");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={bootstrap/servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test07983() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07983");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strKafkaSpoutConfig0.getKafkaProps();
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass4 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = strBuilder23.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap24;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer30;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(objSerializableDeserializer26);
        org.junit.Assert.assertNull(strSerializableDeserializer27);
    }

    @Test
    public void test07984() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07984");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setPartitionRefreshPeriodMs((long) 1);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder29.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription37 = strBuilder36.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer17, strSerializableDeserializer18, subscription37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String> strListBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer14, strSerializableDeserializer15, subscription37);
        java.lang.String str40 = subscription37.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer11, strSerializableDeserializer12, subscription37);
        strKafkaSpoutConfig0.subscription = subscription37;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator43 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator43;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator45 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(subscription37);
        org.junit.Assert.assertEquals("'" + str40 + "' != '" + "" + "'", str40, "");
        org.junit.Assert.assertNull(strRecordTranslator45);
    }

    @Test
    public void test07985() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07985");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setFetchMinBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setOffsetCommitPeriodMs((long) (byte) 0);
        strBuilder11.maxRetries = (short) 100;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test07986() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07986");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strBuilder5.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setMaxPartitionFectchBytes((int) '#');
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator13 = strBuilder12.translator;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder25.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder25.setMaxPollRecords(100);
        long long30 = strBuilder25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder25.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setSecurityProtocol("");
        strBuilder33.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder33.setMaxUncommittedOffsets((int) (byte) 100);
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass48 = strBuilder47.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc49 = null;
        org.apache.storm.tuple.Fields fields50 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setRecordTranslator(strConsumerRecordFunc49, fields50, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long53 = strBuilder47.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder47.valueDesClazz;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder60.setRecordTranslator(strRecordTranslator61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder60.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = strBuilder60.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder47.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        strBuilder41.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        strBuilder12.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer69 = null;
        strBuilder12.valueDes = strSerializableDeserializer69;
        strBuilder12.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService73 = null;
        strBuilder12.retryService = kafkaSpoutRetryService73;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strRecordTranslator13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + long30 + "' != '" + 2147483647L + "'", long30 == 2147483647L);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertNotNull(strBuilder52);
// flaky:         org.junit.Assert.assertTrue("'" + long53 + "' != '" + 32L + "'", long53 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test07987() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07987");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc7 = null;
        org.apache.storm.tuple.Fields fields8 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setRecordTranslator(strConsumerRecordFunc7, fields8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long11 = strBuilder5.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder5.valueDesClazz;
        long long13 = strBuilder5.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder5.setMaxPartitionFectchBytes((int) (short) 100);
        org.apache.storm.kafka.spout.Subscription subscription16 = strBuilder15.subscription;
        org.apache.storm.kafka.spout.Subscription subscription17 = null;
        strBuilder15.subscription = subscription17;
        strBuilder15.maxUncommittedOffsets = 2147483647;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder15.setSecurityProtocol("");
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder15.kafkaProps;
        int int24 = strBuilder15.maxUncommittedOffsets;
        long long25 = strBuilder15.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass12);
// flaky:         org.junit.Assert.assertTrue("'" + long13 + "' != '" + 32L + "'", long13 == 32L);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 2147483647 + "'", int24 == 2147483647);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 2147483647L + "'", long25 == 2147483647L);
    }

    @Test
    public void test07988() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07988");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer6, strSerializableDeserializer7, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer3, charSequenceSerializableDeserializer4, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int19 = strKafkaSpoutConfig18.getMaxTupleRetries();
        strKafkaSpoutConfig18.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = strKafkaSpoutConfig18.keyDes;
        int int23 = strKafkaSpoutConfig18.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer26 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        int int33 = strBuilder32.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder32.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.Subscription> strMapBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer25, subscriptionSerializableDeserializer26, subscription34);
        strKafkaSpoutConfig18.subscription = subscription34;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        strKafkaSpoutConfig18.keyDes = strSerializableDeserializer37;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator39 = strKafkaSpoutConfig18.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder16.setProp(",KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strKafkaSpoutConfig18);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
// flaky:         org.junit.Assert.assertTrue("'" + int33 + "' != '" + 10 + "'", int33 == 10);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNull(strRecordTranslator39);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test07989() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07989");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.maxRetries = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer11;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator13;
        long long15 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.Subscription subscription16 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription17 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(subscription16);
        org.junit.Assert.assertNull(subscription17);
        org.junit.Assert.assertNull(strRecordTranslator18);
        org.junit.Assert.assertNull(kafkaSpoutRetryService19);
    }

    @Test
    public void test07990() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07990");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray13);
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass25 = strBuilder24.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        strBuilder33.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = strBuilder33.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder24.setProp(strMap36);
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strBuilder24.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap38);
        strBuilder18.kafkaProps = strMap39;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer41 = null;
        strBuilder18.valueDes = strSerializableDeserializer41;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer43 = strBuilder18.keyDes;
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNull(strSerializableDeserializer43);
    }

    @Test
    public void test07991() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07991");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setRetry(kafkaSpoutRetryService16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test07992() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07992");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = strBuilder15.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder15.setPartitionRefreshPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig19.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        strKafkaSpoutConfig19.retryService = kafkaSpoutRetryService22;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setPartitionRefreshPeriodMs((long) 1);
        int int35 = strBuilder34.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int41 = strKafkaSpoutConfig40.getMaxTupleRetries();
        strKafkaSpoutConfig40.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = strKafkaSpoutConfig40.retryService;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass51 = strBuilder50.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        strKafkaSpoutConfig40.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        strKafkaSpoutConfig19.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        long long57 = strKafkaSpoutConfig19.pollTimeoutMs;
        long long58 = strKafkaSpoutConfig19.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer59 = strKafkaSpoutConfig19.valueDes;
        strKafkaSpoutConfig19.partitionRefreshPeriodMs = 2147483647;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = strKafkaSpoutConfig19.getFirstPollOffsetStrategy();
        strBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder15.setMaxUncommittedOffsets((int) 'a');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer59);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test07993() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07993");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer8, strIterableSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = strBuilder21.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test07994() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07994");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        strBuilder5.pollTimeoutMs = 100;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setMaxPollRecords(0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass14 = strBuilder13.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test07995() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07995");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        long long6 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        int int9 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 35 + "'", int9 == 35);
        org.junit.Assert.assertNull(strRecordTranslator10);
    }

    @Test
    public void test07996() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07996");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.Subscription subscription10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setRecordTranslator(strConsumerRecordFunc12, fields13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer17, strSerializableDeserializer18, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder32.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setPartitionRefreshPeriodMs((long) 1);
        int int38 = strBuilder37.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        strKafkaSpoutConfig43.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = strKafkaSpoutConfig43.retryService;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.Subscription subscription62 = strKafkaSpoutConfig0.subscription;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer63 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long64 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long65 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(subscription62);
        org.junit.Assert.assertNull(strDeserializer63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNull(strMap66);
    }

    @Test
    public void test07997() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07997");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        int int16 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder11.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder18.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setGroupId("");
        strBuilder23.maxRetries = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setMaxPollRecords((int) '#');
        int int28 = strBuilder23.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder23.setPartitionRefreshPeriodMs((long) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder30.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription33 = strBuilder30.subscription;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(subscription33);
    }

    @Test
    public void test07998() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07998");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        strBuilder16.keyDes = strSerializableDeserializer17;
        long long19 = strBuilder16.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        strBuilder30.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder30.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setPartitionRefreshPeriodMs((long) 1);
        int int36 = strBuilder35.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder35.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder35.setSecurityProtocol("hi!");
        java.lang.String[] strArray45 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList46 = new java.util.ArrayList<java.lang.String>();
        boolean boolean47 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList46, strArray45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList46);
        strBuilder48.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder48.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass63 = strBuilder62.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder62.firstPollOffsetStrategy = firstPollOffsetStrategy64;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        strBuilder71.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = strBuilder71.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder62.setProp(strMap74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder54.setProp(strMap74);
        org.apache.storm.kafka.spout.Subscription subscription77 = strBuilder54.subscription;
        strBuilder42.subscription = subscription77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer23, strSerializableDeserializer24, subscription77);
        strBuilder16.subscription = subscription77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer9, strSerializableDeserializer10, subscription77);
        strBuilder5.subscription = subscription77;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass83 = strBuilder5.valueDesClazz;
        strBuilder5.maxRetries = (short) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder5.setMaxRetries((int) (short) 100);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 32L + "'", long19 == 32L);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + (-1) + "'", int36 == (-1));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray45);
        org.junit.Assert.assertTrue("'" + boolean47 + "' != '" + true + "'", boolean47 == true);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(wildcardClass63);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy64 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy64.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertNotNull(wildcardClass83);
        org.junit.Assert.assertNotNull(strBuilder87);
    }

    @Test
    public void test07999() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test07999");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        long long9 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int10 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
    }

    @Test
    public void test08000() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest15.test08000");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strBuilder8.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription10 = strBuilder8.subscription;
        org.apache.storm.kafka.spout.Subscription subscription11 = strBuilder8.subscription;
        java.lang.String str12 = subscription11.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setPollTimeoutMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService16 = strBuilder15.retryService;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "" + "'", str12, "");
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService16);
    }
}
