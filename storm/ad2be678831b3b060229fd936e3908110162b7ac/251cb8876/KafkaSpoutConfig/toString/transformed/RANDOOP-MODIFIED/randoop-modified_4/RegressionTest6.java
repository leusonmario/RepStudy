import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest6 {

    public static boolean debug = false;

    @Test
    public void test03001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03001");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator9;
        long long11 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer13 = strKafkaSpoutConfig0.getValueDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str14 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(objDeserializer13);
    }

    @Test
    public void test03002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03002");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strCollectionKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>();
    }

    @Test
    public void test03003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03003");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> charSequenceBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>();
    }

    @Test
    public void test03004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03004");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder23.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        strBuilder46.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strBuilder46.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder37.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder29.setProp(strMap49);
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder29.subscription;
        strBuilder17.subscription = subscription52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder17.setPartitionRefreshPeriodMs((long) (byte) 100);
        strBuilder17.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.Subscription subscription58 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder17.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder60.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(subscription52);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test03005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03005");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig6.translator;
        long long8 = strKafkaSpoutConfig6.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig6.kafkaProps;
        java.lang.String str10 = strKafkaSpoutConfig6.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = null;
        strKafkaSpoutConfig6.translator = strRecordTranslator11;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer13 = strKafkaSpoutConfig6.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService14 = null;
        strKafkaSpoutConfig6.retryService = kafkaSpoutRetryService14;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator16 = strKafkaSpoutConfig6.getTranslator();
        long long17 = strKafkaSpoutConfig6.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder4.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", (java.lang.Object) strKafkaSpoutConfig6);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer13);
        org.junit.Assert.assertNull(strRecordTranslator16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test03006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03006");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer11, strListSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer5, strKafkaSpoutConfigSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Iterable<java.lang.String>> randomAccessBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer1, strIterableSerializableDeserializer2, strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder18);
    }

    @Test
    public void test03007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03007");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.AnnotatedElement> strMapKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.lang.reflect.AnnotatedElement>();
    }

    @Test
    public void test03008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03008");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03009");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.serialVersionUID = 52;
    }

    @Test
    public void test03010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03010");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strBuilder2.retryService;
        strBuilder2.offsetCommitPeriodMs = 0L;
        org.junit.Assert.assertNotNull(strBuilder2);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService3);
    }

    @Test
    public void test03011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03011");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03012");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc10 = null;
        org.apache.storm.tuple.Fields fields11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder9.setRecordTranslator(strConsumerRecordFunc10, fields11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        int int15 = strBuilder14.maxRetries;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
    }

    @Test
    public void test03013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03013");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        strBuilder31.maxUncommittedOffsets = '4';
        int int36 = strBuilder31.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder31.setPollTimeoutMs(97L);
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass45 = strBuilder44.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription46 = strBuilder44.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder44.setMaxRetries((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer52 = null;
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass59 = strBuilder58.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc60 = null;
        org.apache.storm.tuple.Fields fields61 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder58.setRecordTranslator(strConsumerRecordFunc60, fields61, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription64 = strBuilder63.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer51, strListSerializableDeserializer52, subscription64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder44.setProp("hi!", (java.lang.Object) subscription64);
        java.util.regex.Pattern pattern68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern68);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator70 = strBuilder69.translator;
        org.apache.storm.tuple.Fields fields71 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder66.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator70, fields71);
        org.apache.storm.tuple.Fields fields73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator70, fields73, "");
        int int76 = strBuilder31.maxUncommittedOffsets;
        strBuilder31.maxRetries = 97;
        strBuilder31.pollTimeoutMs = (byte) 1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 52 + "'", int36 == 52);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertNotNull(subscription46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(wildcardClass59);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(subscription64);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strRecordTranslator70);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 52 + "'", int76 == 52);
    }

    @Test
    public void test03014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03014");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03015");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 100;
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int7 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test03016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03016");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer10;
        int int12 = strKafkaSpoutConfig0.getMaxTupleRetries();
        java.lang.String str13 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03017");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        int int11 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 35 + "'", int11 == 35);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
        org.junit.Assert.assertNull(strRecordTranslator13);
    }

    @Test
    public void test03018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03018");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass7 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 10L;
        java.lang.String str10 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(wildcardClass7);
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03019");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_MAX_UNCOMMITTED_OFFSETS = 10;
    }

    @Test
    public void test03020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03020");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
    }

    @Test
    public void test03021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03021");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        int int9 = strBuilder8.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription10 = strBuilder8.subscription;
        java.lang.String str11 = subscription10.getTopicsString();
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> strComparableBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>("", strComparableSerializableDeserializer1, firstPollOffsetStrategyEnumSerializableDeserializer2, subscription10);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "" + "'", str11, "");
    }

    @Test
    public void test03022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03022");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxUncommittedOffsets((int) (short) -1);
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strBuilder14.kafkaProps;
        java.lang.Class<?> wildcardClass16 = strBuilder14.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test03023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03023");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strBuilder12.keyDes;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        strBuilder19.keyDes = strSerializableDeserializer20;
        long long22 = strBuilder19.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder19.setRecordTranslator(strRecordTranslator25);
        int int27 = strBuilder26.maxUncommittedOffsets;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder33.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder33.setFetchMinBytes((int) (byte) 0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass37 = strBuilder33.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator40 = strBuilder39.translator;
        org.apache.storm.tuple.Fields fields41 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder26.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator40, fields41);
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder12.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator40, fields43);
        strBuilder12.maxRetries = 32;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
// flaky:         org.junit.Assert.assertTrue("'" + long22 + "' != '" + 32L + "'", long22 == 32L);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strRecordTranslator40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
    }

    @Test
    public void test03024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03024");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder11.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy13;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder11.setProp(strMap23);
        long long25 = strBuilder11.pollTimeoutMs;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        java.lang.String[] strArray38 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList39);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setRecordTranslator(strRecordTranslator42);
        strBuilder41.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strBuilder41.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder35.setProp(strMap46);
        strKafkaSpoutConfig0.kafkaProps = strMap46;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator49 = strKafkaSpoutConfig0.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer50 = strKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str51 = strKafkaSpoutConfig0.getConsumerGroupId();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy13 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy13.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder24);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 100L + "'", long25 == 100L);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNull(strRecordTranslator49);
        org.junit.Assert.assertNull(objDeserializer50);
        org.junit.Assert.assertNull(str51);
    }

    @Test
    public void test03025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03025");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer5);
    }

    @Test
    public void test03026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03026");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        java.lang.String str3 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy4 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(strRecordTranslator6);
    }

    @Test
    public void test03027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03027");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type> firstPollOffsetStrategyBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.reflect.Type>("", firstPollOffsetStrategySerializableDeserializer1, typeSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test03028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03028");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = strBuilder8.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setOffsetCommitPeriodMs((long) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder8.setMaxPollRecords(52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig16 = strBuilder15.build();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strRecordTranslator11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig16);
    }

    @Test
    public void test03029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03029");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.maxUncommittedOffsets = '#';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        long long9 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.Subscription subscription11 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(subscription11);
    }

    @Test
    public void test03030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03030");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        strBuilder12.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strBuilder12.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder12.setPartitionRefreshPeriodMs((long) 1);
        int int18 = strBuilder17.maxRetries;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass25 = strBuilder24.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy26;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        strBuilder33.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap36 = strBuilder33.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder24.setProp(strMap36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        strBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        java.lang.String str42 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator43 = strKafkaSpoutConfig0.getTranslator();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer44 = strKafkaSpoutConfig0.getValueDeserializer();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy26 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy26.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMap36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertEquals("'" + str42 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}" + "'", str42, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator43);
        org.junit.Assert.assertNull(objDeserializer44);
    }

    @Test
    public void test03031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03031");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setSecurityProtocol("hi!");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder26.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder32.setProp(strMap52);
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder32.subscription;
        strBuilder20.subscription = subscription55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder20.setPartitionRefreshPeriodMs((long) (byte) 100);
        strBuilder20.pollTimeoutMs = (short) -1;
        org.apache.storm.kafka.spout.Subscription subscription61 = strBuilder20.subscription;
        subscription61.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.lang.Object> strRecordTranslatorBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.lang.Object>("hi!", strRecordTranslatorSerializableDeserializer1, objSerializableDeserializer2, subscription61);
        subscription61.refreshAssignment();
        java.lang.String str65 = subscription61.getTopicsString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertEquals("'" + str65 + "' != '" + "" + "'", str65, "");
    }

    @Test
    public void test03032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03032");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer9;
        long long11 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long12 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        long long13 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test03033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03033");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.List<java.lang.String>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.List<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03034");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setSecurityProtocol("");
        strBuilder19.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = strBuilder19.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder19.setMaxPollRecords(10);
        long long27 = strBuilder26.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(strSerializableDeserializer24);
        org.junit.Assert.assertNotNull(strBuilder26);
// flaky:         org.junit.Assert.assertTrue("'" + long27 + "' != '" + 32L + "'", long27 == 32L);
    }

    @Test
    public void test03035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03035");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder17.maxUncommittedOffsets = 2147483647;
        strBuilder17.partitionRefreshPeriodMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        strBuilder17.retryService = kafkaSpoutRetryService22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder17.setPartitionRefreshPeriodMs((long) (short) 100);
        int int26 = strBuilder25.maxRetries;
        java.util.Properties properties27 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder25.setProp(properties27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
    }

    @Test
    public void test03036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03036");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        long long11 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        int int12 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
    }

    @Test
    public void test03037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03037");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        long long4 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription5 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(subscription5);
    }

    @Test
    public void test03038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03038");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList6);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test03039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03039");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer16, strListSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray19);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test03040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03040");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strComparableBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer4, strCollectionSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>> strArrayBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer1, strCollectionSerializableDeserializer2, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.util.AbstractCollection<java.lang.String>> strArrayKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.util.AbstractCollection<java.lang.String>>(strArrayBuilder12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.util.AbstractCollection<java.lang.String>> strArrayKafkaSpoutConfig14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.util.AbstractCollection<java.lang.String>>(strArrayBuilder12);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
    }

    @Test
    public void test03041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03041");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer3, strSerializableDeserializer4, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList8);
        long long14 = strBuilder13.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder13.setFetchMinBytes(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = strBuilder16.keyDes;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(strSerializableDeserializer17);
    }

    @Test
    public void test03042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03042");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig9.maxRetries = (short) 1;
        long long12 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.lang.String str13 = strKafkaSpoutConfig9.toString();
        int int14 = strKafkaSpoutConfig9.getMaxTupleRetries();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        int int26 = strBuilder25.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder25.setSecurityProtocol("hi!");
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder38.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass53 = strBuilder52.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strBuilder61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder52.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder44.setProp(strMap64);
        org.apache.storm.kafka.spout.Subscription subscription67 = strBuilder44.subscription;
        strBuilder32.subscription = subscription67;
        subscription67.refreshAssignment();
        strKafkaSpoutConfig9.subscription = subscription67;
        strBuilder5.subscription = subscription67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder5.setFetchMinBytes(52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder73.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(subscription67);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test03043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03043");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer15 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer14, strArraySerializableDeserializer15, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        strBuilder28.valueDes = strSerializableDeserializer29;
        org.apache.storm.kafka.spout.Subscription subscription31 = strBuilder28.subscription;
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(subscription31);
    }

    @Test
    public void test03044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03044");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int29 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long30 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test03045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03045");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription18 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder17.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder17.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder26.setMaxUncommittedOffsets(35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder28.setOffsetCommitPeriodMs((long) '4');
        long long31 = strBuilder30.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 52L + "'", long31 == 52L);
    }

    @Test
    public void test03046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03046");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03047");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder17.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService24);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder10.setGroupId("");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass30 = strBuilder29.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(wildcardClass30);
    }

    @Test
    public void test03048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03048");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strBuilder5.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder5.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy8 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy8.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test03049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03049");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", pattern1);
        org.junit.Assert.assertNotNull(strBuilder2);
    }

    @Test
    public void test03050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03050");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        long long2 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription3 = strKafkaSpoutConfig0.getSubscription();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(subscription3);
    }

    @Test
    public void test03051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03051");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03052");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder23.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder23.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService36 = null;
        strBuilder23.retryService = kafkaSpoutRetryService36;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test03053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03053");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setSecurityProtocol("");
        strBuilder19.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder19.setMaxUncommittedOffsets((int) (byte) 100);
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        strBuilder33.keyDes = strSerializableDeserializer34;
        long long36 = strBuilder33.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder33.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder33.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern42);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator44 = strBuilder43.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder33.setRecordTranslator(strRecordTranslator44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder45.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.Subscription subscription50 = strBuilder45.subscription;
        java.util.Map<java.lang.String, java.lang.Object> strMap51 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder19.setProp(strMap51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig53.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService56 = strKafkaSpoutConfig53.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = strKafkaSpoutConfig53.getRetryService();
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer64 = null;
        strBuilder63.keyDes = strSerializableDeserializer64;
        long long66 = strBuilder63.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder63.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder63.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern72);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator74 = strBuilder73.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder63.setRecordTranslator(strRecordTranslator74);
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = strBuilder75.kafkaProps;
        strKafkaSpoutConfig53.kafkaProps = strMap76;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder19.setProp(strMap76);
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap76);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strRecordTranslator44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(subscription50);
        org.junit.Assert.assertNotNull(strMap51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(kafkaSpoutRetryService56);
        org.junit.Assert.assertNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
// flaky:         org.junit.Assert.assertTrue("'" + long66 + "' != '" + 32L + "'", long66 == 32L);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strRecordTranslator74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMap79);
    }

    @Test
    public void test03054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03054");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strBuilder10.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder37.setMaxRetries((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test03055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03055");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.Class<?>> strBuilderKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.Class<?>>();
    }

    @Test
    public void test03056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03056");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Object> serializableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Object>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer8, objSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test03057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03057");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        strBuilder5.pollTimeoutMs = 100;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        strBuilder16.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setPartitionRefreshPeriodMs((long) 1);
        int int22 = strBuilder21.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder21.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        strBuilder28.keyDes = strSerializableDeserializer29;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder28.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder28.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        java.lang.String[] strArray42 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer37, strSerializableDeserializer38, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        strBuilder52.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder52.setPartitionRefreshPeriodMs((long) 1);
        int int58 = strBuilder57.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder57.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int64 = strKafkaSpoutConfig63.getMaxTupleRetries();
        strKafkaSpoutConfig63.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = strKafkaSpoutConfig63.retryService;
        java.lang.String[] strArray70 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList71 = new java.util.ArrayList<java.lang.String>();
        boolean boolean72 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList71, strArray70);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList71);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass74 = strBuilder73.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder73.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        strKafkaSpoutConfig63.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder57.setFirstPollOffsetStrategy(firstPollOffsetStrategy75);
        strBuilder44.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy75;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass81 = strBuilder35.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService67);
        org.junit.Assert.assertNotNull(strArray70);
        org.junit.Assert.assertTrue("'" + boolean72 + "' != '" + true + "'", boolean72 == true);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy75 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy75.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(wildcardClass81);
    }

    @Test
    public void test03058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03058");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        long long7 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long8 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test03059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03059");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        strBuilder9.pollTimeoutMs = 2147483647;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder9.setPartitionRefreshPeriodMs((long) (short) -1);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test03060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03060");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig0.keyDes;
        long long9 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test03061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03061");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.AbstractList<java.lang.String>> charSequenceBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", charSequenceSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03062");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        strBuilder11.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder11.setPartitionRefreshPeriodMs((long) 52);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer40 = strBuilder11.valueDes;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = null;
        strBuilder52.retryService = kafkaSpoutRetryService53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        org.apache.storm.kafka.spout.Subscription subscription59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer57, strSerializableDeserializer58, subscription59);
        strBuilder60.partitionRefreshPeriodMs = 0L;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass69 = strBuilder68.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder68.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        strBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        strBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        long long74 = strBuilder52.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder52.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder76.setMaxRetries((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder11.setProp("hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) (short) 10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNull(strSerializableDeserializer40);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
// flaky:         org.junit.Assert.assertTrue("'" + long74 + "' != '" + 32L + "'", long74 == 32L);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder79);
    }

    @Test
    public void test03063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03063");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        int int8 = strKafkaSpoutConfig0.maxRetries;
        int int9 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test03064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03064");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder9.setMaxPollRecords(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strBuilder9.keyDes;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
    }

    @Test
    public void test03065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03065");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setPartitionRefreshPeriodMs((long) (byte) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass14 = strBuilder13.valueDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strBuilder13.kafkaProps;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(strMap15);
    }

    @Test
    public void test03066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03066");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        long long10 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer11 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(objDeserializer11);
    }

    @Test
    public void test03067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03067");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer9;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str11 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03068");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03069");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = strBuilder6.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder6.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder9.maxUncommittedOffsets = (short) -1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder9.valueDes = strSerializableDeserializer12;
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test03070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03070");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder8.keyDes = strSerializableDeserializer9;
        long long11 = strBuilder8.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        strBuilder22.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strBuilder22.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setPartitionRefreshPeriodMs((long) 1);
        int int28 = strBuilder27.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder27.setSecurityProtocol("hi!");
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        strBuilder40.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder40.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder46.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass55 = strBuilder54.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder54.firstPollOffsetStrategy = firstPollOffsetStrategy56;
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        strBuilder63.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = strBuilder63.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder54.setProp(strMap66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder46.setProp(strMap66);
        org.apache.storm.kafka.spout.Subscription subscription69 = strBuilder46.subscription;
        strBuilder34.subscription = subscription69;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, subscription69);
        strBuilder8.subscription = subscription69;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder73.setOffsetCommitPeriodMs((long) (byte) 0);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(wildcardClass55);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy56 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy56.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(subscription69);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test03071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03071");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer6;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        long long9 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
    }

    @Test
    public void test03072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03072");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        strBuilder31.pollTimeoutMs = (byte) -1;
        strBuilder31.maxUncommittedOffsets = (short) -1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
    }

    @Test
    public void test03073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03073");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.io.Serializable> strCollectionBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractCollection<java.lang.String>, java.io.Serializable> strCollectionKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractCollection<java.lang.String>, java.io.Serializable>(strCollectionBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03074");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.util.Collection<java.lang.String>> strListKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.util.Collection<java.lang.String>>();
    }

    @Test
    public void test03075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03075");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder29.setMaxPollRecords(2147483647);
        long long34 = strBuilder33.partitionRefreshPeriodMs;
        java.util.regex.Pattern pattern37 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern37);
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass45 = strBuilder44.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder44.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        strBuilder53.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap56 = strBuilder53.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder44.setProp(strMap56);
        long long58 = strBuilder44.pollTimeoutMs;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList62);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass65 = strBuilder64.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder64.firstPollOffsetStrategy = firstPollOffsetStrategy66;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy66);
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList72);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator75 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder74.setRecordTranslator(strRecordTranslator75);
        strBuilder74.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap79 = strBuilder74.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder68.setProp(strMap79);
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap79);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder38.setProp(strMap79);
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = strBuilder82.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder33.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", (java.lang.Object) strMap83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder84.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer87 = strBuilder86.keyDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 32L + "'", long34 == 32L);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(wildcardClass45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strMap56);
        org.junit.Assert.assertNotNull(strBuilder57);
// flaky:         org.junit.Assert.assertTrue("'" + long58 + "' != '" + 100L + "'", long58 == 100L);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(wildcardClass65);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy66 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy66.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMap79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNull(strSerializableDeserializer87);
    }

    @Test
    public void test03076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03076");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder15.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass30 = strBuilder29.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap41 = strBuilder38.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder29.setProp(strMap41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder21.setProp(strMap41);
        org.apache.storm.kafka.spout.Subscription subscription44 = strBuilder21.subscription;
        java.lang.String str45 = subscription44.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription44);
        strKafkaSpoutConfig0.subscription = subscription44;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass48 = strKafkaSpoutConfig0.valueDesClazz;
        int int49 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strMap41);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(subscription44);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "" + "'", str45, "");
        org.junit.Assert.assertNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
    }

    @Test
    public void test03077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03077");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setPartitionRefreshPeriodMs((long) (short) 0);
        java.lang.String[] strArray9 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        strBuilder12.keyDes = strSerializableDeserializer13;
        long long15 = strBuilder12.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder12.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder12.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern21 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern21);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator23 = strBuilder22.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder12.setRecordTranslator(strRecordTranslator23);
        org.apache.storm.tuple.Fields fields25 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder4.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator23, fields25, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder4.kafkaProps;
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strRecordTranslator23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap28);
    }

    @Test
    public void test03078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03078");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.translator;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        strKafkaSpoutConfig0.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.maxRetries = 52;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator14 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator14;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test03079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03079");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.GenericDeclaration> strListBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test03080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03080");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer8 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer7, strListSerializableDeserializer8, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer1, strKafkaSpoutConfigSerializableDeserializer2, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListKafkaSpoutConfig14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>(strListBuilder13);
        org.junit.Assert.assertNotNull(strArray10);
    }

    @Test
    public void test03081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03081");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 2147483647;
        long long11 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.Class<?> wildcardClass12 = strKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03082");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "hi!", "hi!", "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.ArrayList<java.lang.String>> subscriptionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", subscriptionSerializableDeserializer4, strListSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test03083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03083");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer17, strSerializableDeserializer18, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer14, strSerializableDeserializer15, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer10, strRecordTranslatorSerializableDeserializer11, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer7, strComparableSerializableDeserializer8, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer4, strMapSerializableDeserializer5, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray22);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03084");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<?>> strMapKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<?>>();
    }

    @Test
    public void test03085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03085");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.translator;
        strKafkaSpoutConfig0.pollTimeoutMs = (byte) 1;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass16 = strBuilder15.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription17 = strBuilder15.subscription;
        java.lang.String str18 = subscription17.getTopicsString();
        strKafkaSpoutConfig0.subscription = subscription17;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(wildcardClass16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertEquals("'" + str18 + "' != '" + "" + "'", str18, "");
        org.junit.Assert.assertNull(strSerializableDeserializer20);
    }

    @Test
    public void test03086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03086");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxPartitionFectchBytes((int) (short) 0);
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test03087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03087");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap8);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap9);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strMap9);
        org.junit.Assert.assertNotNull(strMap10);
    }

    @Test
    public void test03088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03088");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer35, strSerializableDeserializer36, (java.util.Collection<java.lang.String>) strList39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder42 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer32, charSequenceSerializableDeserializer33, (java.util.Collection<java.lang.String>) strList39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder43.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = strBuilder43.firstPollOffsetStrategy;
        strBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy46;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int49 = strKafkaSpoutConfig48.getMaxTupleRetries();
        strKafkaSpoutConfig48.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer52 = strKafkaSpoutConfig48.keyDes;
        int int53 = strKafkaSpoutConfig48.maxUncommittedOffsets;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        strBuilder59.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = strBuilder59.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder59.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService65 = null;
        strBuilder64.retryService = kafkaSpoutRetryService65;
        java.util.Map<java.lang.String, java.lang.Object> strMap67 = strBuilder64.kafkaProps;
        strKafkaSpoutConfig48.kafkaProps = strMap67;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap67);
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap67);
        strBuilder29.kafkaProps = strMap70;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder29.setMaxRetries((int) (byte) 100);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass74 = strBuilder29.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer75 = null;
        strBuilder29.valueDes = strSerializableDeserializer75;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy46 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy46.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer52);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strMap67);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strMap70);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(wildcardClass74);
    }

    @Test
    public void test03089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03089");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        long long4 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.Subscription subscription7 = strKafkaSpoutConfig0.subscription;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.kafkaProps;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass9 = strMap8.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNull(subscription7);
        org.junit.Assert.assertNull(strMap8);
    }

    @Test
    public void test03090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03090");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setSecurityProtocol("hi!");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder26.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder32.setProp(strMap52);
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder32.subscription;
        strBuilder20.subscription = subscription55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription55);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = strBuilder57.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder57.setMaxPollRecords(0);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator61 = strBuilder60.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator63 = strKafkaSpoutConfig62.translator;
        long long64 = strKafkaSpoutConfig62.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strKafkaSpoutConfig62.kafkaProps;
        java.lang.String str66 = strKafkaSpoutConfig62.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy67 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig62.firstPollOffsetStrategy = firstPollOffsetStrategy67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder60.setFirstPollOffsetStrategy(firstPollOffsetStrategy67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder69.setPollTimeoutMs(97L);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertNull(strSerializableDeserializer58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strRecordTranslator61);
        org.junit.Assert.assertNull(strRecordTranslator63);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNull(strMap65);
        org.junit.Assert.assertEquals("'" + str66 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str66, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy67 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy67.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test03091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03091");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strIterableBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>();
    }

    @Test
    public void test03092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03092");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer18, strSerializableDeserializer19, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer11, strRecordTranslatorSerializableDeserializer12, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> randomAccessBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer5, strRecordTranslatorSerializableDeserializer6, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>> strComparableBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Collection<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer1, strCollectionSerializableDeserializer2, strArray23);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test03093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03093");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass18 = strBuilder17.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy19;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strBuilder26.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder17.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer35, strSerializableDeserializer36, (java.util.Collection<java.lang.String>) strList39);
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = null;
        strBuilder52.retryService = kafkaSpoutRetryService53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator56 = strBuilder52.translator;
        strBuilder41.translator = strRecordTranslator56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder10.setRecordTranslator(strRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder58.setOffsetCommitPeriodMs(97L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass61 = strBuilder60.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer62 = strBuilder60.keyDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strRecordTranslator56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertNull(strSerializableDeserializer62);
    }

    @Test
    public void test03094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03094");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setFetchMinBytes(0);
        strBuilder11.maxUncommittedOffsets = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test03095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03095");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        int int4 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder10.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = strBuilder28.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy29;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer31 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objDeserializer31);
    }

    @Test
    public void test03096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03096");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 97L;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test03097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03097");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder31.kafkaProps;
        long long35 = strBuilder31.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertNotNull(strMap34);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 32L + "'", long35 == 32L);
    }

    @Test
    public void test03098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03098");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strBuilder5.keyDes;
        int int9 = strBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.Subscription subscription10 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setMaxPollRecords((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxPartitionFectchBytes(1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        strBuilder5.keyDes = strSerializableDeserializer15;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
        org.junit.Assert.assertNotNull(subscription10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test03099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03099");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 30000L;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator10);
    }

    @Test
    public void test03100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03100");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 141902646130682494L;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass12 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(wildcardClass12);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
    }

    @Test
    public void test03101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03101");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 1;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long9 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 1;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test03102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03102");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strBuilder5.firstPollOffsetStrategy;
        int int11 = strBuilder5.maxRetries;
        strBuilder5.pollTimeoutMs = 0L;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
// flaky:         org.junit.Assert.assertTrue("'" + int11 + "' != '" + 100 + "'", int11 == 100);
    }

    @Test
    public void test03103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03103");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer9, strListSerializableDeserializer10, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer6, strSerializableDeserializer7, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer2, strSerializableDeserializer3, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray12);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer19, strSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList24);
        strBuilder27.pollTimeoutMs = 2147483647;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer31, strSerializableDeserializer32, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder38.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator41 = strBuilder38.translator;
        org.apache.storm.tuple.Fields fields42 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder27.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator41, fields42, "");
        org.apache.storm.tuple.Fields fields45 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder17.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator41, fields45, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder47.offsetCommitPeriodMs = 100L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder47.setFetchMinBytes(0);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strRecordTranslator41);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder51);
    }

    @Test
    public void test03104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03104");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator7 = null;
        strBuilder5.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder10.setSSLKeystore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int14 = strBuilder13.maxRetries;
        strBuilder13.maxRetries = '#';
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + int14 + "' != '" + 100 + "'", int14 == 100);
    }

    @Test
    public void test03105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03105");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 100;
        int int13 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
    }

    @Test
    public void test03106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03106");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.ArrayList<java.lang.String>> strArrayBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03107");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer5, strBuilderSerializableDeserializer6, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray13);
        strBuilder18.maxRetries = (byte) 10;
        long long21 = strBuilder18.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 100L + "'", long21 == 100L);
    }

    @Test
    public void test03108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03108");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder6.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder6.setOffsetCommitPeriodMs((long) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = strBuilder6.retryService;
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test03109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03109");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long6 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
    }

    @Test
    public void test03110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03110");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        strBuilder5.maxRetries = ' ';
        strBuilder5.offsetCommitPeriodMs = 35;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        strBuilder21.keyDes = strSerializableDeserializer22;
        long long24 = strBuilder21.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        strBuilder33.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder39.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder39.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder39.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder21.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder39);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator46 = strBuilder39.translator;
        strBuilder5.translator = strRecordTranslator46;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator48 = strBuilder5.translator;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 32L + "'", long24 == 32L);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strRecordTranslator46);
        org.junit.Assert.assertNotNull(strRecordTranslator48);
    }

    @Test
    public void test03111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03111");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer15, strListSerializableDeserializer16, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]> charSequenceBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", charSequenceSerializableDeserializer5, strArraySerializableDeserializer6, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray18);
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        strBuilder40.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap43 = strBuilder40.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder31.setProp(strMap43);
        long long45 = strBuilder31.pollTimeoutMs;
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass52 = strBuilder51.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig56 = strBuilder31.build();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder62.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass68 = strBuilder62.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder62.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator71 = strBuilder62.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder31.setRecordTranslator(strRecordTranslator71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder25.setRecordTranslator(strRecordTranslator71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder25.setPartitionRefreshPeriodMs(2147483647L);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strMap43);
        org.junit.Assert.assertNotNull(strBuilder44);
// flaky:         org.junit.Assert.assertTrue("'" + long45 + "' != '" + 100L + "'", long45 == 100L);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strRecordTranslator71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
    }

    @Test
    public void test03112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03112");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        int int8 = strBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setOffsetCommitPeriodMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = strBuilder10.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService13);
    }

    @Test
    public void test03113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03113");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder7.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setRetry(kafkaSpoutRetryService15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test03114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03114");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        int int56 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(firstPollOffsetStrategy53);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test03115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03115");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer12, strSerializableDeserializer13, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer9, strBuilderSerializableDeserializer10, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer6, strSerializableDeserializer7, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass25 = strBuilder24.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(wildcardClass25);
    }

    @Test
    public void test03116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03116");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        int int5 = strBuilder4.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription6 = strBuilder4.subscription;
        java.util.Properties properties7 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setProp(properties7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNull(subscription6);
    }

    @Test
    public void test03117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03117");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer5;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
    }

    @Test
    public void test03118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03118");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.util.List<java.lang.String>> objKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, java.util.List<java.lang.String>>();
    }

    @Test
    public void test03119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03119");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder17.keyDes = strSerializableDeserializer18;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = strBuilder17.valueDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        strBuilder17.keyDes = strSerializableDeserializer21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder17.setPollTimeoutMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = strBuilder24.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription28 = strBuilder24.subscription;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(strSerializableDeserializer20);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNull(strSerializableDeserializer27);
        org.junit.Assert.assertNotNull(subscription28);
    }

    @Test
    public void test03120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03120");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        int int30 = strBuilder5.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
    }

    @Test
    public void test03121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03121");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator9;
        java.lang.String str11 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        long long13 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription14 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNull(subscription14);
    }

    @Test
    public void test03122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03122");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder10.retryService = kafkaSpoutRetryService11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test03123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03123");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 0;
        long long10 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long11 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 100;
        long long14 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 1L + "'", long14 == 1L);
    }

    @Test
    public void test03124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03124");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        strBuilder5.partitionRefreshPeriodMs = 100L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strBuilder5.valueDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
    }

    @Test
    public void test03125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03125");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator5;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(wildcardClass4);
    }

    @Test
    public void test03126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03126");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Cloneable> annotatedElementBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, java.lang.Cloneable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer1, cloneableSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.AnnotatedElement, java.lang.Cloneable> annotatedElementKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.AnnotatedElement, java.lang.Cloneable>(annotatedElementBuilder4);
    }

    @Test
    public void test03127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03127");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int29 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer30 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer31 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer31;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNull(strDeserializer30);
    }

    @Test
    public void test03128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03128");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strBuilder12.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription14 = strBuilder12.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = null;
        strBuilder12.retryService = kafkaSpoutRetryService15;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertNotNull(subscription14);
    }

    @Test
    public void test03129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03129");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = (-1L);
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (short) 10;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer10 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.pollTimeoutMs = 35;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strDeserializer10);
    }

    @Test
    public void test03130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03130");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig9.maxRetries = (short) 1;
        long long12 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.lang.String str13 = strKafkaSpoutConfig9.toString();
        int int14 = strKafkaSpoutConfig9.getMaxTupleRetries();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        int int26 = strBuilder25.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder25.setSecurityProtocol("hi!");
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder38.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass53 = strBuilder52.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strBuilder61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder52.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder44.setProp(strMap64);
        org.apache.storm.kafka.spout.Subscription subscription67 = strBuilder44.subscription;
        strBuilder32.subscription = subscription67;
        subscription67.refreshAssignment();
        strKafkaSpoutConfig9.subscription = subscription67;
        strBuilder5.subscription = subscription67;
        long long72 = strBuilder5.offsetCommitPeriodMs;
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        strBuilder78.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = strBuilder78.kafkaProps;
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList85);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass88 = strBuilder87.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder87.setFetchMinBytes((int) (byte) 0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass91 = strBuilder87.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder87.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator94 = strBuilder93.translator;
        strBuilder78.translator = strRecordTranslator94;
        strBuilder5.translator = strRecordTranslator94;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder99 = strBuilder5.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(subscription67);
// flaky:         org.junit.Assert.assertTrue("'" + long72 + "' != '" + 32L + "'", long72 == 32L);
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(wildcardClass88);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(wildcardClass91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strRecordTranslator94);
        org.junit.Assert.assertNotNull(strBuilder99);
    }

    @Test
    public void test03131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03131");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable> subscriptionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.Cloneable>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", subscriptionSerializableDeserializer1, cloneableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03132");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.GenericDeclaration, java.util.ArrayList<java.lang.String>> genericDeclarationKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.GenericDeclaration, java.util.ArrayList<java.lang.String>>();
    }

    @Test
    public void test03133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03133");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setSecurityProtocol("hi!");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder26.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder32.setProp(strMap52);
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder32.subscription;
        strBuilder20.subscription = subscription55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription55);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        strBuilder57.valueDes = strSerializableDeserializer58;
        strBuilder57.maxRetries = 0;
        java.util.Properties properties62 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder57.setProp(properties62);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
    }

    @Test
    public void test03134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03134");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer3;
        strKafkaSpoutConfig0.pollTimeoutMs = 97;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03135");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strBuilder4.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder4.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Properties properties10 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder4.setProp(properties10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strMap5);
        org.junit.Assert.assertNotNull(strBuilder9);
    }

    @Test
    public void test03136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03136");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.pollTimeoutMs = 100L;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer12, strSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer9, charSequenceSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder25.partitionRefreshPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService28 = strBuilder25.retryService;
        strBuilder25.partitionRefreshPeriodMs = (short) 100;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strBuilder25.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass33 = strKafkaSpoutConfig0.valueDesClazz;
        long long34 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy3);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder25);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService28);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNull(wildcardClass33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
    }

    @Test
    public void test03137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03137");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer8 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> annotatedElementBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("hi!", annotatedElementSerializableDeserializer7, firstPollOffsetStrategySerializableDeserializer8, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("hi!", strSerializableDeserializer4, strBuilderSerializableDeserializer5, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray13);
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setPartitionRefreshPeriodMs((long) 1);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder29.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int38 = strKafkaSpoutConfig37.getMaxTupleRetries();
        long long39 = strKafkaSpoutConfig37.getPollTimeoutMs();
        strKafkaSpoutConfig37.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = strKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator43 = strKafkaSpoutConfig37.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy44 = strKafkaSpoutConfig37.getFirstPollOffsetStrategy();
        long long45 = strKafkaSpoutConfig37.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService46 = null;
        strKafkaSpoutConfig37.retryService = kafkaSpoutRetryService46;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer51 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer52 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer51, strSerializableDeserializer52, (java.util.Collection<java.lang.String>) strList55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder65.setSSLKeystore("", "", "hi!");
        int int72 = strBuilder71.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder71.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = strBuilder76.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder59.setProp(strMap77);
        strKafkaSpoutConfig37.kafkaProps = strMap77;
        strBuilder29.kafkaProps = strMap77;
        strBuilder18.kafkaProps = strMap77;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder18.setMaxPollRecords((int) (short) 0);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService84 = null;
        strBuilder18.retryService = kafkaSpoutRetryService84;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = strBuilder18.retryService;
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy42);
        org.junit.Assert.assertNull(strRecordTranslator43);
        org.junit.Assert.assertNull(firstPollOffsetStrategy44);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 10 + "'", int72 == 10);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNull(kafkaSpoutRetryService86);
    }

    @Test
    public void test03138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03138");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator30 = strBuilder29.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder33.setSSLTruststore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder33.maxRetries = (byte) 10;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strRecordTranslator30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test03139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03139");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strCollectionBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer1, strBuilderSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03140");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setSecurityProtocol("");
        long long11 = strBuilder10.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder10.setMaxRetries((int) (byte) 0);
        long long14 = strBuilder13.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder13.maxUncommittedOffsets = (byte) 10;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
// flaky:         org.junit.Assert.assertTrue("'" + long11 + "' != '" + 100L + "'", long11 == 100L);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test03141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03141");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        strBuilder16.retryService = kafkaSpoutRetryService17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strKafkaSpoutConfig0.getKafkaProps();
        int int22 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        long long23 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long24 = strKafkaSpoutConfig0.pollTimeoutMs;
        boolean boolean25 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
    }

    @Test
    public void test03142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03142");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList6);
        strBuilder9.offsetCommitPeriodMs = 10L;
        long long12 = strBuilder9.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 10L + "'", long12 == 10L);
    }

    @Test
    public void test03143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03143");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer25 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer24, strArraySerializableDeserializer25, (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer21, strArraySerializableDeserializer22, (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer17, strSerializableDeserializer18, (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, (java.util.Collection<java.lang.String>) strList30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService50 = null;
        strBuilder49.retryService = kafkaSpoutRetryService50;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator53 = strBuilder49.translator;
        org.apache.storm.tuple.Fields fields54 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder38.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator53, fields54, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder11.setRecordTranslator(strRecordTranslator53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strRecordTranslator53);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder61);
    }

    @Test
    public void test03144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03144");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long7 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test03145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03145");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", pattern1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = strBuilder2.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int6 = strKafkaSpoutConfig5.getMaxTupleRetries();
        long long7 = strKafkaSpoutConfig5.getPollTimeoutMs();
        strKafkaSpoutConfig5.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig5.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = strKafkaSpoutConfig5.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strKafkaSpoutConfig13.kafkaProps;
        strKafkaSpoutConfig5.kafkaProps = strMap26;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder4.setProp(strMap26);
        java.util.Properties properties29 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder4.setProp(properties29);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test03146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03146");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass11 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertNull(wildcardClass11);
    }

    @Test
    public void test03147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03147");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer9 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator10;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxRetries = 1;
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder22.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer26 = null;
        strKafkaSpoutConfig13.valueDes = objSerializableDeserializer26;
        java.lang.String str28 = strKafkaSpoutConfig13.toString();
        java.lang.String str29 = strKafkaSpoutConfig13.toString();
        boolean boolean30 = strKafkaSpoutConfig13.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strKafkaSpoutConfig13.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap31;
        int int33 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer9);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str28, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str29 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str29, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test03148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03148");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setGroupId("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder41.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long46 = strBuilder45.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
// flaky:         org.junit.Assert.assertTrue("'" + long46 + "' != '" + 100L + "'", long46 == 100L);
    }

    @Test
    public void test03149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03149");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxUncommittedOffsets(35);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strBuilder4.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig9.maxRetries = (short) 1;
        long long12 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strKafkaSpoutConfig9.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = strKafkaSpoutConfig9.firstPollOffsetStrategy;
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass21 = strBuilder20.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder20.firstPollOffsetStrategy = firstPollOffsetStrategy22;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder20.setProp(strMap32);
        long long34 = strBuilder20.pollTimeoutMs;
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder20.setFirstPollOffsetStrategy(firstPollOffsetStrategy42);
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator51 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder50.setRecordTranslator(strRecordTranslator51);
        strBuilder50.partitionRefreshPeriodMs = 35;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder50.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder44.setProp(strMap55);
        strKafkaSpoutConfig9.kafkaProps = strMap55;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap55);
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap58);
        strBuilder4.kafkaProps = strMap59;
        strBuilder4.maxRetries = 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder4.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder4.setMaxUncommittedOffsets((int) (short) 1);
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNull(strMap13);
        org.junit.Assert.assertNull(firstPollOffsetStrategy14);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strBuilder33);
// flaky:         org.junit.Assert.assertTrue("'" + long34 + "' != '" + 100L + "'", long34 == 100L);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder66);
    }

    @Test
    public void test03150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03150");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={bootstrap/servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03151");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder14.setPartitionRefreshPeriodMs((long) 1);
        int int20 = strBuilder19.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int26 = strKafkaSpoutConfig25.getMaxTupleRetries();
        strKafkaSpoutConfig25.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = strKafkaSpoutConfig25.retryService;
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        strKafkaSpoutConfig25.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder19.setFirstPollOffsetStrategy(firstPollOffsetStrategy37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder19.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription44 = strBuilder19.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strIterableBuilder45 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer7, subscriptionSerializableDeserializer8, subscription44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription44);
        java.lang.String str47 = subscription44.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = strBuilder48.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(subscription44);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "" + "'", str47, "");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test03152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03152");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setPartitionRefreshPeriodMs(97L);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder23.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        strBuilder46.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strBuilder46.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder37.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder29.setProp(strMap49);
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder13.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder13.setMaxUncommittedOffsets((int) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig59 = strBuilder13.build();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig59);
    }

    @Test
    public void test03153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03153");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03154");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator3 = strKafkaSpoutConfig0.translator;
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.pollTimeoutMs;
        long long6 = strKafkaSpoutConfig0.pollTimeoutMs;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        long long8 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.getSubscription();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strRecordTranslator3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(subscription9);
    }

    @Test
    public void test03155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03155");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        long long11 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        int int13 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator14 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.maxRetries = '#';
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNull(strRecordTranslator14);
    }

    @Test
    public void test03156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03156");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass77 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer81 = strKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str82 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer83 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer84 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService86 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService86;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(wildcardClass77);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(objDeserializer81);
        org.junit.Assert.assertNull(strSerializableDeserializer83);
        org.junit.Assert.assertNull(objSerializableDeserializer84);
        org.junit.Assert.assertNull(firstPollOffsetStrategy85);
    }

    @Test
    public void test03157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03157");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> genericDeclarationBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer4, strBuilderSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray12);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder16.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig21.maxRetries = (short) 1;
        long long24 = strKafkaSpoutConfig21.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strKafkaSpoutConfig21.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator27 = strKafkaSpoutConfig26.translator;
        long long28 = strKafkaSpoutConfig26.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig26.kafkaProps;
        java.lang.String str30 = strKafkaSpoutConfig26.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strKafkaSpoutConfig26.kafkaProps;
        long long32 = strKafkaSpoutConfig26.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer33 = strKafkaSpoutConfig26.valueDes;
        strKafkaSpoutConfig26.maxUncommittedOffsets = (byte) 1;
        java.lang.String str36 = strKafkaSpoutConfig26.toString();
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        strBuilder42.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder42.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder48.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass57 = strBuilder56.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder56.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder56.setProp(strMap68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder48.setProp(strMap68);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap68);
        strKafkaSpoutConfig26.kafkaProps = strMap71;
        strKafkaSpoutConfig21.kafkaProps = strMap71;
        long long74 = strKafkaSpoutConfig21.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer75 = strKafkaSpoutConfig21.valueDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap76 = strKafkaSpoutConfig21.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder16.setProp(strMap76);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(strMap25);
        org.junit.Assert.assertNull(strRecordTranslator27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str30, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer33);
        org.junit.Assert.assertEquals("'" + str36 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str36, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(wildcardClass57);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer75);
        org.junit.Assert.assertNotNull(strMap76);
        org.junit.Assert.assertNotNull(strBuilder77);
    }

    @Test
    public void test03158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03158");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>();
        int int1 = strBuilder0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder3 = strBuilder0.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer9 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder15.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setPartitionRefreshPeriodMs((long) 1);
        int int21 = strBuilder20.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder20.setSecurityProtocol("hi!");
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        strBuilder33.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder39.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass48 = strBuilder47.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        java.lang.String[] strArray53 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList54);
        strBuilder56.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap59 = strBuilder56.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder47.setProp(strMap59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder39.setProp(strMap59);
        org.apache.storm.kafka.spout.Subscription subscription62 = strBuilder39.subscription;
        strBuilder27.subscription = subscription62;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence> strMapBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer8, charSequenceSerializableDeserializer9, subscription62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.reflect.Type> randomAccessBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer5, typeSerializableDeserializer6, subscription62);
        strBuilder0.subscription = subscription62;
        strBuilder0.maxUncommittedOffsets = (byte) 0;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder0.setMaxPollRecords((int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
// flaky:         org.junit.Assert.assertTrue("'" + int1 + "' != '" + 100 + "'", int1 == 100);
        org.junit.Assert.assertNotNull(strBuilder3);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strMap59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(subscription62);
    }

    @Test
    public void test03159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03159");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator6;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer8;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer10 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.Class<?> wildcardClass12 = strKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(objDeserializer10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test03160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03160");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass6 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = 'a';
        int int9 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String str14 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertEquals("'" + str14 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=10, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}" + "'", str14, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=10, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03161");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder8.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder8.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig18.maxRetries = (short) 1;
        long long21 = strKafkaSpoutConfig18.offsetCommitPeriodMs;
        java.lang.String str22 = strKafkaSpoutConfig18.toString();
        int int23 = strKafkaSpoutConfig18.getMaxTupleRetries();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setPartitionRefreshPeriodMs((long) 1);
        int int35 = strBuilder34.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder34.setSecurityProtocol("hi!");
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder47.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder53.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass62 = strBuilder61.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder61.firstPollOffsetStrategy = firstPollOffsetStrategy63;
        java.lang.String[] strArray67 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList68 = new java.util.ArrayList<java.lang.String>();
        boolean boolean69 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList68, strArray67);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList68);
        strBuilder70.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap73 = strBuilder70.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder61.setProp(strMap73);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder53.setProp(strMap73);
        org.apache.storm.kafka.spout.Subscription subscription76 = strBuilder53.subscription;
        strBuilder41.subscription = subscription76;
        subscription76.refreshAssignment();
        strKafkaSpoutConfig18.subscription = subscription76;
        strBuilder8.subscription = subscription76;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription76);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder81.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer84 = null;
        strBuilder81.valueDes = strSerializableDeserializer84;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertEquals("'" + str22 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str22, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 1 + "'", int23 == 1);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(wildcardClass62);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy63 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy63.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray67);
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMap73);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(subscription76);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test03162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03162");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03163");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = null;
        strBuilder11.retryService = kafkaSpoutRetryService20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder11.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.ArrayList<java.lang.String>> firstPollOffsetStrategyEnumBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer28, strListSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder23.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder23.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder23.maxUncommittedOffsets = 2147483647;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test03164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03164");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03165");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder17.keyDes = strSerializableDeserializer18;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder17.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setMaxPollRecords((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = strBuilder26.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService27);
    }

    @Test
    public void test03166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03166");
        java.lang.String[] strArray4 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder6.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setOffsetCommitPeriodMs((long) (byte) 100);
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test03167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03167");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        strBuilder16.retryService = kafkaSpoutRetryService17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strKafkaSpoutConfig0.getKafkaProps();
        boolean boolean22 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
        long long23 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass24 = strKafkaSpoutConfig0.keyDesClazz;
        java.lang.String str25 = strKafkaSpoutConfig0.getConsumerGroupId();
        int int26 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNull(wildcardClass24);
        org.junit.Assert.assertNull(str25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test03168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03168");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        int int5 = strBuilder4.maxRetries;
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
    }

    @Test
    public void test03169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03169");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        long long9 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int10 = strKafkaSpoutConfig0.maxRetries;
        int int11 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test03170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03170");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer5;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str7 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertNull(strMap4);
    }

    @Test
    public void test03171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03171");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        int int9 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass11 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(wildcardClass11);
    }

    @Test
    public void test03172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03172");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription35 = strBuilder10.subscription;
        long long36 = strBuilder10.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder10.setBootstrapServers("");
        long long39 = strBuilder38.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(subscription35);
// flaky:         org.junit.Assert.assertTrue("'" + long36 + "' != '" + 32L + "'", long36 == 32L);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 1L + "'", long39 == 1L);
    }

    @Test
    public void test03173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03173");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        int int17 = strBuilder16.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setSecurityProtocol("hi!");
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder43.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        strBuilder52.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder43.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder35.setProp(strMap55);
        org.apache.storm.kafka.spout.Subscription subscription58 = strBuilder35.subscription;
        strBuilder23.subscription = subscription58;
        subscription58.refreshAssignment();
        java.lang.String str61 = subscription58.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.Subscription> serializableBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.Subscription>("hi!", serializableSerializableDeserializer1, subscriptionSerializableDeserializer2, subscription58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.io.Serializable, org.apache.storm.kafka.spout.Subscription> serializableKafkaSpoutConfig64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.io.Serializable, org.apache.storm.kafka.spout.Subscription>(serializableBuilder63);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertEquals("'" + str61 + "' != '" + "" + "'", str61, "");
    }

    @Test
    public void test03174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03174");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder9.setMaxPollRecords((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxUncommittedOffsets((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy14 = strBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxRetries((int) (byte) -1);
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        strBuilder22.keyDes = strSerializableDeserializer23;
        long long25 = strBuilder22.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setPartitionRefreshPeriodMs((long) 1);
        int int42 = strBuilder41.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder41.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder41.setSecurityProtocol("hi!");
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        strBuilder54.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder54.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder60.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass69 = strBuilder68.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy70 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder68.firstPollOffsetStrategy = firstPollOffsetStrategy70;
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList75);
        strBuilder77.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strBuilder77.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder68.setProp(strMap80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder60.setProp(strMap80);
        org.apache.storm.kafka.spout.Subscription subscription83 = strBuilder60.subscription;
        strBuilder48.subscription = subscription83;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer29, strSerializableDeserializer30, subscription83);
        strBuilder22.subscription = subscription83;
        strBuilder11.subscription = subscription83;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy14 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy14.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 32L + "'", long25 == 32L);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(wildcardClass69);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy70 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy70.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(subscription83);
    }

    @Test
    public void test03175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03175");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.CharSequence> strListBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder17.valueDes = strSerializableDeserializer18;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test03176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03176");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer11 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.pollTimeoutMs = 30000L;
        int int14 = strKafkaSpoutConfig0.maxRetries;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(strDeserializer11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03177");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean7 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer6);
    }

    @Test
    public void test03178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03178");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator9 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService12;
        int int14 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy15);
    }

    @Test
    public void test03179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03179");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strListBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer11, subscriptionSerializableDeserializer12, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.util.RandomAccess>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, randomAccessSerializableDeserializer6, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray16);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("", strSerializableDeserializer1, strSerializableDeserializer2, strArray16);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test03180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03180");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03181");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        strBuilder5.keyDes = strSerializableDeserializer10;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder17.keyDes = strSerializableDeserializer18;
        long long20 = strBuilder17.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder35.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass40 = strBuilder35.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder17.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder35);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator42 = strBuilder35.translator;
        org.apache.storm.tuple.Fields fields43 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator42, fields43, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        strBuilder51.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = strBuilder51.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder51.setPartitionRefreshPeriodMs((long) 1);
        int int57 = strBuilder56.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder56.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int63 = strKafkaSpoutConfig62.getMaxTupleRetries();
        strKafkaSpoutConfig62.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService66 = strKafkaSpoutConfig62.retryService;
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass73 = strBuilder72.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder72.firstPollOffsetStrategy = firstPollOffsetStrategy74;
        strKafkaSpoutConfig62.firstPollOffsetStrategy = firstPollOffsetStrategy74;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder56.setFirstPollOffsetStrategy(firstPollOffsetStrategy74);
        int int78 = strBuilder77.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer79 = strBuilder77.valueDes;
        strBuilder77.maxUncommittedOffsets = '4';
        long long82 = strBuilder77.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder77.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy85 = strBuilder84.firstPollOffsetStrategy;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy85;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 32L + "'", long20 == 32L);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(wildcardClass40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strRecordTranslator42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(wildcardClass73);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy74 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy74.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + (-1) + "'", int78 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer79);
// flaky:         org.junit.Assert.assertTrue("'" + long82 + "' != '" + 32L + "'", long82 == 32L);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy85 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy85.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
    }

    @Test
    public void test03182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03182");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder17.maxUncommittedOffsets = 2147483647;
        strBuilder17.partitionRefreshPeriodMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        strBuilder17.retryService = kafkaSpoutRetryService22;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass24 = strBuilder17.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int26 = strKafkaSpoutConfig25.getMaxTupleRetries();
        strKafkaSpoutConfig25.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = strKafkaSpoutConfig25.retryService;
        long long30 = strKafkaSpoutConfig25.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = strKafkaSpoutConfig25.retryService;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        strBuilder37.keyDes = strSerializableDeserializer38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder37.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long42 = strBuilder37.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder37.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxPartitionFectchBytes((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int49 = strKafkaSpoutConfig48.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer50 = strKafkaSpoutConfig48.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer51 = null;
        strKafkaSpoutConfig48.keyDes = strSerializableDeserializer51;
        strKafkaSpoutConfig48.pollTimeoutMs = 97;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = strKafkaSpoutConfig48.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer57 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer58 = null;
        java.lang.String[] strArray61 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList62 = new java.util.ArrayList<java.lang.String>();
        boolean boolean63 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList62, strArray61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer57, strSerializableDeserializer58, (java.util.Collection<java.lang.String>) strList62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder65.setSSLTruststore("hi!", "hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer69 = null;
        strBuilder68.keyDes = strSerializableDeserializer69;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder68.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        strKafkaSpoutConfig48.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        strBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        strKafkaSpoutConfig25.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        strBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder41);
// flaky:         org.junit.Assert.assertTrue("'" + long42 + "' != '" + 32L + "'", long42 == 32L);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNull(strDeserializer50);
        org.junit.Assert.assertNull(firstPollOffsetStrategy55);
        org.junit.Assert.assertNotNull(strArray61);
        org.junit.Assert.assertTrue("'" + boolean63 + "' != '" + true + "'", boolean63 == true);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
    }

    @Test
    public void test03183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03183");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc5 = null;
        org.apache.storm.tuple.Fields fields6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setRecordTranslator(strConsumerRecordFunc5, fields6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder4.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder4.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder14.setProp("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder22);
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder22.setProp(strMap30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder22.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test03184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03184");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        java.lang.String[] strArray25 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer20, strSerializableDeserializer21, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer17, strSerializableDeserializer18, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer13, strRecordTranslatorSerializableDeserializer14, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer10, strComparableSerializableDeserializer11, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer7, strMapSerializableDeserializer8, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray25);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strCollectionBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("", strCollectionSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, strArray25);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test03185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03185");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        strBuilder11.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig38 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder11.setRetry(kafkaSpoutRetryService39);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig38);
    }

    @Test
    public void test03186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03186");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        org.apache.storm.kafka.spout.Subscription subscription7 = strKafkaSpoutConfig0.getSubscription();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertNull(subscription7);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
    }

    @Test
    public void test03187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03187");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
        org.junit.Assert.assertNull(strRecordTranslator10);
    }

    @Test
    public void test03188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03188");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig30 = strBuilder5.build();
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass42 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder36.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator45 = strBuilder36.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder5.setRecordTranslator(strRecordTranslator45);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = strBuilder5.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription48 = strBuilder5.subscription;
        java.lang.String str49 = subscription48.getTopicsString();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertTrue("'" + long19 + "' != '" + 100L + "'", long19 == 100L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strRecordTranslator45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNull(strSerializableDeserializer47);
        org.junit.Assert.assertNotNull(subscription48);
        org.junit.Assert.assertEquals("'" + str49 + "' != '" + "" + "'", str49, "");
    }

    @Test
    public void test03189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03189");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer17 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer16, strListSerializableDeserializer17, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer13, strSerializableDeserializer14, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer10, strKafkaSpoutConfigSerializableDeserializer11, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strIterableBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer1, strMapSerializableDeserializer2, strArray19);
        org.junit.Assert.assertNotNull(strArray19);
    }

    @Test
    public void test03190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03190");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
    }

    @Test
    public void test03191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03191");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer8, strArraySerializableDeserializer9, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setPartitionRefreshPeriodMs((long) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder24.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test03192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03192");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer27 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long28 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String[] strArray33 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = '#';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator41 = strKafkaSpoutConfig0.getTranslator();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strDeserializer27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertNull(strRecordTranslator41);
    }

    @Test
    public void test03193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03193");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer6;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.getKafkaProps();
        long long10 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
    }

    @Test
    public void test03194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03194");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setPartitionRefreshPeriodMs((long) 1);
        int int14 = strBuilder13.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setSecurityProtocol("hi!");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder26.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray37 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList38 = new java.util.ArrayList<java.lang.String>();
        boolean boolean39 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList38, strArray37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList38);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strBuilder40.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder40.firstPollOffsetStrategy = firstPollOffsetStrategy42;
        java.lang.String[] strArray46 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList47 = new java.util.ArrayList<java.lang.String>();
        boolean boolean48 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList47, strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList47);
        strBuilder49.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap52 = strBuilder49.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder40.setProp(strMap52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder32.setProp(strMap52);
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder32.subscription;
        strBuilder20.subscription = subscription55;
        subscription55.refreshAssignment();
        java.lang.String str58 = subscription55.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription55);
        java.lang.String str60 = subscription55.getTopicsString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strArray37);
        org.junit.Assert.assertTrue("'" + boolean39 + "' != '" + true + "'", boolean39 == true);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(wildcardClass41);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy42 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy42.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertTrue("'" + boolean48 + "' != '" + true + "'", boolean48 == true);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
        org.junit.Assert.assertEquals("'" + str58 + "' != '" + "" + "'", str58, "");
        org.junit.Assert.assertEquals("'" + str60 + "' != '" + "" + "'", str60, "");
    }

    @Test
    public void test03195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03195");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.lang.Comparable<java.lang.String>> strArrayBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.lang.Comparable<java.lang.String>> strArrayKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String[], java.lang.Comparable<java.lang.String>>(strArrayBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03196");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer7 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer6, strArraySerializableDeserializer7, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer3, strArraySerializableDeserializer4, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder18.setGroupId("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Properties properties21 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setProp(properties21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test03197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03197");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.maxRetries = (byte) 100;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass10 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(wildcardClass10);
    }

    @Test
    public void test03198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03198");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer5, strArraySerializableDeserializer6, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer2, strArraySerializableDeserializer3, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.Subscription subscription17 = strBuilder16.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int21 = strBuilder20.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 10 + "'", int21 == 10);
    }

    @Test
    public void test03199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03199");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03200");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        strBuilder11.keyDes = strSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxPartitionFectchBytes((int) (short) -1);
        org.apache.storm.kafka.spout.Subscription subscription17 = strBuilder16.subscription;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder16.keyDes = strSerializableDeserializer18;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(subscription17);
    }

    @Test
    public void test03201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03201");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long6 = strKafkaSpoutConfig0.getPollTimeoutMs();
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test03202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03202");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer8, strListSerializableDeserializer9, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.Subscription subscription18 = strBuilder17.subscription;
        subscription18.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test03203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03203");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setSecurityProtocol("hi!");
        long long18 = strBuilder17.pollTimeoutMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder17.kafkaProps;
        long long20 = strBuilder17.partitionRefreshPeriodMs;
        long long21 = strBuilder17.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setMaxUncommittedOffsets(32);
        java.lang.String[] strArray27 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        strBuilder30.keyDes = strSerializableDeserializer31;
        long long33 = strBuilder30.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setPollTimeoutMs((long) 0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder30.valueDesClazz;
        strBuilder30.partitionRefreshPeriodMs = 32L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder17.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) 32L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 1L + "'", long20 == 1L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder30);
// flaky:         org.junit.Assert.assertTrue("'" + long33 + "' != '" + 32L + "'", long33 == 32L);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test03204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03204");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig3.translator;
        long long5 = strKafkaSpoutConfig3.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig3.kafkaProps;
        java.lang.String str7 = strKafkaSpoutConfig3.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        strKafkaSpoutConfig3.valueDes = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = strBuilder21.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setPartitionRefreshPeriodMs((long) 1);
        int int27 = strBuilder26.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder26.setSecurityProtocol("hi!");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder39.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder53.setProp(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder45.setProp(strMap65);
        org.apache.storm.kafka.spout.Subscription subscription68 = strBuilder45.subscription;
        strBuilder33.subscription = subscription68;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer14, strSerializableDeserializer15, subscription68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, subscription68);
        strKafkaSpoutConfig3.subscription = subscription68;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder73.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig76 = strBuilder73.build();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer77 = null;
        strBuilder73.valueDes = strSerializableDeserializer77;
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(subscription68);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig76);
    }

    @Test
    public void test03205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03205");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder10.setSSLKeystore("", "");
        long long35 = strBuilder10.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder10.setMaxPartitionFectchBytes((int) '4');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder10.setSSLKeystore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = strBuilder40.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder34);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 100L + "'", long35 == 100L);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService41);
    }

    @Test
    public void test03206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03206");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        java.lang.String str53 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxRetries = 35;
        java.lang.String str56 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer57 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertEquals("'" + str53 + "' != '" + "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str53, "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str56 + "' != '" + "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str56, "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objSerializableDeserializer57);
    }

    @Test
    public void test03207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03207");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setSecurityProtocol("");
        strBuilder19.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription26 = strBuilder19.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = null;
        strBuilder19.retryService = kafkaSpoutRetryService27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder19.setSSLTruststore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=1, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
// flaky:         org.junit.Assert.assertTrue("'" + long16 + "' != '" + 32L + "'", long16 == 32L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(subscription26);
        org.junit.Assert.assertNotNull(strBuilder31);
    }

    @Test
    public void test03208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03208");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.Class<?>> strConsumerRecordFuncKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.Class<?>>();
    }

    @Test
    public void test03209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03209");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxRetries = ' ';
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = strKafkaSpoutConfig0.getRetryService();
        int int12 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(subscription10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test03210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03210");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass77 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer81 = strKafkaSpoutConfig0.getValueDeserializer();
        java.lang.String str82 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer83 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer84 = strKafkaSpoutConfig0.valueDes;
        long long85 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(wildcardClass77);
        org.junit.Assert.assertNull(strMap80);
        org.junit.Assert.assertNull(objDeserializer81);
        org.junit.Assert.assertNull(strSerializableDeserializer83);
        org.junit.Assert.assertNull(objSerializableDeserializer84);
        org.junit.Assert.assertTrue("'" + long85 + "' != '" + 1L + "'", long85 == 1L);
    }

    @Test
    public void test03211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03211");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.getRetryService();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strDeserializer6);
    }

    @Test
    public void test03212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03212");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        strBuilder13.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strBuilder13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService19 = null;
        strBuilder18.retryService = kafkaSpoutRetryService19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator22 = strBuilder18.translator;
        strBuilder7.translator = strRecordTranslator22;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator24 = strBuilder7.translator;
        java.util.Properties properties25 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder7.setProp(properties25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strRecordTranslator22);
        org.junit.Assert.assertNotNull(strRecordTranslator24);
    }

    @Test
    public void test03213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03213");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        strBuilder11.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder11.setPartitionRefreshPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = strBuilder11.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test03214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03214");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = strBuilder6.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder6.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder6.setFetchMinBytes((int) (short) 10);
        int int12 = strBuilder6.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder6.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder6.setMaxPollRecords((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig17 = strBuilder6.build();
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 1 + "'", int12 == 1);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig17);
    }

    @Test
    public void test03215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03215");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.GenericDeclaration, java.lang.reflect.AnnotatedElement> genericDeclarationKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.GenericDeclaration, java.lang.reflect.AnnotatedElement>();
    }

    @Test
    public void test03216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03216");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setRecordTranslator(strRecordTranslator11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setOffsetCommitPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder12.setMaxUncommittedOffsets(0);
        strBuilder16.maxUncommittedOffsets = '#';
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test03217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03217");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        int int8 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test03218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03218");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int9 = strKafkaSpoutConfig8.getMaxTupleRetries();
        long long10 = strKafkaSpoutConfig8.getPollTimeoutMs();
        strKafkaSpoutConfig8.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator14 = strKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = strKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxRetries = 1;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder25.kafkaProps;
        strKafkaSpoutConfig16.kafkaProps = strMap26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strKafkaSpoutConfig16.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig16.kafkaProps;
        strKafkaSpoutConfig8.kafkaProps = strMap29;
        strKafkaSpoutConfig0.kafkaProps = strMap29;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strKafkaSpoutConfig0.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass33 = strKafkaSpoutConfig0.valueDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxRetries = (byte) 10;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 'a';
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer39;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNull(strRecordTranslator14);
        org.junit.Assert.assertNull(firstPollOffsetStrategy15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
        org.junit.Assert.assertNull(wildcardClass33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test03219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03219");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer9;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 32;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(strMap15);
    }

    @Test
    public void test03220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03220");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03221");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        long long9 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        int int13 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer14 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 1 + "'", int13 == 1);
        org.junit.Assert.assertNull(objSerializableDeserializer14);
    }

    @Test
    public void test03222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03222");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription> strIterableBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer1, subscriptionSerializableDeserializer2, strArray14);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test03223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03223");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator17 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator17;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) -1;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(firstPollOffsetStrategy19);
    }

    @Test
    public void test03224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03224");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig8 = strBuilder5.build();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strBuilder5.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=100, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder5.keyDes = strSerializableDeserializer12;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertNotNull(strBuilder11);
    }

    @Test
    public void test03225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03225");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(strRecordTranslator11);
    }

    @Test
    public void test03226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03226");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        long long4 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        long long6 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long7 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test03227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03227");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer14 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer13, strListSerializableDeserializer14, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer10, strSerializableDeserializer11, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer7, strKafkaSpoutConfigSerializableDeserializer8, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray16);
        int int22 = strBuilder21.maxRetries;
        org.junit.Assert.assertNotNull(strArray16);
// flaky:         org.junit.Assert.assertTrue("'" + int22 + "' != '" + 100 + "'", int22 == 100);
    }

    @Test
    public void test03228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03228");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer8, strListSerializableDeserializer9, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.reflect.Type> strListBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, typeSerializableDeserializer2, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, java.lang.reflect.Type> strListKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, java.lang.reflect.Type>(strListBuilder15);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test03229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03229");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription5 = strKafkaSpoutConfig0.subscription;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(subscription5);
        org.junit.Assert.assertNull(wildcardClass6);
    }

    @Test
    public void test03230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03230");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPollRecords((int) ' ');
        strBuilder17.maxRetries = 32;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder17.setMaxRetries((int) (byte) 10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setFetchMinBytes((int) 'a');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test03231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03231");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        int int16 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder11.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder18.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setGroupId("");
        strBuilder23.maxRetries = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setMaxPollRecords((int) '#');
        int int28 = strBuilder23.maxRetries;
        strBuilder23.maxRetries = (byte) 100;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 10 + "'", int16 == 10);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 35 + "'", int28 == 35);
    }

    @Test
    public void test03232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03232");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.translator;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.kafkaProps;
        int int7 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
    }

    @Test
    public void test03233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03233");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> objKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Object, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>();
    }

    @Test
    public void test03234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03234");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        int int12 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = strKafkaSpoutConfig17.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer19 = strKafkaSpoutConfig17.getKeyDeserializer();
        int int20 = strKafkaSpoutConfig17.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        strKafkaSpoutConfig17.retryService = kafkaSpoutRetryService21;
        int int23 = strKafkaSpoutConfig17.maxUncommittedOffsets;
        long long24 = strKafkaSpoutConfig17.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass25 = strKafkaSpoutConfig17.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer27 = strKafkaSpoutConfig26.getValueDeserializer();
        int int28 = strKafkaSpoutConfig26.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig26.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = strKafkaSpoutConfig26.valueDes;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass37 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder36.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        strKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        strKafkaSpoutConfig17.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setBootstrapServers("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator57 = strBuilder56.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder56.setPollTimeoutMs(97L);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(strRecordTranslator18);
        org.junit.Assert.assertNull(strDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(wildcardClass25);
        org.junit.Assert.assertNull(objDeserializer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(objSerializableDeserializer30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strRecordTranslator57);
        org.junit.Assert.assertNotNull(strBuilder59);
    }

    @Test
    public void test03235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03235");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass77 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService80 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService80;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer82 = strKafkaSpoutConfig0.getValueDeserializer();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNull(wildcardClass77);
        org.junit.Assert.assertNull(objDeserializer82);
    }

    @Test
    public void test03236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03236");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS = 10L;
    }

    @Test
    public void test03237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03237");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray12);
        java.lang.Class<?> wildcardClass17 = strArray12.getClass();
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test03238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03238");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess> subscriptionBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess> subscriptionKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess>(subscriptionBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03239");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 0;
        long long7 = strKafkaSpoutConfig0.pollTimeoutMs;
        int int8 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
    }

    @Test
    public void test03240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03240");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder7.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass18 = strBuilder17.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = strBuilder20.firstPollOffsetStrategy;
        strBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = strBuilder31.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder31.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setFetchMinBytes((int) (short) 10);
        int int37 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder7.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder7.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNull(wildcardClass44);
    }

    @Test
    public void test03241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03241");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setGroupId("hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass10 = strBuilder9.valueDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription11 = strBuilder9.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder9.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder9.pollTimeoutMs = 1L;
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass24 = strBuilder23.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder23.setFetchMinBytes((int) (byte) 0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder23.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator30 = strBuilder29.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder9.setRecordTranslator(strRecordTranslator30);
        long long32 = strBuilder9.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNotNull(subscription11);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strRecordTranslator30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 1L + "'", long32 == 1L);
    }

    @Test
    public void test03242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03242");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig30 = strBuilder5.build();
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass42 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder36.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator45 = strBuilder36.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder5.setRecordTranslator(strRecordTranslator45);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        strBuilder5.keyDes = strSerializableDeserializer47;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder5.setSSLTruststore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        java.lang.Class<?> wildcardClass52 = strBuilder5.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 10L + "'", long19 == 10L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strRecordTranslator45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
    }

    @Test
    public void test03243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03243");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        java.lang.String str16 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy17 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        int int18 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str16 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str16, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 1 + "'", int18 == 1);
    }

    @Test
    public void test03244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03244");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator9 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setRecordTranslator(strRecordTranslator9);
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        strBuilder16.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder16.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig26.maxRetries = (short) 1;
        long long29 = strKafkaSpoutConfig26.offsetCommitPeriodMs;
        java.lang.String str30 = strKafkaSpoutConfig26.toString();
        int int31 = strKafkaSpoutConfig26.getMaxTupleRetries();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strBuilder37.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setPartitionRefreshPeriodMs((long) 1);
        int int43 = strBuilder42.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder42.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder42.setSecurityProtocol("hi!");
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        strBuilder55.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder55.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder61.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass70 = strBuilder69.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder69.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        strBuilder78.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = strBuilder78.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder69.setProp(strMap81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder61.setProp(strMap81);
        org.apache.storm.kafka.spout.Subscription subscription84 = strBuilder61.subscription;
        strBuilder49.subscription = subscription84;
        subscription84.refreshAssignment();
        strKafkaSpoutConfig26.subscription = subscription84;
        strBuilder16.subscription = subscription84;
        strBuilder8.subscription = subscription84;
        subscription84.refreshAssignment();
        subscription84.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.Map<java.lang.String, java.lang.Object>> randomAccessBuilder92 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer1, strMapSerializableDeserializer2, subscription84);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str30, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(subscription84);
    }

    @Test
    public void test03245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03245");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription5 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription6 = strKafkaSpoutConfig0.getSubscription();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer7 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig0.getValueDeserializer();
        int int10 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(subscription5);
        org.junit.Assert.assertNull(subscription6);
        org.junit.Assert.assertNull(strDeserializer7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test03246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03246");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.Subscription subscription6 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig7.translator;
        long long9 = strKafkaSpoutConfig7.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig7.getKafkaProps();
        strKafkaSpoutConfig7.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig7.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.Subscription subscription17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, subscription17);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc19 = null;
        org.apache.storm.tuple.Fields fields20 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder18.setRecordTranslator(strConsumerRecordFunc19, fields20, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        java.lang.String[] strArray29 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer24, strSerializableDeserializer25, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPartitionRefreshPeriodMs((long) 1);
        int int45 = strBuilder44.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int51 = strKafkaSpoutConfig50.getMaxTupleRetries();
        strKafkaSpoutConfig50.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService54 = strKafkaSpoutConfig50.retryService;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass61 = strBuilder60.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder60.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        strKafkaSpoutConfig50.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder44.setFirstPollOffsetStrategy(firstPollOffsetStrategy62);
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        strBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        strKafkaSpoutConfig7.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy62;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(subscription6);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(wildcardClass61);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy62 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy62.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder65);
    }

    @Test
    public void test03247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03247");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder8.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder8.setMaxUncommittedOffsets((int) (short) 1);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder18.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder18.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder18.maxRetries = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder18.setMaxPollRecords((int) (byte) 10);
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass35 = strBuilder34.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder34.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder34.setMaxPartitionFectchBytes((int) (short) 10);
        int int44 = strBuilder34.maxRetries;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = strBuilder51.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder51.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder51.setFetchMinBytes((int) (short) 10);
        int int57 = strBuilder51.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        strBuilder8.maxUncommittedOffsets = 'a';
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
    }

    @Test
    public void test03248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03248");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPollRecords((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setMaxPartitionFectchBytes(52);
        strBuilder17.pollTimeoutMs = (-1L);
        int int22 = strBuilder17.maxRetries;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
    }

    @Test
    public void test03249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03249");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setPartitionRefreshPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder33.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder33.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder40);
    }

    @Test
    public void test03250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03250");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 141902646130682494L;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService3;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        strBuilder10.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setPartitionRefreshPeriodMs((long) 1);
        int int16 = strBuilder15.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int22 = strKafkaSpoutConfig21.getMaxTupleRetries();
        strKafkaSpoutConfig21.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = strKafkaSpoutConfig21.retryService;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass32 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        strKafkaSpoutConfig21.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder15.setFirstPollOffsetStrategy(firstPollOffsetStrategy33);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy33;
        int int38 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strKafkaSpoutConfig0.kafkaProps;
        long long40 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str41 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService42;
        int int44 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.maxUncommittedOffsets = '4';
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(wildcardClass32);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy33 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy33.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(strMap39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 141902646130682494L + "'", long40 == 141902646130682494L);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}" + "'", str41, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test03251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03251");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        long long9 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator10;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        strBuilder17.keyDes = strSerializableDeserializer18;
        long long20 = strBuilder17.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder17.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern26);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator28 = strBuilder27.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder17.setRecordTranslator(strRecordTranslator28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder29.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder29.subscription;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder29.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap35;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        java.lang.String[] strArray41 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer38, strSerializableDeserializer39, (java.util.Collection<java.lang.String>) strList42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxRetries(35);
        org.apache.storm.kafka.spout.Subscription subscription47 = strBuilder46.subscription;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder53.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService56 = strBuilder55.retryService;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer57 = null;
        strBuilder55.valueDes = strSerializableDeserializer57;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder55.setOffsetCommitPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder60.setPartitionRefreshPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder62.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=35, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=10, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy66 = strBuilder62.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder46.setFirstPollOffsetStrategy(firstPollOffsetStrategy66);
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy66;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
// flaky:         org.junit.Assert.assertTrue("'" + long20 + "' != '" + 32L + "'", long20 == 32L);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strRecordTranslator28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(subscription47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService56);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy66 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy66.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder67);
    }

    @Test
    public void test03252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03252");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS = 0;
    }

    @Test
    public void test03253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03253");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = strKafkaSpoutConfig0.valueDes;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
    }

    @Test
    public void test03254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03254");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.Subscription subscription3 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.Subscription subscription4 = strKafkaSpoutConfig0.subscription;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer5 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(subscription3);
        org.junit.Assert.assertNull(subscription4);
        org.junit.Assert.assertNull(strDeserializer5);
    }

    @Test
    public void test03255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03255");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService27 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long29 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.Subscription subscription33 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer31, strSerializableDeserializer32, subscription33);
        strBuilder34.partitionRefreshPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder34.setPartitionRefreshPeriodMs((long) 35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder38.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        strKafkaSpoutConfig43.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = strKafkaSpoutConfig43.keyDes;
        int int48 = strKafkaSpoutConfig43.maxUncommittedOffsets;
        java.lang.String[] strArray51 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList52 = new java.util.ArrayList<java.lang.String>();
        boolean boolean53 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList52, strArray51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList52);
        strBuilder54.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap57 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder54.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService60 = null;
        strBuilder59.retryService = kafkaSpoutRetryService60;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = strBuilder59.kafkaProps;
        strKafkaSpoutConfig43.kafkaProps = strMap62;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap62);
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder38.setProp(strMap64);
        java.lang.String[] strArray69 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList70 = new java.util.ArrayList<java.lang.String>();
        boolean boolean71 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList70, strArray69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList70);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator73 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder72.setRecordTranslator(strRecordTranslator73);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer76 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer77 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer79 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer80 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer82 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer83 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer85 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer86 = null;
        java.lang.String[] strArray90 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strComparableBuilder92 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer85, strCollectionSerializableDeserializer86, strArray90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>> strArrayBuilder93 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer82, strCollectionSerializableDeserializer83, strArray90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Comparable<java.lang.String>> firstPollOffsetStrategyBuilder94 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategySerializableDeserializer79, strComparableSerializableDeserializer80, strArray90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer76, strSerializableDeserializer77, strArray90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy96 = strBuilder95.firstPollOffsetStrategy;
        strBuilder74.firstPollOffsetStrategy = firstPollOffsetStrategy96;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy96;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy96;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(kafkaSpoutRetryService27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(strArray51);
        org.junit.Assert.assertTrue("'" + boolean53 + "' != '" + true + "'", boolean53 == true);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strArray69);
        org.junit.Assert.assertTrue("'" + boolean71 + "' != '" + true + "'", boolean71 == true);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strArray90);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy96 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy96.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test03256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03256");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        strBuilder8.valueDes = strSerializableDeserializer11;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService13 = null;
        strBuilder8.retryService = kafkaSpoutRetryService13;
        java.util.Map<java.lang.String, java.lang.Object> strMap15 = strBuilder8.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = strBuilder8.keyDes;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc17 = null;
        org.apache.storm.tuple.Fields fields18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder8.setRecordTranslator(strConsumerRecordFunc17, fields18, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder8.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap15);
        org.junit.Assert.assertNull(strSerializableDeserializer16);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test03257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03257");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        java.lang.String str10 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 32;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 100;
        strKafkaSpoutConfig0.maxRetries = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str10 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str10, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03258");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.util.AbstractList<java.lang.String>> strMapKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.util.AbstractList<java.lang.String>>();
    }

    @Test
    public void test03259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03259");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.io.Serializable> strComparableBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, java.io.Serializable> strComparableKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, java.io.Serializable>(strComparableBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03260");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long11 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer12 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long13 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strDeserializer12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
    }

    @Test
    public void test03261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03261");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer5, strCollectionSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer2, strListSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder24.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder30.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strBuilder38.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder38.setProp(strMap50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder30.setProp(strMap50);
        org.apache.storm.kafka.spout.Subscription subscription53 = strBuilder30.subscription;
        strBuilder30.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig56 = strBuilder30.build();
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder62.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass68 = strBuilder62.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder62.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator71 = strBuilder62.translator;
        strBuilder30.translator = strRecordTranslator71;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder17.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder30);
        int int74 = strBuilder73.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder73.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService77 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = strBuilder76.setRetry(kafkaSpoutRetryService77);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(subscription53);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig56);
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(wildcardClass68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strRecordTranslator71);
        org.junit.Assert.assertNotNull(strBuilder73);
// flaky:         org.junit.Assert.assertTrue("'" + int74 + "' != '" + 100 + "'", int74 == 100);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test03262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03262");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "hi!", "hi!", "" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setMaxRetries(0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder12.setGroupId("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(wildcardClass17);
    }

    @Test
    public void test03263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03263");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strBuilder5.firstPollOffsetStrategy;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder16.kafkaProps;
        strBuilder5.kafkaProps = strMap17;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig19.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = strKafkaSpoutConfig19.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService23 = strKafkaSpoutConfig19.getRetryService();
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        strBuilder29.keyDes = strSerializableDeserializer30;
        long long32 = strBuilder29.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder29.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern38);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator40 = strBuilder39.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder29.setRecordTranslator(strRecordTranslator40);
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder41.kafkaProps;
        strKafkaSpoutConfig19.kafkaProps = strMap42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder5.setProp(strMap42);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer52 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer53 = null;
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        strBuilder59.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = strBuilder59.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder59.setPartitionRefreshPeriodMs((long) 1);
        int int65 = strBuilder64.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder64.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder64.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder71.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer52, strSerializableDeserializer53, subscription72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String> strListBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer49, strSerializableDeserializer50, subscription72);
        java.lang.String str75 = subscription72.getTopicsString();
        java.lang.String str76 = subscription72.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer46, strSerializableDeserializer47, subscription72);
        strBuilder5.subscription = subscription72;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertNull(kafkaSpoutRetryService23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + long32 + "' != '" + 32L + "'", long32 == 32L);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strRecordTranslator40);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertEquals("'" + str75 + "' != '" + "" + "'", str75, "");
        org.junit.Assert.assertEquals("'" + str76 + "' != '" + "" + "'", str76, "");
    }

    @Test
    public void test03264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03264");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        strBuilder4.partitionRefreshPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strBuilder8.retryService = kafkaSpoutRetryService9;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        strBuilder16.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setPartitionRefreshPeriodMs((long) 1);
        int int22 = strBuilder21.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int28 = strKafkaSpoutConfig27.getMaxTupleRetries();
        strKafkaSpoutConfig27.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = strKafkaSpoutConfig27.retryService;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        strKafkaSpoutConfig27.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        int int43 = strBuilder42.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = strBuilder42.valueDes;
        strBuilder42.maxUncommittedOffsets = '4';
        int int47 = strBuilder42.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder42.setPollTimeoutMs(97L);
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass56 = strBuilder55.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription57 = strBuilder55.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder55.setMaxRetries((-1));
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer62 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer63 = null;
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass70 = strBuilder69.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc71 = null;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder69.setRecordTranslator(strConsumerRecordFunc71, fields72, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription75 = strBuilder74.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder76 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer62, strListSerializableDeserializer63, subscription75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder55.setProp("hi!", (java.lang.Object) subscription75);
        java.util.regex.Pattern pattern79 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern79);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator81 = strBuilder80.translator;
        org.apache.storm.tuple.Fields fields82 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder77.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator81, fields82);
        org.apache.storm.tuple.Fields fields84 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder86 = strBuilder42.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator81, fields84, "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder8.setRecordTranslator(strRecordTranslator81);
        long long88 = strBuilder87.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer44);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 52 + "'", int47 == 52);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(wildcardClass56);
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(subscription75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strRecordTranslator81);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strBuilder86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertTrue("'" + long88 + "' != '" + 0L + "'", long88 == 0L);
    }

    @Test
    public void test03265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03265");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass5 = strKafkaSpoutConfig0.valueDesClazz;
        long long6 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        int int7 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(wildcardClass5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService8);
        org.junit.Assert.assertNull(objSerializableDeserializer9);
    }

    @Test
    public void test03266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03266");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        int int11 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 0;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test03267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03267");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig8.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strKafkaSpoutConfig8.retryService;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder16.firstPollOffsetStrategy = firstPollOffsetStrategy18;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder16.setProp(strMap28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy30 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder29.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        strKafkaSpoutConfig8.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy30;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = strBuilder5.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        strBuilder5.valueDes = strSerializableDeserializer35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass37 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder5.setFetchMinBytes(32);
        strBuilder5.maxRetries = 2147483647;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy18 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy18.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy30 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy30.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy34 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy34.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test03268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03268");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>();
        int int9 = strBuilder8.maxRetries;
        strBuilder8.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.Subscription subscription12 = strBuilder8.subscription;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator19 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder18.setRecordTranslator(strRecordTranslator19);
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc28 = null;
        org.apache.storm.tuple.Fields fields29 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setRecordTranslator(strConsumerRecordFunc28, fields29, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.Subscription subscription32 = strBuilder31.subscription;
        strBuilder20.subscription = subscription32;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder39.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder53.setProp(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder45.setProp(strMap65);
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder20.setProp(strMap68);
        strBuilder8.kafkaProps = strMap68;
        strKafkaSpoutConfig0.kafkaProps = strMap68;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(strMap7);
// flaky:         org.junit.Assert.assertTrue("'" + int9 + "' != '" + 100 + "'", int9 == 100);
        org.junit.Assert.assertNull(subscription12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(subscription32);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder69);
    }

    @Test
    public void test03269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03269");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        strBuilder4.keyDes = strSerializableDeserializer5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strBuilder4.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = strBuilder4.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder4.setOffsetCommitPeriodMs((long) (byte) 0);
        strBuilder13.pollTimeoutMs = 2147483647L;
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(strSerializableDeserializer11);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test03270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03270");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.lang.String> strMapKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.lang.String>();
    }

    @Test
    public void test03271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03271");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.Subscription subscription8 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = strKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String str11 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(subscription8);
        org.junit.Assert.assertNull(kafkaSpoutRetryService9);
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertEquals("'" + str11 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str11, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03272");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder5.kafkaProps;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap30);
    }

    @Test
    public void test03273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03273");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        strBuilder33.partitionRefreshPeriodMs = 35L;
        strBuilder33.partitionRefreshPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Properties properties40 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder33.setProp(properties40);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test03274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03274");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_OFFSET_COMMIT_PERIOD_MS = (byte) 1;
    }

    @Test
    public void test03275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03275");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        strBuilder11.maxRetries = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxRetries(0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder16.setGroupId("hi!");
        long long20 = strBuilder16.pollTimeoutMs;
        long long21 = strBuilder16.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 1L + "'", long21 == 1L);
    }

    @Test
    public void test03276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03276");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strBuilder5.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder5.retryService = kafkaSpoutRetryService11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setMaxRetries((int) (short) 0);
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        strBuilder22.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = strBuilder22.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder22.setPartitionRefreshPeriodMs((long) 1);
        int int28 = strBuilder27.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig33 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int34 = strKafkaSpoutConfig33.getMaxTupleRetries();
        strKafkaSpoutConfig33.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService37 = strKafkaSpoutConfig33.retryService;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder43.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        strKafkaSpoutConfig33.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder27.setFirstPollOffsetStrategy(firstPollOffsetStrategy45);
        int int49 = strBuilder48.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = strBuilder48.firstPollOffsetStrategy;
        int int51 = strBuilder48.maxUncommittedOffsets;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        strBuilder57.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap60 = strBuilder57.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder57.setPartitionRefreshPeriodMs((long) 1);
        int int63 = strBuilder62.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder62.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder62.setSecurityProtocol("hi!");
        long long70 = strBuilder69.pollTimeoutMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator71 = strBuilder69.translator;
        org.apache.storm.tuple.Fields fields72 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder48.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator71, fields72);
        strBuilder14.translator = strRecordTranslator71;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 10 + "'", int51 == 10);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strMap60);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + (-1) + "'", int63 == (-1));
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(strRecordTranslator71);
        org.junit.Assert.assertNotNull(strBuilder73);
    }

    @Test
    public void test03277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03277");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>();
    }

    @Test
    public void test03278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03278");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03279");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setFetchMinBytes(100);
        long long18 = strBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setOffsetCommitPeriodMs((long) (short) -1);
        long long21 = strBuilder17.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService26 = strBuilder23.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(strBuilder20);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService26);
    }

    @Test
    public void test03280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03280");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder29.setMaxPollRecords(2147483647);
        long long34 = strBuilder33.offsetCommitPeriodMs;
        long long35 = strBuilder33.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder33.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 1L + "'", long34 == 1L);
// flaky:         org.junit.Assert.assertTrue("'" + long35 + "' != '" + 32L + "'", long35 == 32L);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test03281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03281");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long16 = strBuilder11.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test03282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03282");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer20 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer21 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer20, strListSerializableDeserializer21, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer17, strSerializableDeserializer18, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer13, strSerializableDeserializer14, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]> charSequenceBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.CharSequence, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", charSequenceSerializableDeserializer10, strArraySerializableDeserializer11, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.Subscription> objBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, org.apache.storm.kafka.spout.Subscription>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", objSerializableDeserializer7, subscriptionSerializableDeserializer8, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Object> randomAccessBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.Object>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer1, objSerializableDeserializer2, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.RandomAccess, java.lang.Object> randomAccessKafkaSpoutConfig32 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.RandomAccess, java.lang.Object>(randomAccessBuilder31);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder26);
    }

    @Test
    public void test03283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03283");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        long long8 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 97;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer11 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer12 = strKafkaSpoutConfig0.getKeyDeserializer();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass13 = strKafkaSpoutConfig0.valueDesClazz;
        int int14 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator15 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator15;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strDeserializer11);
        org.junit.Assert.assertNull(strDeserializer12);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test03284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03284");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long6 = strKafkaSpoutConfig0.getPollTimeoutMs();
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long8 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test03285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03285");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = null;
        strBuilder11.retryService = kafkaSpoutRetryService20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder11.setMaxPartitionFectchBytes(100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer29 = null;
        java.util.regex.Pattern pattern30 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.ArrayList<java.lang.String>> firstPollOffsetStrategyEnumBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer28, strListSerializableDeserializer29, pattern30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder23.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder23.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder36.maxUncommittedOffsets = 32;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder36);
    }

    @Test
    public void test03286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03286");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder18.partitionRefreshPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = strBuilder18.retryService;
        strBuilder18.partitionRefreshPeriodMs = (short) 100;
        strBuilder18.maxUncommittedOffsets = 1;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        strBuilder31.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = strBuilder31.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        org.apache.storm.kafka.spout.Subscription subscription38 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer36, strSerializableDeserializer37, subscription38);
        strBuilder39.partitionRefreshPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder39.setFetchMinBytes((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = null;
        strBuilder43.retryService = kafkaSpoutRetryService44;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator46 = strBuilder43.translator;
        org.apache.storm.tuple.Fields fields47 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator46, fields47);
        strBuilder18.translator = strRecordTranslator46;
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder18);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService21);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNull(strSerializableDeserializer34);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strRecordTranslator46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test03287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03287");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer12, strSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList16);
        long long24 = strBuilder23.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder21);
// flaky:         org.junit.Assert.assertTrue("'" + long24 + "' != '" + 32L + "'", long24 == 32L);
    }

    @Test
    public void test03288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03288");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer5, strIterableSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strBuilder26.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setPartitionRefreshPeriodMs((long) 1);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int38 = strKafkaSpoutConfig37.getMaxTupleRetries();
        strKafkaSpoutConfig37.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService41 = strKafkaSpoutConfig37.retryService;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass48 = strBuilder47.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder47.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        strKafkaSpoutConfig37.firstPollOffsetStrategy = firstPollOffsetStrategy49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy49);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer53 = strBuilder31.valueDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator54 = strBuilder31.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder17.setRecordTranslator(strRecordTranslator54);
        long long56 = strBuilder17.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService41);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(wildcardClass48);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy49 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy49.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNull(strSerializableDeserializer53);
        org.junit.Assert.assertNotNull(strRecordTranslator54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 1L + "'", long56 == 1L);
    }

    @Test
    public void test03289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03289");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strKafkaSpoutConfig0.getKafkaProps();
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder8.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray19 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList20 = new java.util.ArrayList<java.lang.String>();
        boolean boolean21 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList20, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList20);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass23 = strBuilder22.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder22.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        java.lang.String[] strArray28 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList29 = new java.util.ArrayList<java.lang.String>();
        boolean boolean30 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList29, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList29);
        strBuilder31.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder31.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder22.setProp(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder14.setProp(strMap34);
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap34);
        strKafkaSpoutConfig0.kafkaProps = strMap34;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator39 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator39;
        int int41 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertTrue("'" + boolean21 + "' != '" + true + "'", boolean21 == true);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(wildcardClass23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertTrue("'" + boolean30 + "' != '" + true + "'", boolean30 == true);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test03290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03290");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder36.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder36.setFetchMinBytes(32);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strBuilder39);
    }

    @Test
    public void test03291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03291");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder5.maxRetries = (-1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test03292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03292");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        long long6 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strKafkaSpoutConfig0.keyDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test03293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03293");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setPartitionRefreshPeriodMs((long) 1);
        int int25 = strBuilder24.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder24.setSecurityProtocol("hi!");
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder37.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder43.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass52 = strBuilder51.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        strBuilder60.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder51.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder43.setProp(strMap63);
        org.apache.storm.kafka.spout.Subscription subscription66 = strBuilder43.subscription;
        strBuilder31.subscription = subscription66;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, subscription66);
        strBuilder5.subscription = subscription66;
        strBuilder5.maxUncommittedOffsets = 35;
        int int72 = strBuilder5.maxUncommittedOffsets;
        strBuilder5.offsetCommitPeriodMs = 35L;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 35 + "'", int72 == 35);
    }

    @Test
    public void test03294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03294");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setMaxPollRecords((int) '#');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setMaxPollRecords(0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test03295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03295");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder8.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig14 = strBuilder13.build();
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig14);
    }

    @Test
    public void test03296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03296");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        strBuilder16.retryService = kafkaSpoutRetryService17;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap19;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strKafkaSpoutConfig0.getKafkaProps();
        int int22 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int23 = strKafkaSpoutConfig0.getMaxTupleRetries();
        java.lang.String str24 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertEquals("'" + str24 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str24, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03297");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess> subscriptionBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.util.RandomAccess>();
    }

    @Test
    public void test03298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03298");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setPartitionRefreshPeriodMs((long) 1);
        int int25 = strBuilder24.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder24.setSecurityProtocol("hi!");
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder37.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder43.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray48 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList49 = new java.util.ArrayList<java.lang.String>();
        boolean boolean50 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList49, strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList49);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass52 = strBuilder51.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy53;
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        strBuilder60.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder51.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder43.setProp(strMap63);
        org.apache.storm.kafka.spout.Subscription subscription66 = strBuilder43.subscription;
        strBuilder31.subscription = subscription66;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, subscription66);
        strBuilder5.subscription = subscription66;
        strBuilder5.maxUncommittedOffsets = 35;
        strBuilder5.maxRetries = (byte) 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder5.setSSLKeystore("hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder5.maxUncommittedOffsets = ' ';
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertTrue("'" + boolean50 + "' != '" + true + "'", boolean50 == true);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(wildcardClass52);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy53 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy53.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(subscription66);
        org.junit.Assert.assertNotNull(strBuilder76);
    }

    @Test
    public void test03299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03299");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int9 = strKafkaSpoutConfig8.getMaxTupleRetries();
        strKafkaSpoutConfig8.maxRetries = 1;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder17.kafkaProps;
        strKafkaSpoutConfig8.kafkaProps = strMap18;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strKafkaSpoutConfig8.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strKafkaSpoutConfig8.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap21;
        int int23 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
    }

    @Test
    public void test03300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03300");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSecurityProtocol("hi!");
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder18.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder18.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig28.maxRetries = (short) 1;
        long long31 = strKafkaSpoutConfig28.offsetCommitPeriodMs;
        java.lang.String str32 = strKafkaSpoutConfig28.toString();
        int int33 = strKafkaSpoutConfig28.getMaxTupleRetries();
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPartitionRefreshPeriodMs((long) 1);
        int int45 = strBuilder44.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder44.setSecurityProtocol("hi!");
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        strBuilder57.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder57.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder63.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass72 = strBuilder71.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder71.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList78);
        strBuilder80.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = strBuilder80.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder71.setProp(strMap83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = strBuilder63.setProp(strMap83);
        org.apache.storm.kafka.spout.Subscription subscription86 = strBuilder63.subscription;
        strBuilder51.subscription = subscription86;
        subscription86.refreshAssignment();
        strKafkaSpoutConfig28.subscription = subscription86;
        strBuilder18.subscription = subscription86;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator91 = strBuilder18.translator;
        org.apache.storm.tuple.Fields fields92 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder5.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator91, fields92, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer95 = strBuilder5.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder98 = strBuilder5.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        int int99 = strBuilder98.maxRetries;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strMap21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertEquals("'" + str32 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str32, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 1 + "'", int33 == 1);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(subscription86);
        org.junit.Assert.assertNotNull(strRecordTranslator91);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertNull(strSerializableDeserializer95);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertTrue("'" + int99 + "' != '" + (-1) + "'", int99 == (-1));
    }

    @Test
    public void test03301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03301");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer27 = strKafkaSpoutConfig0.getValueDeserializer();
        long long28 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass29 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objDeserializer27);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNull(wildcardClass29);
    }

    @Test
    public void test03302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03302");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setPartitionRefreshPeriodMs((long) 10);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test03303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03303");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        int int27 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long28 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy29 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long30 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy29 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy29.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test03304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03304");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer11, strListSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer5, strKafkaSpoutConfigSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer25 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer26 = null;
        java.lang.String[] strArray28 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer25, strListSerializableDeserializer26, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer22, strSerializableDeserializer23, strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray28);
        java.lang.String[] strArray35 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder36.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService39 = strBuilder38.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder38.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator42 = strBuilder41.translator;
        strBuilder31.translator = strRecordTranslator42;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder31.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setOffsetCommitPeriodMs(0L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer50 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer51 = null;
        java.lang.String[] strArray53 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList54 = new java.util.ArrayList<java.lang.String>();
        boolean boolean55 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList54, strArray53);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer50, strSerializableDeserializer51, (java.util.Collection<java.lang.String>) strList54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList54);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator58 = strBuilder57.translator;
        org.apache.storm.tuple.Fields fields59 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder47.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator58, fields59);
        strBuilder19.translator = strRecordTranslator58;
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strRecordTranslator42);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray53);
        org.junit.Assert.assertTrue("'" + boolean55 + "' != '" + true + "'", boolean55 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strRecordTranslator58);
        org.junit.Assert.assertNotNull(strBuilder60);
    }

    @Test
    public void test03305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03305");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", false, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03306");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, java.lang.Iterable<java.lang.String>> strComparableKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Comparable<java.lang.String>, java.lang.Iterable<java.lang.String>>();
    }

    @Test
    public void test03307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03307");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray20 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer8, strRecordTranslatorSerializableDeserializer9, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer5, strComparableSerializableDeserializer6, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer2, strMapSerializableDeserializer3, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray20);
        int int29 = strBuilder28.maxRetries;
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
// flaky:         org.junit.Assert.assertTrue("'" + int29 + "' != '" + 100 + "'", int29 == 100);
    }

    @Test
    public void test03308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03308");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        strBuilder4.partitionRefreshPeriodMs = 0L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setPartitionRefreshPeriodMs((long) 35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder8.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_LATEST, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int14 = strKafkaSpoutConfig13.getMaxTupleRetries();
        strKafkaSpoutConfig13.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = strKafkaSpoutConfig13.keyDes;
        int int18 = strKafkaSpoutConfig13.maxUncommittedOffsets;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = null;
        strBuilder29.retryService = kafkaSpoutRetryService30;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        strKafkaSpoutConfig13.kafkaProps = strMap32;
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap32);
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder8.setProp(strMap34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder36.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        long long40 = strBuilder36.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer17);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strMap34);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 1L + "'", long40 == 1L);
    }

    @Test
    public void test03309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03309");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig9.maxRetries = (short) 1;
        long long12 = strKafkaSpoutConfig9.offsetCommitPeriodMs;
        java.lang.String str13 = strKafkaSpoutConfig9.toString();
        int int14 = strKafkaSpoutConfig9.getMaxTupleRetries();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        strBuilder20.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setPartitionRefreshPeriodMs((long) 1);
        int int26 = strBuilder25.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder25.setSecurityProtocol("hi!");
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        strBuilder38.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder38.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass53 = strBuilder52.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder52.firstPollOffsetStrategy = firstPollOffsetStrategy54;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strBuilder61.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder52.setProp(strMap64);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder44.setProp(strMap64);
        org.apache.storm.kafka.spout.Subscription subscription67 = strBuilder44.subscription;
        strBuilder32.subscription = subscription67;
        subscription67.refreshAssignment();
        strKafkaSpoutConfig9.subscription = subscription67;
        strBuilder5.subscription = subscription67;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder73 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = strBuilder5.setPollTimeoutMs((long) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder5.setPollTimeoutMs((long) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder5.setMaxRetries((int) (short) 100);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator80 = strBuilder79.translator;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 1 + "'", int14 == 1);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(wildcardClass53);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy54 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy54.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(subscription67);
        org.junit.Assert.assertNotNull(strBuilder73);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strRecordTranslator80);
    }

    @Test
    public void test03310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03310");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) -1;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        int int15 = strBuilder14.maxRetries;
        org.apache.storm.kafka.spout.Subscription subscription16 = strBuilder14.subscription;
        java.util.regex.Pattern pattern18 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int21 = strKafkaSpoutConfig20.getMaxTupleRetries();
        strKafkaSpoutConfig20.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig20.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig20.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int29 = strKafkaSpoutConfig28.getMaxTupleRetries();
        long long30 = strKafkaSpoutConfig28.getPollTimeoutMs();
        strKafkaSpoutConfig28.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy33 = strKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator34 = strKafkaSpoutConfig28.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = strKafkaSpoutConfig28.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig36 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int37 = strKafkaSpoutConfig36.getMaxTupleRetries();
        strKafkaSpoutConfig36.maxRetries = 1;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strBuilder45.kafkaProps;
        strKafkaSpoutConfig36.kafkaProps = strMap46;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strKafkaSpoutConfig36.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strKafkaSpoutConfig36.kafkaProps;
        strKafkaSpoutConfig28.kafkaProps = strMap49;
        strKafkaSpoutConfig20.kafkaProps = strMap49;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder19.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder14.setProp(strMap49);
        java.lang.String[] strArray56 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList57 = new java.util.ArrayList<java.lang.String>();
        boolean boolean58 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList57, strArray56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList57);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder59.firstPollOffsetStrategy = firstPollOffsetStrategy61;
        java.lang.String[] strArray65 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList66 = new java.util.ArrayList<java.lang.String>();
        boolean boolean67 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList66, strArray65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList66);
        strBuilder68.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder68.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder72 = strBuilder59.setProp(strMap71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder72.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer77 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strDeserializer6);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
// flaky:         org.junit.Assert.assertTrue("'" + int15 + "' != '" + 100 + "'", int15 == 100);
        org.junit.Assert.assertNotNull(subscription16);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy33);
        org.junit.Assert.assertNull(strRecordTranslator34);
        org.junit.Assert.assertNull(firstPollOffsetStrategy35);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray56);
        org.junit.Assert.assertTrue("'" + boolean58 + "' != '" + true + "'", boolean58 == true);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(wildcardClass60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray65);
        org.junit.Assert.assertTrue("'" + boolean67 + "' != '" + true + "'", boolean67 == true);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(strSerializableDeserializer77);
    }

    @Test
    public void test03311() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03311");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.kafkaProps;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test03312() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03312");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable> strMapBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer1, serializableSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable> strMapKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable>(strMapBuilder4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable> strMapKafkaSpoutConfig6 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.Map<java.lang.String, java.lang.Object>, java.io.Serializable>(strMapBuilder4);
    }

    @Test
    public void test03313() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03313");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder10.retryService = kafkaSpoutRetryService11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        strBuilder10.keyDes = strSerializableDeserializer14;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
    }

    @Test
    public void test03314() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03314");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder5.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        strBuilder8.keyDes = strSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder8.setMaxUncommittedOffsets((int) (short) 1);
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        strBuilder18.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder18.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder18.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder18.maxRetries = 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder18.setMaxPollRecords((int) (byte) 10);
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass35 = strBuilder34.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder34.firstPollOffsetStrategy = firstPollOffsetStrategy36;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder34.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder34.setMaxPartitionFectchBytes((int) (short) 10);
        int int44 = strBuilder34.maxRetries;
        java.lang.String[] strArray48 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService52 = strBuilder51.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder51.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder51.setFetchMinBytes((int) (short) 10);
        int int57 = strBuilder51.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy58;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder8.setFirstPollOffsetStrategy(firstPollOffsetStrategy58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder62.setMaxPollRecords((int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(wildcardClass35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
// flaky:         org.junit.Assert.assertTrue("'" + int44 + "' != '" + 100 + "'", int44 == 100);
        org.junit.Assert.assertNotNull(strArray48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 1 + "'", int57 == 1);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy58 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy58.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strBuilder64);
    }

    @Test
    public void test03315() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03315");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        int int2 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        java.lang.String[] strArray7 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList8);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass11 = strBuilder10.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy12;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        strBuilder19.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap22 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder10.setProp(strMap22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder23.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy24;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer27 = strKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService29 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertTrue("'" + int2 + "' != '" + 0 + "'", int2 == 0);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(wildcardClass11);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy12 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy12.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy24 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy24.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNull(objDeserializer27);
        org.junit.Assert.assertNull(strMap28);
        org.junit.Assert.assertNull(kafkaSpoutRetryService29);
    }

    @Test
    public void test03316() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03316");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPollTimeoutMs((long) 0);
        java.util.regex.Pattern pattern14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern14);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator16 = strBuilder15.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder5.setRecordTranslator(strRecordTranslator16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setMaxUncommittedOffsets((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder17.setMaxUncommittedOffsets((int) (byte) 1);
        org.apache.storm.kafka.spout.Subscription subscription22 = strBuilder17.subscription;
        org.apache.storm.kafka.spout.Subscription subscription23 = null;
        strBuilder17.subscription = subscription23;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder17.setPartitionRefreshPeriodMs(0L);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder26.setMaxPollRecords((int) (byte) 1);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strRecordTranslator16);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(subscription22);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test03317() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03317");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer1 = strKafkaSpoutConfig0.getValueDeserializer();
        java.util.Map<java.lang.String, java.lang.Object> strMap2 = strKafkaSpoutConfig0.getKafkaProps();
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass4 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer7, charSequenceSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder18.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = strBuilder23.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap24;
        java.lang.String str26 = strKafkaSpoutConfig0.getConsumerGroupId();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer27;
        org.junit.Assert.assertNull(objDeserializer1);
        org.junit.Assert.assertNull(strMap2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNull(str26);
    }

    @Test
    public void test03318() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03318");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: ");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03319() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03319");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        int int17 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 1 + "'", int17 == 1);
    }

    @Test
    public void test03320() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03320");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setMaxUncommittedOffsets(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder31.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strBuilder31.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test03321() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03321");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.io.Serializable> strKafkaSpoutConfigKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.io.Serializable>();
    }

    @Test
    public void test03322() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03322");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        long long8 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap9 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 1L + "'", long8 == 1L);
        org.junit.Assert.assertNull(strMap9);
    }

    @Test
    public void test03323() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03323");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03324() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03324");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc5 = null;
        org.apache.storm.tuple.Fields fields6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = strBuilder4.setRecordTranslator(strConsumerRecordFunc5, fields6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setMaxPollRecords(97);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setBootstrapServers("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder12.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!,KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder15);
    }

    @Test
    public void test03325() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03325");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strBuilder17.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder10.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService24);
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder10.setGroupId("");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = strBuilder10.keyDes;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNull(strSerializableDeserializer30);
    }

    @Test
    public void test03326() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03326");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer10;
        strKafkaSpoutConfig0.pollTimeoutMs = 52;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass14 = strKafkaSpoutConfig0.valueDesClazz;
        java.lang.String str15 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(wildcardClass9);
        org.junit.Assert.assertNull(wildcardClass14);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03327() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03327");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig3.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer5 = strKafkaSpoutConfig3.getKeyDeserializer();
        int int6 = strKafkaSpoutConfig3.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig3.translator;
        strKafkaSpoutConfig3.pollTimeoutMs = (byte) 1;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = null;
        strKafkaSpoutConfig3.translator = strRecordTranslator10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = strKafkaSpoutConfig3.getFirstPollOffsetStrategy();
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass19 = strBuilder18.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription20 = strBuilder18.subscription;
        java.lang.String str21 = subscription20.getTopicsString();
        strKafkaSpoutConfig3.subscription = subscription20;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription20);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertNull(strDeserializer5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertNotNull(subscription20);
        org.junit.Assert.assertEquals("'" + str21 + "' != '" + "" + "'", str21, "");
    }

    @Test
    public void test03328() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03328");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer9;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator13 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNull(strRecordTranslator13);
    }

    @Test
    public void test03329() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03329");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass9 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNull(wildcardClass9);
    }

    @Test
    public void test03330() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03330");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer6 = null;
        java.lang.String[] strArray10 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer5, strArraySerializableDeserializer6, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer2, strArraySerializableDeserializer3, (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList11);
        org.apache.storm.kafka.spout.Subscription subscription17 = strBuilder16.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        strBuilder27.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder27.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder33.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder33.setMaxPollRecords(100);
        int int38 = strBuilder33.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder33.setFetchMinBytes(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder40.setSSLTruststore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder40.setGroupId("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxPartitionFectchBytes(35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder16.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder45);
        strBuilder48.maxUncommittedOffsets = 32;
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(subscription17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 10 + "'", int38 == 10);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test03331() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03331");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> firstPollOffsetStrategyEnumSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray23 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer18, strSerializableDeserializer19, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer15, strSerializableDeserializer16, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> firstPollOffsetStrategyEnumBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", firstPollOffsetStrategyEnumSerializableDeserializer11, strRecordTranslatorSerializableDeserializer12, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>> strListBuilder29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer8, strComparableSerializableDeserializer9, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>> strComparableBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.Map<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer5, strMapSerializableDeserializer6, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder32.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test03332() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03332");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setMaxRetries(35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig37 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig37.maxRetries = (short) 1;
        long long40 = strKafkaSpoutConfig37.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass41 = strKafkaSpoutConfig37.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription42 = strKafkaSpoutConfig37.getSubscription();
        java.lang.String[] strArray46 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray46);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder47.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPollRecords((int) '4');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer52 = strBuilder51.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int54 = strKafkaSpoutConfig53.getMaxTupleRetries();
        strKafkaSpoutConfig53.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService57 = strKafkaSpoutConfig53.retryService;
        java.lang.String[] strArray60 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList61 = new java.util.ArrayList<java.lang.String>();
        boolean boolean62 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList61, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList61);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass64 = strBuilder63.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder63.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        strKafkaSpoutConfig53.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        strKafkaSpoutConfig37.firstPollOffsetStrategy = firstPollOffsetStrategy65;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder31.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        java.lang.String[] strArray74 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList75);
        strBuilder77.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strBuilder77.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder77.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService83 = null;
        strBuilder82.retryService = kafkaSpoutRetryService83;
        java.util.Map<java.lang.String, java.lang.Object> strMap85 = strBuilder82.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer86 = null;
        strBuilder82.valueDes = strSerializableDeserializer86;
        strBuilder82.pollTimeoutMs = ' ';
        strBuilder82.offsetCommitPeriodMs = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder92 = strBuilder31.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder82);
        long long93 = strBuilder92.offsetCommitPeriodMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNull(wildcardClass41);
        org.junit.Assert.assertNull(subscription42);
        org.junit.Assert.assertNotNull(strArray46);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNull(strSerializableDeserializer52);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService57);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertTrue("'" + boolean62 + "' != '" + true + "'", boolean62 == true);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(wildcardClass64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strMap85);
        org.junit.Assert.assertNotNull(strBuilder92);
        org.junit.Assert.assertTrue("'" + long93 + "' != '" + 1L + "'", long93 == 1L);
    }

    @Test
    public void test03333() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03333");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.CharSequence, java.util.ArrayList<java.lang.String>> charSequenceKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.CharSequence, java.util.ArrayList<java.lang.String>>();
    }

    @Test
    public void test03334() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03334");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strListBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strListKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.util.AbstractCollection<java.lang.String>>(strListBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03335() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03335");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass9 = strBuilder8.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder8.firstPollOffsetStrategy = firstPollOffsetStrategy10;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder17.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder8.setProp(strMap20);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator22 = null;
        strBuilder8.translator = strRecordTranslator22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator25 = strKafkaSpoutConfig24.translator;
        long long26 = strKafkaSpoutConfig24.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strKafkaSpoutConfig24.kafkaProps;
        java.lang.String str28 = strKafkaSpoutConfig24.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer29 = null;
        strKafkaSpoutConfig24.valueDes = objSerializableDeserializer29;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        strBuilder42.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = strBuilder42.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder42.setPartitionRefreshPeriodMs((long) 1);
        int int48 = strBuilder47.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder47.setSecurityProtocol("hi!");
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        strBuilder60.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder60.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder66.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray71 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList72 = new java.util.ArrayList<java.lang.String>();
        boolean boolean73 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList72, strArray71);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList72);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass75 = strBuilder74.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy76 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder74.firstPollOffsetStrategy = firstPollOffsetStrategy76;
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList81);
        strBuilder83.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = strBuilder83.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder74.setProp(strMap86);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder66.setProp(strMap86);
        org.apache.storm.kafka.spout.Subscription subscription89 = strBuilder66.subscription;
        strBuilder54.subscription = subscription89;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer35, strSerializableDeserializer36, subscription89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder92 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer32, strSerializableDeserializer33, subscription89);
        strKafkaSpoutConfig24.subscription = subscription89;
        strBuilder8.subscription = subscription89;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, subscription89);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder95.setGroupId("hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass98 = strBuilder95.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy99 = strBuilder95.firstPollOffsetStrategy;
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(wildcardClass9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNull(strRecordTranslator25);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNull(strMap27);
        org.junit.Assert.assertEquals("'" + str28 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str28, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
        org.junit.Assert.assertNotNull(strArray71);
        org.junit.Assert.assertTrue("'" + boolean73 + "' != '" + true + "'", boolean73 == true);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(wildcardClass75);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy76 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy76.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(subscription89);
        org.junit.Assert.assertNotNull(strBuilder97);
        org.junit.Assert.assertNull(wildcardClass98);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy99 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy99.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test03336() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03336");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig22.maxRetries = (short) 1;
        long long25 = strKafkaSpoutConfig22.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strKafkaSpoutConfig22.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator28 = strKafkaSpoutConfig27.translator;
        long long29 = strKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strKafkaSpoutConfig27.kafkaProps;
        java.lang.String str31 = strKafkaSpoutConfig27.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strKafkaSpoutConfig27.kafkaProps;
        long long33 = strKafkaSpoutConfig27.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer34 = strKafkaSpoutConfig27.valueDes;
        strKafkaSpoutConfig27.maxUncommittedOffsets = (byte) 1;
        java.lang.String str37 = strKafkaSpoutConfig27.toString();
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        java.util.Map<java.lang.String, java.lang.Object> strMap72 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap69);
        strKafkaSpoutConfig27.kafkaProps = strMap72;
        strKafkaSpoutConfig22.kafkaProps = strMap72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy75 = strKafkaSpoutConfig22.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig22.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer78 = null;
        strKafkaSpoutConfig22.valueDes = objSerializableDeserializer78;
        java.util.Map<java.lang.String, java.lang.Object> strMap80 = strKafkaSpoutConfig22.kafkaProps;
        strBuilder5.kafkaProps = strMap80;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder5.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNull(strMap26);
        org.junit.Assert.assertNull(strRecordTranslator28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNull(strMap30);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str31, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap32);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer34);
        org.junit.Assert.assertEquals("'" + str37 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str37, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMap72);
        org.junit.Assert.assertNull(firstPollOffsetStrategy75);
        org.junit.Assert.assertNotNull(strMap80);
        org.junit.Assert.assertNotNull(strBuilder83);
    }

    @Test
    public void test03337() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03337");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setSSLKeystore("", "", "hi!");
        strBuilder11.maxRetries = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        strBuilder11.valueDes = strSerializableDeserializer23;
        org.apache.storm.kafka.spout.Subscription subscription25 = strBuilder11.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.CharSequence> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, charSequenceSerializableDeserializer5, subscription25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(subscription25);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test03338() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03338");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder5.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        strBuilder21.keyDes = strSerializableDeserializer22;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder21.setMaxRetries((int) '#');
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer34 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer37 = null;
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap46 = strBuilder43.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder43.setPartitionRefreshPeriodMs((long) 1);
        int int49 = strBuilder48.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder48.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder48.setSecurityProtocol("hi!");
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        strBuilder61.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder61.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = strBuilder67.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass76 = strBuilder75.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy77 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder75.firstPollOffsetStrategy = firstPollOffsetStrategy77;
        java.lang.String[] strArray81 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList82 = new java.util.ArrayList<java.lang.String>();
        boolean boolean83 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList82, strArray81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList82);
        strBuilder84.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap87 = strBuilder84.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder75.setProp(strMap87);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder67.setProp(strMap87);
        org.apache.storm.kafka.spout.Subscription subscription90 = strBuilder67.subscription;
        strBuilder55.subscription = subscription90;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence> strMapBuilder92 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer36, charSequenceSerializableDeserializer37, subscription90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.reflect.Type> randomAccessBuilder93 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer33, typeSerializableDeserializer34, subscription90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strCollectionBuilder94 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer30, strBuilderSerializableDeserializer31, subscription90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer27, strSerializableDeserializer28, subscription90);
        strBuilder25.subscription = subscription90;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strMap46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(wildcardClass76);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy77 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy77.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray81);
        org.junit.Assert.assertTrue("'" + boolean83 + "' != '" + true + "'", boolean83 == true);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strMap87);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(subscription90);
    }

    @Test
    public void test03339() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03339");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxPollRecords((int) (short) -1);
        strBuilder6.pollTimeoutMs = 32;
        org.junit.Assert.assertNotNull(strBuilder6);
    }

    @Test
    public void test03340() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03340");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Cloneable> cloneableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer12, strCollectionSerializableDeserializer13, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer9, strListSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.io.Serializable> strRecordTranslatorBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.io.Serializable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strRecordTranslatorSerializableDeserializer4, serializableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Cloneable> strBuilder27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.Cloneable>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, cloneableSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList19);
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test03341() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03341");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer33, strSerializableDeserializer34, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder40.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator43 = strBuilder40.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder31.setRecordTranslator(strRecordTranslator43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig45 = strBuilder44.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder44.setMaxUncommittedOffsets(10);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer49 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer50 = null;
        java.lang.String[] strArray54 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer49, strSerializableDeserializer50, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder56.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray62 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList63 = new java.util.ArrayList<java.lang.String>();
        boolean boolean64 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList63, strArray62);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList63);
        strBuilder65.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap68 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder65.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap71 = strBuilder65.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService72 = null;
        strBuilder65.retryService = kafkaSpoutRetryService72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder58.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = strBuilder74.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer78 = null;
        strBuilder74.valueDes = strSerializableDeserializer78;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder81 = strBuilder74.setMaxUncommittedOffsets((int) (short) 100);
        java.lang.String[] strArray84 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList85 = new java.util.ArrayList<java.lang.String>();
        boolean boolean86 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList85, strArray84);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList85);
        strBuilder87.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder87.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator94 = strBuilder87.translator;
        org.apache.storm.tuple.Fields fields95 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder74.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator94, fields95, "");
        strBuilder44.translator = strRecordTranslator94;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strRecordTranslator43);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strArray62);
        org.junit.Assert.assertTrue("'" + boolean64 + "' != '" + true + "'", boolean64 == true);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strMap68);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strMap71);
        org.junit.Assert.assertNotNull(strBuilder74);
        org.junit.Assert.assertNotNull(strBuilder77);
        org.junit.Assert.assertNotNull(strBuilder81);
        org.junit.Assert.assertNotNull(strArray84);
        org.junit.Assert.assertTrue("'" + boolean86 + "' != '" + true + "'", boolean86 == true);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strRecordTranslator94);
        org.junit.Assert.assertNotNull(strBuilder97);
    }

    @Test
    public void test03342() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03342");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        int int10 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test03343() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03343");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator6 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = strBuilder5.setRecordTranslator(strRecordTranslator6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strBuilder5.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder5.retryService = kafkaSpoutRetryService11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxRetries(1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder14.setMaxRetries((int) (short) 0);
        java.lang.Class<?> wildcardClass17 = strBuilder14.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy10 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy10.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test03344() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03344");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strBuilder5.kafkaProps;
        strBuilder5.partitionRefreshPeriodMs = 97;
        int int9 = strBuilder5.maxUncommittedOffsets;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 10 + "'", int9 == 10);
    }

    @Test
    public void test03345() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03345");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 100;
        long long9 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strSerializableDeserializer11);
    }

    @Test
    public void test03346() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03346");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 1;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
    }

    @Test
    public void test03347() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03347");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder14.setSSLKeystore("", "", "hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass21 = strBuilder20.valueDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription22 = strBuilder20.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Comparable<java.lang.String>> strIterableBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.Comparable<java.lang.String>>("hi!", strIterableSerializableDeserializer7, strComparableSerializableDeserializer8, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription22);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertNotNull(subscription22);
    }

    @Test
    public void test03348() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03348");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.reflect.Type> strBuilderBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.reflect.Type>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strBuilderSerializableDeserializer4, typeSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=10, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList9);
        java.lang.Class<?> wildcardClass14 = strList9.getClass();
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test03349() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03349");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setMaxUncommittedOffsets((int) (byte) 0);
        long long14 = strBuilder13.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder13.setOffsetCommitPeriodMs((long) 97);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test03350() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03350");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> serializableBuilder0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig<java.io.Serializable, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>> serializableKafkaSpoutConfig1 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.io.Serializable, java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>>(serializableBuilder0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03351() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03351");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.maxRetries = ' ';
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.getSubscription();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = strKafkaSpoutConfig0.getRetryService();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass12 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(subscription10);
        org.junit.Assert.assertNull(kafkaSpoutRetryService11);
        org.junit.Assert.assertNull(wildcardClass12);
    }

    @Test
    public void test03352() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03352");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig31 = strBuilder29.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=35, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        strBuilder29.keyDes = strSerializableDeserializer35;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertTrue("'" + int30 + "' != '" + 100 + "'", int30 == 100);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig31);
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test03353() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03353");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        int int3 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        int int4 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription5 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer8;
        int int10 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy11 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNull(subscription5);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertNull(strRecordTranslator7);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy11);
    }

    @Test
    public void test03354() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03354");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.Subscription subscription3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription3);
        int int5 = strBuilder4.maxRetries;
        strBuilder4.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder4.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=-1, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator12 = strBuilder11.translator;
// flaky:         org.junit.Assert.assertTrue("'" + int5 + "' != '" + 100 + "'", int5 == 100);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strRecordTranslator12);
    }

    @Test
    public void test03355() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03355");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.Subscription subscription7 = strBuilder5.subscription;
        int int8 = strBuilder5.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 'a');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder12.maxRetries = 2147483647;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertNotNull(subscription7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 10 + "'", int8 == 10);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test03356() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03356");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.ArrayList<java.lang.String>> firstPollOffsetStrategyEnumKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Enum<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>, java.util.ArrayList<java.lang.String>>();
    }

    @Test
    public void test03357() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03357");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer6 = strKafkaSpoutConfig0.getKeyDeserializer();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) -1;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 30000L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = null;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy15;
        java.lang.String str17 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strDeserializer6);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objSerializableDeserializer10);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03358() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03358");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer8 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(strDeserializer8);
    }

    @Test
    public void test03359() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03359");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        int int8 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str10 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
    }

    @Test
    public void test03360() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03360");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strKafkaSpoutConfig0.keyDesClazz;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        long long7 = strKafkaSpoutConfig0.pollTimeoutMs;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 0;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig0.translator;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator11;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator14 = strKafkaSpoutConfig13.translator;
        long long15 = strKafkaSpoutConfig13.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strKafkaSpoutConfig13.kafkaProps;
        java.lang.String str17 = strKafkaSpoutConfig13.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strKafkaSpoutConfig13.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer19 = strKafkaSpoutConfig13.getValueDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = strKafkaSpoutConfig13.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        strKafkaSpoutConfig13.retryService = kafkaSpoutRetryService21;
        strKafkaSpoutConfig13.partitionRefreshPeriodMs = 141902646130682494L;
        java.lang.String str25 = strKafkaSpoutConfig13.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig29 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int30 = strKafkaSpoutConfig29.getMaxTupleRetries();
        long long31 = strKafkaSpoutConfig29.getPollTimeoutMs();
        strKafkaSpoutConfig29.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy34 = strKafkaSpoutConfig29.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator35 = strKafkaSpoutConfig29.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = strKafkaSpoutConfig29.getFirstPollOffsetStrategy();
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        strBuilder42.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = strBuilder42.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder42.setPartitionRefreshPeriodMs((long) 1);
        int int48 = strBuilder47.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder47.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription55 = strBuilder54.subscription;
        strKafkaSpoutConfig29.subscription = subscription55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String[]> strIterableBuilder57 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Iterable<java.lang.String>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strIterableSerializableDeserializer27, strArraySerializableDeserializer28, subscription55);
        strKafkaSpoutConfig13.subscription = subscription55;
        strKafkaSpoutConfig0.subscription = subscription55;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strRecordTranslator10);
        org.junit.Assert.assertNull(strRecordTranslator14);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNull(strMap16);
        org.junit.Assert.assertEquals("'" + str17 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str17, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap18);
        org.junit.Assert.assertNull(objDeserializer19);
        org.junit.Assert.assertNull(strSerializableDeserializer20);
        org.junit.Assert.assertEquals("'" + str25 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str25, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy34);
        org.junit.Assert.assertNull(strRecordTranslator35);
        org.junit.Assert.assertNull(firstPollOffsetStrategy36);
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(subscription55);
    }

    @Test
    public void test03361() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03361");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String[]> typeBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.Type, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", typeSerializableDeserializer4, strArraySerializableDeserializer5, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        strBuilder19.maxUncommittedOffsets = 10;
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test03362() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03362");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>> strRecordTranslatorSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.lang.Comparable<java.lang.String>> strRecordTranslatorBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strRecordTranslatorSerializableDeserializer1, strComparableSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03363() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03363");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.getKafkaProps();
        long long7 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test03364() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03364");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSecurityProtocol("hi!");
        long long13 = strBuilder5.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator14 = null;
        strBuilder5.translator = strRecordTranslator14;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass16 = strBuilder5.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 1L + "'", long13 == 1L);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test03365() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03365");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        strBuilder11.pollTimeoutMs = 10;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder11.setPartitionRefreshPeriodMs((long) 52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder39.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
    }

    @Test
    public void test03366() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03366");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass4 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService5 = strKafkaSpoutConfig0.getRetryService();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.Subscription subscription10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setRecordTranslator(strConsumerRecordFunc12, fields13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer17, strSerializableDeserializer18, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder32.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setPartitionRefreshPeriodMs((long) 1);
        int int38 = strBuilder37.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        strKafkaSpoutConfig43.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = strKafkaSpoutConfig43.retryService;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = null;
        strBuilder11.keyDes = strSerializableDeserializer61;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder11.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap63);
        strKafkaSpoutConfig0.kafkaProps = strMap64;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer66 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService67 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService67;
        int int69 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
        org.junit.Assert.assertNull(kafkaSpoutRetryService5);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertNull(objDeserializer66);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
    }

    @Test
    public void test03367() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03367");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int9 = strKafkaSpoutConfig8.getMaxTupleRetries();
        long long10 = strKafkaSpoutConfig8.getPollTimeoutMs();
        strKafkaSpoutConfig8.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator14 = strKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = strKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxRetries = 1;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder25.kafkaProps;
        strKafkaSpoutConfig16.kafkaProps = strMap26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strKafkaSpoutConfig16.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig16.kafkaProps;
        strKafkaSpoutConfig8.kafkaProps = strMap29;
        strKafkaSpoutConfig0.kafkaProps = strMap29;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strKafkaSpoutConfig0.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass33 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer36 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int37 = strKafkaSpoutConfig0.getMaxTupleRetries();
        int int38 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.Subscription subscription39 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService40 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNull(strRecordTranslator14);
        org.junit.Assert.assertNull(firstPollOffsetStrategy15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
        org.junit.Assert.assertNull(wildcardClass33);
        org.junit.Assert.assertNull(strDeserializer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNull(subscription39);
        org.junit.Assert.assertNull(kafkaSpoutRetryService40);
    }

    @Test
    public void test03368() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03368");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = strKafkaSpoutConfig0.keyDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.getKafkaProps();
        int int8 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer9 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy10 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer6);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(objDeserializer9);
        org.junit.Assert.assertNull(firstPollOffsetStrategy10);
        org.junit.Assert.assertNull(strRecordTranslator11);
    }

    @Test
    public void test03369() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03369");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder6 = strBuilder4.setMaxRetries((int) (short) 1);
        int int7 = strBuilder6.maxRetries;
        strBuilder6.maxUncommittedOffsets = 0;
        int int10 = strBuilder6.maxRetries;
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder6);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 1 + "'", int7 == 1);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test03370() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03370");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = ' ';
        strKafkaSpoutConfig0.pollTimeoutMs = 30000L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer11 = strKafkaSpoutConfig0.valueDes;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer11);
        org.junit.Assert.assertNull(strMap12);
    }

    @Test
    public void test03371() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03371");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder10.setPartitionRefreshPeriodMs((long) '4');
        org.apache.storm.kafka.spout.Subscription subscription18 = strBuilder17.subscription;
        subscription18.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(subscription18);
    }

    @Test
    public void test03372() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03372");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.Cloneable> strBuilderBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>, java.lang.Cloneable>();
    }

    @Test
    public void test03373() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03373");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, strConsumerRecordFuncSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strListKafkaSpoutConfig20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>(strListBuilder19);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
    }

    @Test
    public void test03374() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03374");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setFetchMinBytes((int) (short) -1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder7.setPollTimeoutMs((long) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = strBuilder11.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setMaxRetries((int) '#');
        java.util.Properties properties18 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder17.setProp(properties18);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNull(strSerializableDeserializer15);
        org.junit.Assert.assertNotNull(strBuilder17);
    }

    @Test
    public void test03375() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03375");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        java.lang.String[] strArray15 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer10, strSerializableDeserializer11, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray15);
        long long21 = strBuilder20.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertNotNull(strBuilder16);
// flaky:         org.junit.Assert.assertTrue("'" + long21 + "' != '" + 32L + "'", long21 == 32L);
    }

    @Test
    public void test03376() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03376");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setMaxRetries((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = strBuilder17.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        strBuilder17.valueDes = strSerializableDeserializer23;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNull(strSerializableDeserializer18);
        org.junit.Assert.assertNotNull(strBuilder22);
    }

    @Test
    public void test03377() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03377");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        strBuilder31.maxUncommittedOffsets = '4';
        long long36 = strBuilder31.offsetCommitPeriodMs;
        int int37 = strBuilder31.maxRetries;
        long long38 = strBuilder31.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder31.setMaxPartitionFectchBytes(35);
        long long41 = strBuilder31.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 1L + "'", long36 == 1L);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test03378() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03378");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03379() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03379");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.ArrayList<java.lang.String>> objBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Object, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", objSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
    }

    @Test
    public void test03380() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03380");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.ArrayList<java.lang.String>> randomAccessBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.util.ArrayList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer1, strListSerializableDeserializer2, pattern3);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.RandomAccess, java.util.ArrayList<java.lang.String>> randomAccessKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.RandomAccess, java.util.ArrayList<java.lang.String>>(randomAccessBuilder4);
    }

    @Test
    public void test03381() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03381");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder23.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap34 = strBuilder23.kafkaProps;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strMap34);
    }

    @Test
    public void test03382() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03382");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.maxRetries = 'a';
        strKafkaSpoutConfig0.maxRetries = 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer11;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
    }

    @Test
    public void test03383() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03383");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer12 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer11, strArraySerializableDeserializer12, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer8, strArraySerializableDeserializer9, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList17);
        long long25 = strBuilder24.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder22);
// flaky:         org.junit.Assert.assertTrue("'" + long25 + "' != '" + 32L + "'", long25 == 32L);
    }

    @Test
    public void test03384() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03384");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        strBuilder11.maxRetries = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxRetries(0);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        strBuilder16.keyDes = strSerializableDeserializer17;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
    }

    @Test
    public void test03385() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03385");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy6 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.Subscription subscription10 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, subscription10);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc12 = null;
        org.apache.storm.tuple.Fields fields13 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setRecordTranslator(strConsumerRecordFunc12, fields13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer17, strSerializableDeserializer18, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder24.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = strBuilder32.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder32.setPartitionRefreshPeriodMs((long) 1);
        int int38 = strBuilder37.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig43 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int44 = strKafkaSpoutConfig43.getMaxTupleRetries();
        strKafkaSpoutConfig43.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService47 = strKafkaSpoutConfig43.retryService;
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig43.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder37.setFirstPollOffsetStrategy(firstPollOffsetStrategy55);
        strBuilder24.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strBuilder11.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        org.apache.storm.kafka.spout.Subscription subscription62 = strKafkaSpoutConfig0.subscription;
        long long63 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(firstPollOffsetStrategy6);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strMap35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + (-1) + "'", int38 == (-1));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNull(subscription62);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
    }

    @Test
    public void test03386() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03386");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>>();
    }

    @Test
    public void test03387() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03387");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer11, strListSerializableDeserializer12, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer8, strSerializableDeserializer9, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strListBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", strListSerializableDeserializer5, strKafkaSpoutConfigSerializableDeserializer6, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray14);
        strBuilder19.maxRetries = 52;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = strBuilder19.retryService;
        int int23 = strBuilder19.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setFetchMinBytes(10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertNotNull(strBuilder19);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService22);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 10 + "'", int23 == 10);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test03388() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03388");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        long long10 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test03389() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03389");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.translator;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        strKafkaSpoutConfig0.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strKafkaSpoutConfig0.keyDes;
        long long11 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService12 = strKafkaSpoutConfig0.retryService;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str13 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 32L + "'", long11 == 32L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService12);
    }

    @Test
    public void test03390() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03390");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer6 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer6;
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.subscription;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertNull(subscription10);
    }

    @Test
    public void test03391() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03391");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        long long3 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int5 = strKafkaSpoutConfig4.getMaxTupleRetries();
        strKafkaSpoutConfig4.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig4.keyDes;
        int int9 = strKafkaSpoutConfig4.maxUncommittedOffsets;
        java.lang.String[] strArray12 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList13 = new java.util.ArrayList<java.lang.String>();
        boolean boolean14 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList13, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList13);
        strBuilder15.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap18 = strBuilder15.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder15.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        strBuilder20.retryService = kafkaSpoutRetryService21;
        java.util.Map<java.lang.String, java.lang.Object> strMap23 = strBuilder20.kafkaProps;
        strKafkaSpoutConfig4.kafkaProps = strMap23;
        java.util.Map<java.lang.String, java.lang.Object> strMap25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap23);
        strKafkaSpoutConfig0.kafkaProps = strMap25;
        strKafkaSpoutConfig0.pollTimeoutMs = ' ';
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator29 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator29;
        java.lang.String str31 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService32;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer34 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertTrue("'" + boolean14 + "' != '" + true + "'", boolean14 == true);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strMap18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap23);
        org.junit.Assert.assertNotNull(strMap25);
        org.junit.Assert.assertEquals("'" + str31 + "' != '" + "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str31, "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer34);
    }

    @Test
    public void test03392() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03392");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setMaxRetries((int) (short) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder13.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long18 = strBuilder13.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder13.setMaxPollRecords(35);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test03393() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03393");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator5;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer7 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strKafkaSpoutConfig0.retryService;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        strBuilder16.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setPartitionRefreshPeriodMs((long) 1);
        int int22 = strBuilder21.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig27 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int28 = strKafkaSpoutConfig27.getMaxTupleRetries();
        strKafkaSpoutConfig27.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = strKafkaSpoutConfig27.retryService;
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        strKafkaSpoutConfig27.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder21.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder42.setPartitionRefreshPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder44.setOffsetCommitPeriodMs((long) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy47 = strBuilder46.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy47;
        long long49 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer51 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer51;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer7);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy47 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy47.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNull(strMap50);
    }

    @Test
    public void test03394() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03394");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass14 = strBuilder13.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = strBuilder13.firstPollOffsetStrategy;
        java.lang.Class<?> wildcardClass16 = strBuilder13.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy15 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy15.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test03395() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03395");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strIterableKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.Iterable<java.lang.String>, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>();
    }

    @Test
    public void test03396() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03396");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Iterable<java.lang.String>> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Iterable<java.lang.String>>();
    }

    @Test
    public void test03397() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03397");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strKafkaSpoutConfig0.keyDesClazz;
        long long7 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        long long8 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03398() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03398");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = strBuilder31.valueDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder31.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setOffsetCommitPeriodMs(1L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig37 = strBuilder36.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder36.setMaxPollRecords(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder39.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass42 = strBuilder39.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNull(strSerializableDeserializer33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test03399() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03399");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer2, charSequenceSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder13.setPartitionRefreshPeriodMs(32L);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = strBuilder13.valueDes;
        strBuilder13.maxRetries = 35;
        java.lang.String[] strArray21 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList22);
        strBuilder24.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap27 = strBuilder24.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder24.setPartitionRefreshPeriodMs((long) 1);
        int int30 = strBuilder29.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder29.setSecurityProtocol("hi!");
        long long37 = strBuilder36.pollTimeoutMs;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator38 = strBuilder36.translator;
        strBuilder13.translator = strRecordTranslator38;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer40 = strBuilder13.valueDes;
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(strSerializableDeserializer16);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strMap27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(strRecordTranslator38);
        org.junit.Assert.assertNull(strSerializableDeserializer40);
    }

    @Test
    public void test03400() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03400");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder31.setPartitionRefreshPeriodMs((long) (short) 0);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
    }

    @Test
    public void test03401() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03401");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_MAX_RETRIES = 97;
    }

    @Test
    public void test03402() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03402");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator7 = null;
        strBuilder5.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets(1);
        long long11 = strBuilder5.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setOffsetCommitPeriodMs((long) 32);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test03403() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03403");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.RandomAccess> randomAccessSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer6 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.CharSequence> randomAccessBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.RandomAccess, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", randomAccessSerializableDeserializer5, charSequenceSerializableDeserializer6, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=LATEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray11);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNull(wildcardClass17);
    }

    @Test
    public void test03404() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03404");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass6 = strKafkaSpoutConfig0.valueDesClazz;
        long long7 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
    }

    @Test
    public void test03405() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03405");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_MAX_RETRIES = 1;
    }

    @Test
    public void test03406() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03406");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        org.apache.storm.kafka.spout.Subscription subscription14 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer12, strSerializableDeserializer13, subscription14);
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc16 = null;
        org.apache.storm.tuple.Fields fields17 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder15.setRecordTranslator(strConsumerRecordFunc16, fields17, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer21, strSerializableDeserializer22, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder28.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setPartitionRefreshPeriodMs((long) 1);
        int int42 = strBuilder41.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder41.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int48 = strKafkaSpoutConfig47.getMaxTupleRetries();
        strKafkaSpoutConfig47.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService51 = strKafkaSpoutConfig47.retryService;
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        strKafkaSpoutConfig47.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder41.setFirstPollOffsetStrategy(firstPollOffsetStrategy59);
        strBuilder28.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        strBuilder15.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        long long66 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer67 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 1L + "'", long66 == 1L);
        org.junit.Assert.assertNull(objSerializableDeserializer67);
    }

    @Test
    public void test03407() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03407");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray19 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer14, strSerializableDeserializer15, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strCollectionBuilder23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer8, strKafkaSpoutConfigSerializableDeserializer9, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer5, strSerializableDeserializer6, strArray19);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=52, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray19);
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("", strSerializableDeserializer1, strSerializableDeserializer2, strArray19);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray19);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder25);
    }

    @Test
    public void test03408() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03408");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, strArray9);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass13 = strBuilder12.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer17 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer20 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer19, strSerializableDeserializer20, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence> strListBuilder26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.CharSequence>("hi!", strListSerializableDeserializer16, charSequenceSerializableDeserializer17, (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder27.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder32.partitionRefreshPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService35 = strBuilder32.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy36 = strBuilder32.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder12.setFirstPollOffsetStrategy(firstPollOffsetStrategy36);
        long long38 = strBuilder12.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig39 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int40 = strKafkaSpoutConfig39.getMaxTupleRetries();
        strKafkaSpoutConfig39.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService43 = strKafkaSpoutConfig39.retryService;
        long long44 = strKafkaSpoutConfig39.offsetCommitPeriodMs;
        java.lang.String str45 = strKafkaSpoutConfig39.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy46 = strKafkaSpoutConfig39.firstPollOffsetStrategy;
        java.lang.String str47 = strKafkaSpoutConfig39.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer48 = strKafkaSpoutConfig39.getKeyDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator49 = null;
        strKafkaSpoutConfig39.translator = strRecordTranslator49;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer51 = strKafkaSpoutConfig39.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int53 = strKafkaSpoutConfig52.getMaxTupleRetries();
        strKafkaSpoutConfig52.maxRetries = 1;
        java.lang.String[] strArray58 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList59 = new java.util.ArrayList<java.lang.String>();
        boolean boolean60 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList59, strArray58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList59);
        java.util.Map<java.lang.String, java.lang.Object> strMap62 = strBuilder61.kafkaProps;
        strKafkaSpoutConfig52.kafkaProps = strMap62;
        java.util.Map<java.lang.String, java.lang.Object> strMap64 = strKafkaSpoutConfig52.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer65 = null;
        strKafkaSpoutConfig52.valueDes = objSerializableDeserializer65;
        java.lang.String str67 = strKafkaSpoutConfig52.toString();
        java.lang.String str68 = strKafkaSpoutConfig52.toString();
        boolean boolean69 = strKafkaSpoutConfig52.isConsumerAutoCommitMode();
        java.util.Map<java.lang.String, java.lang.Object> strMap70 = strKafkaSpoutConfig52.kafkaProps;
        strKafkaSpoutConfig39.kafkaProps = strMap70;
        strBuilder12.kafkaProps = strMap70;
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNull(wildcardClass13);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder32);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService35);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy36 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy36.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder37);
// flaky:         org.junit.Assert.assertTrue("'" + long38 + "' != '" + 32L + "'", long38 == 32L);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService43);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertEquals("'" + str45 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str45, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(firstPollOffsetStrategy46);
        org.junit.Assert.assertEquals("'" + str47 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str47, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strDeserializer48);
        org.junit.Assert.assertNull(objSerializableDeserializer51);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(strArray58);
        org.junit.Assert.assertTrue("'" + boolean60 + "' != '" + true + "'", boolean60 == true);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strMap62);
        org.junit.Assert.assertNotNull(strMap64);
        org.junit.Assert.assertEquals("'" + str67 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str67, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertEquals("'" + str68 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str68, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + boolean69 + "' != '" + true + "'", boolean69 == true);
        org.junit.Assert.assertNotNull(strMap70);
    }

    @Test
    public void test03409() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03409");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 100;
        long long11 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strKafkaSpoutConfig0.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer13;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 1L + "'", long11 == 1L);
        org.junit.Assert.assertNull(wildcardClass12);
    }

    @Test
    public void test03410() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03410");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setPartitionRefreshPeriodMs((long) (-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass12 = strBuilder5.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxPartitionFectchBytes((int) (byte) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int16 = strKafkaSpoutConfig15.getMaxTupleRetries();
        long long17 = strKafkaSpoutConfig15.getPollTimeoutMs();
        strKafkaSpoutConfig15.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = strKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator21 = strKafkaSpoutConfig15.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = strKafkaSpoutConfig15.getFirstPollOffsetStrategy();
        long long23 = strKafkaSpoutConfig15.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = null;
        strKafkaSpoutConfig15.retryService = kafkaSpoutRetryService24;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        java.lang.String[] strArray32 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer29, strSerializableDeserializer30, (java.util.Collection<java.lang.String>) strList33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        int int50 = strBuilder49.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder49.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder54.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder37.setProp(strMap55);
        strKafkaSpoutConfig15.kafkaProps = strMap55;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder5.setProp(strMap55);
        int int59 = strBuilder58.maxUncommittedOffsets;
        strBuilder58.partitionRefreshPeriodMs = (byte) -1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(wildcardClass12);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy20);
        org.junit.Assert.assertNull(strRecordTranslator21);
        org.junit.Assert.assertNull(firstPollOffsetStrategy22);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 10 + "'", int50 == 10);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 10 + "'", int59 == 10);
    }

    @Test
    public void test03411() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03411");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=-1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03412() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03412");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = strKafkaSpoutConfig0.valueDes;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass10 = strKafkaSpoutConfig0.valueDesClazz;
        long long11 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        int int12 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 52;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test03413() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03413");
        java.lang.String[] strArray3 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder4 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        strBuilder4.keyDes = strSerializableDeserializer5;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        strBuilder4.keyDes = strSerializableDeserializer7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder4.setSecurityProtocol("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder4.setGroupId("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder12.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long17 = strBuilder16.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray3);
        org.junit.Assert.assertNotNull(strBuilder4);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test03414() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03414");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Subscription> subscriptionSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig3 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig3.translator;
        long long5 = strKafkaSpoutConfig3.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strKafkaSpoutConfig3.kafkaProps;
        java.lang.String str7 = strKafkaSpoutConfig3.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = null;
        strKafkaSpoutConfig3.valueDes = objSerializableDeserializer8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap24 = strBuilder21.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder21.setPartitionRefreshPeriodMs((long) 1);
        int int27 = strBuilder26.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder26.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder26.setSecurityProtocol("hi!");
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder39.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder53.setProp(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder45.setProp(strMap65);
        org.apache.storm.kafka.spout.Subscription subscription68 = strBuilder45.subscription;
        strBuilder33.subscription = subscription68;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer14, strSerializableDeserializer15, subscription68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, subscription68);
        strKafkaSpoutConfig3.subscription = subscription68;
        java.lang.String str73 = subscription68.getTopicsString();
        java.lang.String str74 = subscription68.getTopicsString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.AnnotatedElement> subscriptionBuilder75 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Subscription, java.lang.reflect.AnnotatedElement>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", subscriptionSerializableDeserializer1, annotatedElementSerializableDeserializer2, subscription68);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNull(strMap6);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strMap24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(subscription68);
        org.junit.Assert.assertEquals("'" + str73 + "' != '" + "" + "'", str73, "");
        org.junit.Assert.assertEquals("'" + str74 + "' != '" + "" + "'", str74, "");
    }

    @Test
    public void test03415() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03415");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        long long8 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 97L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass13 = strSerializableDeserializer12.getClass();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
    }

    @Test
    public void test03416() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03416");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxRetries = 1;
        java.lang.String[] strArray6 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList7 = new java.util.ArrayList<java.lang.String>();
        boolean boolean8 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList7, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList7);
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strBuilder9.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap10;
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        strKafkaSpoutConfig0.pollTimeoutMs = 100;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strKafkaSpoutConfig0.keyDesClazz;
        long long18 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        java.lang.String str20 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator21 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator21;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig23 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int24 = strKafkaSpoutConfig23.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService25 = strKafkaSpoutConfig23.retryService;
        strKafkaSpoutConfig23.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer30 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer33 = null;
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap42 = strBuilder39.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setPartitionRefreshPeriodMs((long) 1);
        int int45 = strBuilder44.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder44.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder44.setSecurityProtocol("hi!");
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        strBuilder57.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder57.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder63.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass72 = strBuilder71.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder71.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        java.lang.String[] strArray77 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList78 = new java.util.ArrayList<java.lang.String>();
        boolean boolean79 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList78, strArray77);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList78);
        strBuilder80.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap83 = strBuilder80.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = strBuilder71.setProp(strMap83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = strBuilder63.setProp(strMap83);
        org.apache.storm.kafka.spout.Subscription subscription86 = strBuilder63.subscription;
        strBuilder51.subscription = subscription86;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer32, strSerializableDeserializer33, subscription86);
        java.lang.String str89 = subscription86.getTopicsString();
        subscription86.refreshAssignment();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer29, strSerializableDeserializer30, subscription86);
        long long92 = strBuilder91.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy93 = strBuilder91.firstPollOffsetStrategy;
        strKafkaSpoutConfig23.firstPollOffsetStrategy = firstPollOffsetStrategy93;
        strKafkaSpoutConfig23.maxRetries = 1;
        java.lang.String str97 = strKafkaSpoutConfig23.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy98 = strKafkaSpoutConfig23.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy98;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertTrue("'" + boolean8 + "' != '" + true + "'", boolean8 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNotNull(strMap10);
        org.junit.Assert.assertNotNull(strMap12);
        org.junit.Assert.assertNull(wildcardClass17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 100L + "'", long18 == 100L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy19);
        org.junit.Assert.assertEquals("'" + str20 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str20, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService25);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strMap42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray77);
        org.junit.Assert.assertTrue("'" + boolean79 + "' != '" + true + "'", boolean79 == true);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strMap83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder85);
        org.junit.Assert.assertNotNull(subscription86);
        org.junit.Assert.assertEquals("'" + str89 + "' != '" + "" + "'", str89, "");
// flaky:         org.junit.Assert.assertTrue("'" + long92 + "' != '" + 32L + "'", long92 == 32L);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy93 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy93.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertEquals("'" + str97 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}" + "'", str97, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy98 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy98.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
    }

    @Test
    public void test03417() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03417");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer3 = strKafkaSpoutConfig0.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        int int5 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        strBuilder11.keyDes = strSerializableDeserializer12;
        long long14 = strBuilder11.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        int int31 = strBuilder30.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder30.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder30.setSecurityProtocol("hi!");
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        strBuilder43.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder43.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder49.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray54 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList55 = new java.util.ArrayList<java.lang.String>();
        boolean boolean56 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList55, strArray54);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList55);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass58 = strBuilder57.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy59 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder57.firstPollOffsetStrategy = firstPollOffsetStrategy59;
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        strBuilder66.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap69 = strBuilder66.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder57.setProp(strMap69);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder49.setProp(strMap69);
        org.apache.storm.kafka.spout.Subscription subscription72 = strBuilder49.subscription;
        strBuilder37.subscription = subscription72;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer18, strSerializableDeserializer19, subscription72);
        strBuilder11.subscription = subscription72;
        strKafkaSpoutConfig0.subscription = subscription72;
        org.apache.storm.kafka.spout.Subscription subscription77 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer78 = strKafkaSpoutConfig0.keyDes;
        long long79 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strDeserializer3);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strArray54);
        org.junit.Assert.assertTrue("'" + boolean56 + "' != '" + true + "'", boolean56 == true);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(wildcardClass58);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy59 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy59.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strMap69);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(subscription72);
        org.junit.Assert.assertNotNull(subscription77);
        org.junit.Assert.assertNull(strSerializableDeserializer78);
        org.junit.Assert.assertTrue("'" + long79 + "' != '" + 0L + "'", long79 == 0L);
    }

    @Test
    public void test03418() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03418");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy3 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer4;
        int int6 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        int int7 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy3);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
    }

    @Test
    public void test03419() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03419");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 100L;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer8 = strKafkaSpoutConfig0.getValueDeserializer();
        long long9 = strKafkaSpoutConfig0.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer10 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer10;
        java.lang.String str12 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertEquals("'" + str12 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str12, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03420() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03420");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setMaxPollRecords(100);
        long long16 = strBuilder11.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder11.setSSLTruststore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder19.setSecurityProtocol("");
        strBuilder19.partitionRefreshPeriodMs = (short) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder19.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = strBuilder25.keyDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder25.setMaxPartitionFectchBytes(32);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 1L + "'", long16 == 1L);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNull(strSerializableDeserializer26);
        org.junit.Assert.assertNotNull(strBuilder28);
    }

    @Test
    public void test03421() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03421");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = null;
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer9, strSerializableDeserializer10, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.Iterable<java.lang.String>> strKafkaSpoutConfigBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=52, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strKafkaSpoutConfigSerializableDeserializer4, strIterableSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.GenericDeclaration> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.reflect.GenericDeclaration>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, genericDeclarationSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.reflect.GenericDeclaration> strKafkaSpoutConfig22 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.reflect.GenericDeclaration>(strBuilder21);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder19);
    }

    @Test
    public void test03422() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03422");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        strKafkaSpoutConfig0.pollTimeoutMs = 35L;
        int int58 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(firstPollOffsetStrategy53);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
    }

    @Test
    public void test03423() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03423");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer14 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer15 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer14, strListSerializableDeserializer15, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer7, strSerializableDeserializer8, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer2, strSerializableDeserializer3, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder25.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=32, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setFetchMinBytes((-1));
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = null;
        strBuilder27.kafkaProps = strMap30;
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
    }

    @Test
    public void test03424() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03424");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder7.setGroupId("hi!");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass10 = strBuilder9.valueDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = null;
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass21 = strBuilder19.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy22 = strBuilder19.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.Subscription subscription23 = strBuilder19.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer12, strSerializableDeserializer13, subscription23);
        strBuilder9.subscription = subscription23;
        subscription23.refreshAssignment();
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertNull(wildcardClass10);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertNotNull(wildcardClass21);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy22 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy22.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(subscription23);
    }

    @Test
    public void test03425() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03425");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.Object> strKafkaSpoutConfigBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.Object>();
    }

    @Test
    public void test03426() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03426");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService3 = strKafkaSpoutConfig0.retryService;
        long long4 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator5;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass7 = strKafkaSpoutConfig0.valueDesClazz;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass14 = strBuilder13.keyDesClazz;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass15 = strBuilder13.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = strBuilder13.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setMaxPollRecords((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder18.setOffsetCommitPeriodMs((long) '#');
        java.util.Map<java.lang.String, java.lang.Object> strMap21 = strBuilder18.kafkaProps;
        strKafkaSpoutConfig0.kafkaProps = strMap21;
        org.junit.Assert.assertNull(kafkaSpoutRetryService3);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNull(wildcardClass7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(wildcardClass14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strMap21);
    }

    @Test
    public void test03427() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03427");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer5, strSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer2, strSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int15 = strKafkaSpoutConfig14.getMaxTupleRetries();
        strKafkaSpoutConfig14.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = strKafkaSpoutConfig14.keyDes;
        int int19 = strKafkaSpoutConfig14.maxUncommittedOffsets;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        strBuilder25.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder25.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder25.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService31 = null;
        strBuilder30.retryService = kafkaSpoutRetryService31;
        java.util.Map<java.lang.String, java.lang.Object> strMap33 = strBuilder30.kafkaProps;
        strKafkaSpoutConfig14.kafkaProps = strMap33;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder13.setProp(strMap33);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer39 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer41 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        java.lang.String[] strArray47 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer44, strSerializableDeserializer45, (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer41, strCollectionSerializableDeserializer42, (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer38, strSerializableDeserializer39, (java.util.Collection<java.lang.String>) strList48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = strBuilder13.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder52);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer55 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer56 = null;
        java.lang.String[] strArray60 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer55, strSerializableDeserializer56, strArray60);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder62.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        strBuilder71.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap74 = strBuilder71.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder71.setPartitionRefreshPeriodMs((long) 1);
        java.util.Map<java.lang.String, java.lang.Object> strMap77 = strBuilder71.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService78 = null;
        strBuilder71.retryService = kafkaSpoutRetryService78;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder64.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) kafkaSpoutRetryService78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder80.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig84 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int85 = strKafkaSpoutConfig84.getMaxTupleRetries();
        strKafkaSpoutConfig84.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService88 = strKafkaSpoutConfig84.retryService;
        long long89 = strKafkaSpoutConfig84.offsetCommitPeriodMs;
        java.lang.String str90 = strKafkaSpoutConfig84.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy91 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST;
        strKafkaSpoutConfig84.firstPollOffsetStrategy = firstPollOffsetStrategy91;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder83.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder94 = strBuilder52.setFirstPollOffsetStrategy(firstPollOffsetStrategy91);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy95 = strBuilder94.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder94.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService98 = strBuilder97.retryService;
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertNotNull(strMap33);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(strArray60);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(strMap74);
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strMap77);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService88);
        org.junit.Assert.assertTrue("'" + long89 + "' != '" + 0L + "'", long89 == 0L);
        org.junit.Assert.assertEquals("'" + str90 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str90, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy91 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy91.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder94);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy95 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy95.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder97);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService98);
    }

    @Test
    public void test03428() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03428");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        int int5 = strKafkaSpoutConfig0.getMaxTupleRetries();
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        strBuilder11.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strBuilder11.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setPartitionRefreshPeriodMs((long) 1);
        int int17 = strBuilder16.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setSecurityProtocol("hi!");
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = strBuilder29.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder35.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray40 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList41 = new java.util.ArrayList<java.lang.String>();
        boolean boolean42 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList41, strArray40);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList41);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass44 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder43.firstPollOffsetStrategy = firstPollOffsetStrategy45;
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        strBuilder52.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder43.setProp(strMap55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder57 = strBuilder35.setProp(strMap55);
        org.apache.storm.kafka.spout.Subscription subscription58 = strBuilder35.subscription;
        strBuilder23.subscription = subscription58;
        subscription58.refreshAssignment();
        strKafkaSpoutConfig0.subscription = subscription58;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer62 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 1 + "'", int5 == 1);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strMap14);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strArray40);
        org.junit.Assert.assertTrue("'" + boolean42 + "' != '" + true + "'", boolean42 == true);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass44);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy45 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy45.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder57);
        org.junit.Assert.assertNotNull(subscription58);
        org.junit.Assert.assertNull(objSerializableDeserializer62);
    }

    @Test
    public void test03429() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03429");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder8.setFetchMinBytes(10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder10.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=UNCOMMITTED_EARLIEST, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder10.setMaxPartitionFectchBytes((int) (byte) 1);
        long long15 = strBuilder14.partitionRefreshPeriodMs;
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
// flaky:         org.junit.Assert.assertTrue("'" + long15 + "' != '" + 32L + "'", long15 == 32L);
    }

    @Test
    public void test03430() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03430");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator11 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setRecordTranslator(strRecordTranslator11);
        strBuilder5.partitionRefreshPeriodMs = (-1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass15 = strBuilder5.valueDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test03431() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03431");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPollTimeoutMs((long) 2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder5.setMaxPartitionFectchBytes((int) (short) 10);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService15 = null;
        strBuilder14.retryService = kafkaSpoutRetryService15;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService17 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder14.setRetry(kafkaSpoutRetryService17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNotNull(strBuilder14);
    }

    @Test
    public void test03432() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03432");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.AnnotatedElement, java.lang.reflect.GenericDeclaration> annotatedElementKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.reflect.AnnotatedElement, java.lang.reflect.GenericDeclaration>();
    }

    @Test
    public void test03433() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03433");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.List<java.lang.String>> strListSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.io.Serializable> serializableSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = null;
        java.lang.String[] strArray14 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer11, strSerializableDeserializer12, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Object> serializableBuilder18 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, java.lang.Object>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=52, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", serializableSerializableDeserializer8, objSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strListBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.List<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=10, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer5, strBuilderSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=EARLIEST, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> serializableBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.io.Serializable, org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>>("hi!", serializableSerializableDeserializer1, strKafkaSpoutConfigSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList15);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
    }

    @Test
    public void test03434() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03434");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder5.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer13 = strBuilder12.valueDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer15 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer16 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer19 = null;
        java.lang.String[] strArray21 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList22 = new java.util.ArrayList<java.lang.String>();
        boolean boolean23 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList22, strArray21);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer18, strSerializableDeserializer19, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer15, strSerializableDeserializer16, (java.util.Collection<java.lang.String>) strList22);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer29 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer31 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer36 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer38 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer39 = null;
        java.lang.String[] strArray43 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder47 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer38, strArraySerializableDeserializer39, (java.util.Collection<java.lang.String>) strList44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]> strConsumerRecordFuncBuilder48 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.lang.String[]>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strConsumerRecordFuncSerializableDeserializer35, strArraySerializableDeserializer36, (java.util.Collection<java.lang.String>) strList44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer31, strSerializableDeserializer32, (java.util.Collection<java.lang.String>) strList44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer28, strSerializableDeserializer29, (java.util.Collection<java.lang.String>) strList44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        java.lang.String[] strArray55 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList56 = new java.util.ArrayList<java.lang.String>();
        boolean boolean57 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList56, strArray55);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList56);
        strBuilder58.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap61 = strBuilder58.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder58.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService64 = null;
        strBuilder63.retryService = kafkaSpoutRetryService64;
        java.util.Map<java.lang.String, java.lang.Object> strMap66 = strBuilder63.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator67 = strBuilder63.translator;
        org.apache.storm.tuple.Fields fields68 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder70 = strBuilder52.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator67, fields68, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = strBuilder25.setRecordTranslator(strRecordTranslator67);
        strBuilder12.translator = strRecordTranslator67;
        java.util.Properties properties73 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder74 = strBuilder12.setProp(properties73);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(strSerializableDeserializer13);
        org.junit.Assert.assertNotNull(strArray21);
        org.junit.Assert.assertTrue("'" + boolean23 + "' != '" + true + "'", boolean23 == true);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strArray55);
        org.junit.Assert.assertTrue("'" + boolean57 + "' != '" + true + "'", boolean57 == true);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strMap61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strMap66);
        org.junit.Assert.assertNotNull(strRecordTranslator67);
        org.junit.Assert.assertNotNull(strBuilder70);
        org.junit.Assert.assertNotNull(strBuilder71);
    }

    @Test
    public void test03435() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03435");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder10.maxRetries = '4';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder10.setMaxPartitionFectchBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.Subscription subscription20 = strBuilder10.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = strBuilder10.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(subscription20);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService21);
    }

    @Test
    public void test03436() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03436");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.maxUncommittedOffsets = (byte) 1;
        java.lang.String str7 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer8 = strKafkaSpoutConfig0.valueDes;
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.subscription;
        int int10 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer11 = null;
        strKafkaSpoutConfig0.keyDes = strSerializableDeserializer11;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertEquals("'" + str7 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str7, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(objSerializableDeserializer8);
        org.junit.Assert.assertNull(subscription9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 1 + "'", int10 == 1);
    }

    @Test
    public void test03437() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03437");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder14.setPartitionRefreshPeriodMs((long) 1);
        int int20 = strBuilder19.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder19.setSecurityProtocol("hi!");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder32.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder38.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass47 = strBuilder46.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder46.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        strBuilder55.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = strBuilder55.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder46.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder38.setProp(strMap58);
        org.apache.storm.kafka.spout.Subscription subscription61 = strBuilder38.subscription;
        strBuilder26.subscription = subscription61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, subscription61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription61);
        java.lang.Class<?> wildcardClass66 = subscription61.getClass();
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test03438() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03438");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer6 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer7 = strKafkaSpoutConfig0.getValueDeserializer();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.getTranslator();
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass15 = strBuilder14.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder14.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder23.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder14.setProp(strMap26);
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strBuilder14.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap28);
        strKafkaSpoutConfig0.kafkaProps = strMap29;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 10;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass34 = strKafkaSpoutConfig0.valueDesClazz;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertNull(objDeserializer6);
        org.junit.Assert.assertNull(objDeserializer7);
        org.junit.Assert.assertNull(strRecordTranslator8);
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(wildcardClass15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(firstPollOffsetStrategy31);
        org.junit.Assert.assertNull(wildcardClass34);
    }

    @Test
    public void test03439() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03439");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        strKafkaSpoutConfig0.pollTimeoutMs = '4';
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService6 = strKafkaSpoutConfig0.getRetryService();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService7;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(kafkaSpoutRetryService6);
    }

    @Test
    public void test03440() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03440");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strBuilder10.retryService = kafkaSpoutRetryService11;
        java.util.Map<java.lang.String, java.lang.Object> strMap13 = strBuilder10.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        strBuilder10.valueDes = strSerializableDeserializer14;
        strBuilder10.pollTimeoutMs = ' ';
        strBuilder10.offsetCommitPeriodMs = ' ';
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig20 = strBuilder10.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strMap13);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig20);
    }

    @Test
    public void test03441() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03441");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray6 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray6);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, strArray6);
        strBuilder8.maxRetries = '#';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = strBuilder8.setOffsetCommitPeriodMs((long) (short) 10);
        java.util.Properties properties13 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder12.setProp(properties13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray6);
        org.junit.Assert.assertNotNull(strBuilder7);
        org.junit.Assert.assertNotNull(strBuilder12);
    }

    @Test
    public void test03442() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03442");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = (short) 1;
        int int8 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 52;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = strKafkaSpoutConfig0.getTranslator();
        java.util.Map<java.lang.String, java.lang.Object> strMap12 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String[] strArray15 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList16 = new java.util.ArrayList<java.lang.String>();
        boolean boolean17 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList16, strArray15);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList16);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass19 = strBuilder18.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder18.firstPollOffsetStrategy = firstPollOffsetStrategy20;
        java.lang.String[] strArray24 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList25 = new java.util.ArrayList<java.lang.String>();
        boolean boolean26 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList25, strArray24);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList25);
        strBuilder27.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap30 = strBuilder27.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder18.setProp(strMap30);
        long long32 = strBuilder18.pollTimeoutMs;
        java.lang.String[] strArray35 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList36 = new java.util.ArrayList<java.lang.String>();
        boolean boolean37 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList36, strArray35);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList36);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass39 = strBuilder38.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy40;
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder38.setProp(strMap50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder51.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder18.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setGroupId("hi!");
        org.apache.storm.kafka.spout.Subscription subscription57 = strBuilder54.subscription;
        strKafkaSpoutConfig0.subscription = subscription57;
        java.lang.String str59 = subscription57.getTopicsString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + 0 + "'", int8 == 0);
        org.junit.Assert.assertNull(strRecordTranslator11);
        org.junit.Assert.assertNull(strMap12);
        org.junit.Assert.assertNotNull(strArray15);
        org.junit.Assert.assertTrue("'" + boolean17 + "' != '" + true + "'", boolean17 == true);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(wildcardClass19);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy20 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy20.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray24);
        org.junit.Assert.assertTrue("'" + boolean26 + "' != '" + true + "'", boolean26 == true);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strMap30);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(strArray35);
        org.junit.Assert.assertTrue("'" + boolean37 + "' != '" + true + "'", boolean37 == true);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(wildcardClass39);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy40 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy40.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(subscription57);
        org.junit.Assert.assertEquals("'" + str59 + "' != '" + "" + "'", str59, "");
    }

    @Test
    public void test03443() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03443");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer56 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer56;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer59 = strKafkaSpoutConfig0.getKeyDeserializer();
        long long60 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 0;
        java.lang.String str63 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(firstPollOffsetStrategy53);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNull(strDeserializer59);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str63, "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03444() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03444");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer44 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer47 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer48 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer47, strSerializableDeserializer48, (java.util.Collection<java.lang.String>) strList51);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer44, strSerializableDeserializer45, (java.util.Collection<java.lang.String>) strList51);
        int int55 = strBuilder54.maxUncommittedOffsets;
        strBuilder54.maxRetries = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder54.setMaxRetries(0);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass60 = strBuilder59.keyDesClazz;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = strBuilder59.valueDes;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder59);
        int int63 = strBuilder62.maxRetries;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator64 = strBuilder62.translator;
        java.lang.Class<?> wildcardClass65 = strRecordTranslator64.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 10 + "'", int55 == 10);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNull(wildcardClass60);
        org.junit.Assert.assertNull(strSerializableDeserializer61);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 1 + "'", int63 == 1);
        org.junit.Assert.assertNotNull(strRecordTranslator64);
        org.junit.Assert.assertNotNull(wildcardClass65);
    }

    @Test
    public void test03445() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03445");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer4 = strKafkaSpoutConfig0.valueDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (byte) 0;
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertNull(objSerializableDeserializer4);
    }

    @Test
    public void test03446() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03446");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder14.setPartitionRefreshPeriodMs((long) 1);
        int int20 = strBuilder19.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder24 = strBuilder19.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = strBuilder19.setSecurityProtocol("hi!");
        java.lang.String[] strArray29 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList30 = new java.util.ArrayList<java.lang.String>();
        boolean boolean31 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList30, strArray29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList30);
        strBuilder32.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder32.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder38.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass47 = strBuilder46.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy48 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder46.firstPollOffsetStrategy = firstPollOffsetStrategy48;
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        strBuilder55.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap58 = strBuilder55.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder59 = strBuilder46.setProp(strMap58);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder38.setProp(strMap58);
        org.apache.storm.kafka.spout.Subscription subscription61 = strBuilder38.subscription;
        strBuilder26.subscription = subscription61;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer7, strSerializableDeserializer8, subscription61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer4, strSerializableDeserializer5, subscription61);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=52, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription61);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator66 = strBuilder65.translator;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(strBuilder24);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strArray29);
        org.junit.Assert.assertTrue("'" + boolean31 + "' != '" + true + "'", boolean31 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(wildcardClass47);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy48 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy48.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strMap58);
        org.junit.Assert.assertNotNull(strBuilder59);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(subscription61);
        org.junit.Assert.assertNotNull(strRecordTranslator66);
    }

    @Test
    public void test03447() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03447");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        long long9 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy12 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy12);
    }

    @Test
    public void test03448() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03448");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig30 = strBuilder5.build();
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        strBuilder36.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap39 = strBuilder36.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder36.setPartitionRefreshPeriodMs((long) 1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass42 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder36.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator45 = strBuilder36.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder5.setRecordTranslator(strRecordTranslator45);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder5.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=-1, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder48.offsetCommitPeriodMs = (byte) 0;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder48.setPollTimeoutMs((long) 52);
        long long53 = strBuilder48.pollTimeoutMs;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(strMap39);
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(wildcardClass42);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strRecordTranslator45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 52L + "'", long53 == 52L);
    }

    @Test
    public void test03449() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03449");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap5 = strKafkaSpoutConfig0.kafkaProps;
        long long6 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = (short) 10;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator11 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator11;
        java.lang.Class<?> wildcardClass13 = strKafkaSpoutConfig0.getClass();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap5);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test03450() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03450");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer10 = null;
        java.lang.String[] strArray12 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>> strCollectionBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Collection<java.lang.String>, java.util.AbstractList<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strCollectionSerializableDeserializer9, strListSerializableDeserializer10, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer6, strSerializableDeserializer7, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer2, strSerializableDeserializer3, strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder17.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService22 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder21.setRetry(kafkaSpoutRetryService22);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray12);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder21);
    }

    @Test
    public void test03451() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03451");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.CharSequence, java.util.Map<java.lang.String, java.lang.Object>> charSequenceKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.CharSequence, java.util.Map<java.lang.String, java.lang.Object>>();
    }

    @Test
    public void test03452() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03452");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer5 = null;
        java.lang.String[] strArray9 = new java.lang.String[] { "", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList10 = new java.util.ArrayList<java.lang.String>();
        boolean boolean11 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList10, strArray9);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder12 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]> strKafkaSpoutConfigBuilder13 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, java.lang.String[]>("hi!", strKafkaSpoutConfigSerializableDeserializer4, strArraySerializableDeserializer5, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator17 = strKafkaSpoutConfig16.translator;
        long long18 = strKafkaSpoutConfig16.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strKafkaSpoutConfig16.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = null;
        strKafkaSpoutConfig16.retryService = kafkaSpoutRetryService20;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer22 = null;
        strKafkaSpoutConfig16.valueDes = objSerializableDeserializer22;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService24 = strKafkaSpoutConfig16.getRetryService();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator25 = null;
        strKafkaSpoutConfig16.translator = strRecordTranslator25;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder14.setProp("", (java.lang.Object) strKafkaSpoutConfig16);
        org.junit.Assert.assertNotNull(strArray9);
        org.junit.Assert.assertTrue("'" + boolean11 + "' != '" + true + "'", boolean11 == true);
        org.junit.Assert.assertNotNull(strBuilder12);
        org.junit.Assert.assertNull(strRecordTranslator17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNull(strMap19);
        org.junit.Assert.assertNull(kafkaSpoutRetryService24);
        org.junit.Assert.assertNotNull(strBuilder27);
    }

    @Test
    public void test03453() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03453");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.util.Map<java.lang.String, java.lang.Object> strMap4 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig5 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig5.translator;
        long long7 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig5.kafkaProps;
        java.lang.String str9 = strKafkaSpoutConfig5.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap10 = strKafkaSpoutConfig5.kafkaProps;
        long long11 = strKafkaSpoutConfig5.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig5.valueDes;
        strKafkaSpoutConfig5.maxUncommittedOffsets = (byte) 1;
        java.lang.String str15 = strKafkaSpoutConfig5.toString();
        java.lang.String[] strArray18 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList19 = new java.util.ArrayList<java.lang.String>();
        boolean boolean20 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList19, strArray18);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList19);
        strBuilder21.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder21.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder27.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray32 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList33 = new java.util.ArrayList<java.lang.String>();
        boolean boolean34 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList33, strArray32);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList33);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass36 = strBuilder35.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder35.firstPollOffsetStrategy = firstPollOffsetStrategy37;
        java.lang.String[] strArray41 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList42 = new java.util.ArrayList<java.lang.String>();
        boolean boolean43 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList42, strArray41);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList42);
        strBuilder44.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap47 = strBuilder44.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder35.setProp(strMap47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder27.setProp(strMap47);
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap47);
        strKafkaSpoutConfig5.kafkaProps = strMap50;
        strKafkaSpoutConfig0.kafkaProps = strMap50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy53 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.util.Map<java.lang.String, java.lang.Object> strMap54 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator56 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator56;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(strMap4);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str15 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str15, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray18);
        org.junit.Assert.assertTrue("'" + boolean20 + "' != '" + true + "'", boolean20 == true);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strArray32);
        org.junit.Assert.assertTrue("'" + boolean34 + "' != '" + true + "'", boolean34 == true);
        org.junit.Assert.assertNotNull(strBuilder35);
        org.junit.Assert.assertNotNull(wildcardClass36);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy37 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy37.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray41);
        org.junit.Assert.assertTrue("'" + boolean43 + "' != '" + true + "'", boolean43 == true);
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strMap47);
        org.junit.Assert.assertNotNull(strBuilder48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNull(firstPollOffsetStrategy53);
        org.junit.Assert.assertNotNull(strMap54);
        org.junit.Assert.assertNull(firstPollOffsetStrategy55);
    }

    @Test
    public void test03454() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03454");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer5 = null;
        strKafkaSpoutConfig0.valueDes = objSerializableDeserializer5;
        long long7 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig0.keyDes;
        long long9 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer10 = strKafkaSpoutConfig0.getValueDeserializer();
        long long11 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(objDeserializer10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test03455() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03455");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        int int10 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        long long11 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer12 = strKafkaSpoutConfig0.valueDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer9);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(objSerializableDeserializer12);
    }

    @Test
    public void test03456() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03456");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService1 = strBuilder0.retryService;
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService1);
    }

    @Test
    public void test03457() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03457");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        int int6 = strKafkaSpoutConfig0.getMaxUncommittedOffsets();
        org.apache.storm.kafka.spout.Subscription subscription7 = strKafkaSpoutConfig0.subscription;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str9 = strKafkaSpoutConfig0.toString();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(subscription7);
        org.junit.Assert.assertNull(strSerializableDeserializer8);
        org.junit.Assert.assertEquals("'" + str9 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str9, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
    }

    @Test
    public void test03458() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03458");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator6 = strKafkaSpoutConfig0.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str8 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService9 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService9;
        long long11 = strKafkaSpoutConfig0.getPollTimeoutMs();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer12 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str13 = strKafkaSpoutConfig0.toString();
        java.util.Map<java.lang.String, java.lang.Object> strMap14 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator15 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator15;
        int int17 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer18 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy5);
        org.junit.Assert.assertNull(strRecordTranslator6);
        org.junit.Assert.assertNull(firstPollOffsetStrategy7);
        org.junit.Assert.assertEquals("'" + str8 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str8, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strSerializableDeserializer12);
        org.junit.Assert.assertEquals("'" + str13 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str13, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strMap14);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer18);
    }

    @Test
    public void test03459() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03459");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer3 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer5 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Collection<java.lang.String>> strCollectionSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer8 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = null;
        java.lang.String[] strArray11 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer8, strSerializableDeserializer9, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>> strCollectionBuilder15 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractCollection<java.lang.String>, java.util.Collection<java.lang.String>>("hi!", strCollectionSerializableDeserializer5, strCollectionSerializableDeserializer6, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>> strListBuilder16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.util.ArrayList<java.lang.String>>("hi!", strListSerializableDeserializer2, strListSerializableDeserializer3, (java.util.Collection<java.lang.String>) strList12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.util.Collection<java.lang.String>) strList12);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass24 = strBuilder23.keyDesClazz;
        org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>> strConsumerRecordFunc25 = null;
        org.apache.storm.tuple.Fields fields26 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = strBuilder23.setRecordTranslator(strConsumerRecordFunc25, fields26, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long29 = strBuilder23.pollTimeoutMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass30 = strBuilder23.valueDesClazz;
        long long31 = strBuilder23.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder23.setMaxPartitionFectchBytes((int) (short) 100);
        java.lang.String[] strArray36 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList37 = new java.util.ArrayList<java.lang.String>();
        boolean boolean38 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList37, strArray36);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList37);
        strBuilder39.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = strBuilder39.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder45.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray50 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList51 = new java.util.ArrayList<java.lang.String>();
        boolean boolean52 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList51, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder53 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList51);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass54 = strBuilder53.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder53.firstPollOffsetStrategy = firstPollOffsetStrategy55;
        java.lang.String[] strArray59 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList60 = new java.util.ArrayList<java.lang.String>();
        boolean boolean61 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList60, strArray59);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList60);
        strBuilder62.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap65 = strBuilder62.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder53.setProp(strMap65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder67 = strBuilder45.setProp(strMap65);
        strBuilder67.partitionRefreshPeriodMs = 35L;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer71 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer72 = null;
        java.lang.String[] strArray74 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList75 = new java.util.ArrayList<java.lang.String>();
        boolean boolean76 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList75, strArray74);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder77 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer71, strSerializableDeserializer72, (java.util.Collection<java.lang.String>) strList75);
        java.lang.String[] strArray80 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList81 = new java.util.ArrayList<java.lang.String>();
        boolean boolean82 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList81, strArray80);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList81);
        strBuilder83.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap86 = strBuilder83.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder88 = strBuilder83.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService89 = null;
        strBuilder88.retryService = kafkaSpoutRetryService89;
        java.util.Map<java.lang.String, java.lang.Object> strMap91 = strBuilder88.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator92 = strBuilder88.translator;
        strBuilder77.translator = strRecordTranslator92;
        strBuilder67.translator = strRecordTranslator92;
        strBuilder33.translator = strRecordTranslator92;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder96 = strBuilder17.setRecordTranslator(strRecordTranslator92);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder98 = strBuilder96.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator99 = strBuilder98.translator;
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(wildcardClass24);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass30);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strArray36);
        org.junit.Assert.assertTrue("'" + boolean38 + "' != '" + true + "'", boolean38 == true);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertTrue("'" + boolean52 + "' != '" + true + "'", boolean52 == true);
        org.junit.Assert.assertNotNull(strBuilder53);
        org.junit.Assert.assertNotNull(wildcardClass54);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy55 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy55.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray59);
        org.junit.Assert.assertTrue("'" + boolean61 + "' != '" + true + "'", boolean61 == true);
        org.junit.Assert.assertNotNull(strBuilder62);
        org.junit.Assert.assertNotNull(strMap65);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder67);
        org.junit.Assert.assertNotNull(strArray74);
        org.junit.Assert.assertTrue("'" + boolean76 + "' != '" + true + "'", boolean76 == true);
        org.junit.Assert.assertNotNull(strArray80);
        org.junit.Assert.assertTrue("'" + boolean82 + "' != '" + true + "'", boolean82 == true);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(strMap86);
        org.junit.Assert.assertNotNull(strBuilder88);
        org.junit.Assert.assertNotNull(strMap91);
        org.junit.Assert.assertNotNull(strRecordTranslator92);
        org.junit.Assert.assertNotNull(strBuilder96);
        org.junit.Assert.assertNotNull(strBuilder98);
        org.junit.Assert.assertNotNull(strRecordTranslator99);
    }

    @Test
    public void test03460() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03460");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String str4 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strKafkaSpoutConfig0.firstPollOffsetStrategy = firstPollOffsetStrategy5;
        java.util.Map<java.lang.String, java.lang.Object> strMap7 = strKafkaSpoutConfig0.kafkaProps;
        java.lang.String[] strArray10 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList11 = new java.util.ArrayList<java.lang.String>();
        boolean boolean12 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList11, strArray10);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList11);
        strBuilder13.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap16 = strBuilder13.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder13.setPartitionRefreshPeriodMs((long) 1);
        int int19 = strBuilder18.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder18.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder18.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer26 = null;
        strBuilder25.keyDes = strSerializableDeserializer26;
        java.lang.String[] strArray30 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList31 = new java.util.ArrayList<java.lang.String>();
        boolean boolean32 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList31, strArray30);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList31);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass34 = strBuilder33.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy35 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder33.firstPollOffsetStrategy = firstPollOffsetStrategy35;
        java.lang.String[] strArray39 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList40 = new java.util.ArrayList<java.lang.String>();
        boolean boolean41 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList40, strArray39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList40);
        strBuilder42.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap45 = strBuilder42.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder33.setProp(strMap45);
        strBuilder25.kafkaProps = strMap45;
        strKafkaSpoutConfig0.kafkaProps = strMap45;
        long long49 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        int int50 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertEquals("'" + str4 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str4, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy5 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy5.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNull(strMap7);
        org.junit.Assert.assertNotNull(strArray10);
        org.junit.Assert.assertTrue("'" + boolean12 + "' != '" + true + "'", boolean12 == true);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strMap16);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray30);
        org.junit.Assert.assertTrue("'" + boolean32 + "' != '" + true + "'", boolean32 == true);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(wildcardClass34);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy35 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy35.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray39);
        org.junit.Assert.assertTrue("'" + boolean41 + "' != '" + true + "'", boolean41 == true);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strMap45);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test03461() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03461");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        long long8 = strBuilder5.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets((int) (byte) -1);
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        strBuilder17.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder17.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder23.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder27 = strBuilder23.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass28 = strBuilder23.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setProp("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", (java.lang.Object) strBuilder23);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService30 = strBuilder29.retryService;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
// flaky:         org.junit.Assert.assertTrue("'" + long8 + "' != '" + 32L + "'", long8 == 32L);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strBuilder27);
        org.junit.Assert.assertNotNull(wildcardClass28);
        org.junit.Assert.assertNotNull(strBuilder29);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService30);
    }

    @Test
    public void test03462() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03462");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long3 = strKafkaSpoutConfig0.getOffsetsCommitPeriodMs();
        long long4 = strKafkaSpoutConfig0.getPollTimeoutMs();
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        long long6 = strKafkaSpoutConfig0.getPollTimeoutMs();
        int int7 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService8 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService8;
        int int10 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService11 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService11;
        strKafkaSpoutConfig0.pollTimeoutMs = 0L;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
    }

    @Test
    public void test03463() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03463");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        int int12 = strBuilder11.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig17 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator18 = strKafkaSpoutConfig17.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer19 = strKafkaSpoutConfig17.getKeyDeserializer();
        int int20 = strKafkaSpoutConfig17.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService21 = null;
        strKafkaSpoutConfig17.retryService = kafkaSpoutRetryService21;
        int int23 = strKafkaSpoutConfig17.maxUncommittedOffsets;
        long long24 = strKafkaSpoutConfig17.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass25 = strKafkaSpoutConfig17.valueDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.kafka.common.serialization.Deserializer<java.lang.Object> objDeserializer27 = strKafkaSpoutConfig26.getValueDeserializer();
        int int28 = strKafkaSpoutConfig26.getMaxUncommittedOffsets();
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig26.getKafkaProps();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer30 = strKafkaSpoutConfig26.valueDes;
        java.lang.String[] strArray33 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList34 = new java.util.ArrayList<java.lang.String>();
        boolean boolean35 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList34, strArray33);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList34);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass37 = strBuilder36.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder36.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        java.lang.String[] strArray42 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList43 = new java.util.ArrayList<java.lang.String>();
        boolean boolean44 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList43, strArray42);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder45 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList43);
        strBuilder45.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap48 = strBuilder45.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder36.setProp(strMap48);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder49.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        strKafkaSpoutConfig26.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        strKafkaSpoutConfig17.firstPollOffsetStrategy = firstPollOffsetStrategy50;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = strBuilder11.setFirstPollOffsetStrategy(firstPollOffsetStrategy50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder56 = strBuilder54.setPartitionRefreshPeriodMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder54.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(strRecordTranslator18);
        org.junit.Assert.assertNull(strDeserializer19);
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNull(wildcardClass25);
        org.junit.Assert.assertNull(objDeserializer27);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNull(strMap29);
        org.junit.Assert.assertNull(objSerializableDeserializer30);
        org.junit.Assert.assertNotNull(strArray33);
        org.junit.Assert.assertTrue("'" + boolean35 + "' != '" + true + "'", boolean35 == true);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertNotNull(wildcardClass37);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray42);
        org.junit.Assert.assertTrue("'" + boolean44 + "' != '" + true + "'", boolean44 == true);
        org.junit.Assert.assertNotNull(strBuilder45);
        org.junit.Assert.assertNotNull(strMap48);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy50 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy50.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strBuilder56);
        org.junit.Assert.assertNotNull(strBuilder58);
    }

    @Test
    public void test03464() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03464");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray4 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList5 = new java.util.ArrayList<java.lang.String>();
        boolean boolean6 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList5, strArray4);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder7 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder7.setSSLKeystore("hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass18 = strBuilder17.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setPollTimeoutMs((long) 100);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = strBuilder20.setMaxPartitionFectchBytes((int) ' ');
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy23 = strBuilder20.firstPollOffsetStrategy;
        strBuilder7.firstPollOffsetStrategy = firstPollOffsetStrategy23;
        java.lang.String[] strArray28 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxRetries((int) (short) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService32 = strBuilder31.retryService;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder31.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder36 = strBuilder31.setFetchMinBytes((int) (short) 10);
        int int37 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy38 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST;
        strBuilder31.firstPollOffsetStrategy = firstPollOffsetStrategy38;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder7.setFirstPollOffsetStrategy(firstPollOffsetStrategy38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder7.setMaxUncommittedOffsets((int) '4');
        org.junit.Assert.assertNotNull(strArray4);
        org.junit.Assert.assertTrue("'" + boolean6 + "' != '" + true + "'", boolean6 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy23 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy23.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strArray28);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
// flaky:         org.junit.Assert.assertNull(kafkaSpoutRetryService32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strBuilder36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 1 + "'", int37 == 1);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy38 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST + "'", firstPollOffsetStrategy38.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_LATEST));
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
    }

    @Test
    public void test03465() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03465");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        java.lang.String[] strArray5 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList6 = new java.util.ArrayList<java.lang.String>();
        boolean boolean7 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList6, strArray5);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder8 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList6);
        strBuilder8.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = strBuilder8.setSSLKeystore("", "", "hi!");
        int int15 = strBuilder14.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = strBuilder14.setSSLKeystore("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "");
        java.util.Map<java.lang.String, java.lang.Object> strMap20 = strBuilder19.kafkaProps;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer22 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer23 = null;
        java.lang.String[] strArray26 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList27 = new java.util.ArrayList<java.lang.String>();
        boolean boolean28 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList27, strArray26);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList27);
        strBuilder29.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap32 = strBuilder29.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder29.setPartitionRefreshPeriodMs((long) 1);
        int int35 = strBuilder34.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig40 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int41 = strKafkaSpoutConfig40.getMaxTupleRetries();
        strKafkaSpoutConfig40.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService44 = strKafkaSpoutConfig40.retryService;
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass51 = strBuilder50.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder50.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        strKafkaSpoutConfig40.firstPollOffsetStrategy = firstPollOffsetStrategy52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder34.setFirstPollOffsetStrategy(firstPollOffsetStrategy52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder34.setSSLKeystore("", "");
        org.apache.storm.kafka.spout.Subscription subscription59 = strBuilder34.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer22, strSerializableDeserializer23, subscription59);
        strBuilder19.subscription = subscription59;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder62 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer1, strSerializableDeserializer2, subscription59);
        java.lang.String str63 = subscription59.getTopicsString();
        org.junit.Assert.assertNotNull(strArray5);
        org.junit.Assert.assertTrue("'" + boolean7 + "' != '" + true + "'", boolean7 == true);
        org.junit.Assert.assertNotNull(strBuilder8);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 10 + "'", int15 == 10);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(strMap20);
        org.junit.Assert.assertNotNull(strArray26);
        org.junit.Assert.assertTrue("'" + boolean28 + "' != '" + true + "'", boolean28 == true);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strMap32);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + (-1) + "'", int35 == (-1));
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService44);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(wildcardClass51);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy52 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy52.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(subscription59);
        org.junit.Assert.assertEquals("'" + str63 + "' != '" + "" + "'", str63, "");
    }

    @Test
    public void test03466() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03466");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy16;
        int int18 = strBuilder10.maxUncommittedOffsets;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass19 = strBuilder10.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy16 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST + "'", firstPollOffsetStrategy16.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.EARLIEST));
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 10 + "'", int18 == 10);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test03467() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03467");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxUncommittedOffsets = (short) 1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig8 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int9 = strKafkaSpoutConfig8.getMaxTupleRetries();
        long long10 = strKafkaSpoutConfig8.getPollTimeoutMs();
        strKafkaSpoutConfig8.partitionRefreshPeriodMs = 1L;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy13 = strKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator14 = strKafkaSpoutConfig8.getTranslator();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy15 = strKafkaSpoutConfig8.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxRetries = 1;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.util.Map<java.lang.String, java.lang.Object> strMap26 = strBuilder25.kafkaProps;
        strKafkaSpoutConfig16.kafkaProps = strMap26;
        java.util.Map<java.lang.String, java.lang.Object> strMap28 = strKafkaSpoutConfig16.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strKafkaSpoutConfig16.kafkaProps;
        strKafkaSpoutConfig8.kafkaProps = strMap29;
        strKafkaSpoutConfig0.kafkaProps = strMap29;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer32 = strKafkaSpoutConfig0.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass33 = strKafkaSpoutConfig0.valueDesClazz;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer36 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int37 = strKafkaSpoutConfig0.getMaxTupleRetries();
        java.util.Map<java.lang.String, java.lang.Object> strMap38 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy40 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        java.lang.String str41 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService42 = strKafkaSpoutConfig0.retryService;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy13);
        org.junit.Assert.assertNull(strRecordTranslator14);
        org.junit.Assert.assertNull(firstPollOffsetStrategy15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strMap26);
        org.junit.Assert.assertNotNull(strMap28);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNull(strSerializableDeserializer32);
        org.junit.Assert.assertNull(wildcardClass33);
        org.junit.Assert.assertNull(strDeserializer36);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(strMap38);
        org.junit.Assert.assertNull(firstPollOffsetStrategy39);
        org.junit.Assert.assertNull(firstPollOffsetStrategy40);
        org.junit.Assert.assertEquals("'" + str41 + "' != '" + "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str41, "KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(kafkaSpoutRetryService42);
    }

    @Test
    public void test03468() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03468");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        long long5 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator7 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer9 = strKafkaSpoutConfig0.keyDes;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strSerializableDeserializer9);
    }

    @Test
    public void test03469() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03469");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setMaxUncommittedOffsets((int) (byte) 0);
        long long14 = strBuilder13.partitionRefreshPeriodMs;
        strBuilder13.offsetCommitPeriodMs = 10;
        java.lang.Class<?> wildcardClass17 = strBuilder13.getClass();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
// flaky:         org.junit.Assert.assertTrue("'" + long14 + "' != '" + 32L + "'", long14 == 32L);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test03470() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03470");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        long long5 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str6 = strKafkaSpoutConfig0.toString();
        long long7 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy8 = strKafkaSpoutConfig0.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.getSubscription();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertEquals("'" + str6 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str6, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy8);
        org.junit.Assert.assertNull(subscription9);
    }

    @Test
    public void test03471() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03471");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strBuilderSerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>> strListBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.AbstractList<java.lang.String>, org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>>("", strListSerializableDeserializer1, strBuilderSerializableDeserializer2, pattern3);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: bootstrap servers cannot be null");
        } catch (java.lang.IllegalArgumentException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03472() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03472");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder10.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig16 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int17 = strKafkaSpoutConfig16.getMaxTupleRetries();
        strKafkaSpoutConfig16.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService20 = strKafkaSpoutConfig16.retryService;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass27 = strBuilder26.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder26.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        strKafkaSpoutConfig16.firstPollOffsetStrategy = firstPollOffsetStrategy28;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder10.setFirstPollOffsetStrategy(firstPollOffsetStrategy28);
        int int32 = strBuilder31.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = strBuilder31.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap35 = null;
        strBuilder31.kafkaProps = strMap35;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer37 = null;
        strBuilder31.valueDes = strSerializableDeserializer37;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder31.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=97, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!");
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService20);
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(wildcardClass27);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy28 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy28.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(strBuilder34);
    }

    @Test
    public void test03473() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03473");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        org.apache.storm.kafka.spout.Subscription subscription34 = strBuilder11.subscription;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig35 = strBuilder11.build();
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = strBuilder11.setFetchMinBytes((int) ' ');
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(subscription34);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig35);
        org.junit.Assert.assertNotNull(strBuilder37);
    }

    @Test
    public void test03474() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03474");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig9 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator10 = strKafkaSpoutConfig9.translator;
        long long11 = strKafkaSpoutConfig9.getPartitionRefreshPeriodMs();
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer12 = strKafkaSpoutConfig9.getKeyDeserializer();
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Object> objSerializableDeserializer13 = strKafkaSpoutConfig9.valueDes;
        int int14 = strKafkaSpoutConfig9.getMaxUncommittedOffsets();
        java.lang.String[] strArray17 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList18 = new java.util.ArrayList<java.lang.String>();
        boolean boolean19 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList18, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList18);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer21 = null;
        strBuilder20.keyDes = strSerializableDeserializer21;
        long long23 = strBuilder20.partitionRefreshPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder20.setMaxUncommittedOffsets((int) (byte) -1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer27 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer28 = null;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder34.setPartitionRefreshPeriodMs((long) 1);
        int int40 = strBuilder39.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder44 = strBuilder39.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = strBuilder39.setSecurityProtocol("hi!");
        java.lang.String[] strArray49 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList50 = new java.util.ArrayList<java.lang.String>();
        boolean boolean51 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList50, strArray49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList50);
        strBuilder52.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder52.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder58.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray63 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList64 = new java.util.ArrayList<java.lang.String>();
        boolean boolean65 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList64, strArray63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList64);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass67 = strBuilder66.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy68 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder66.firstPollOffsetStrategy = firstPollOffsetStrategy68;
        java.lang.String[] strArray72 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList73 = new java.util.ArrayList<java.lang.String>();
        boolean boolean74 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList73, strArray72);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder75 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList73);
        strBuilder75.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap78 = strBuilder75.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder79 = strBuilder66.setProp(strMap78);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder80 = strBuilder58.setProp(strMap78);
        org.apache.storm.kafka.spout.Subscription subscription81 = strBuilder58.subscription;
        strBuilder46.subscription = subscription81;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer27, strSerializableDeserializer28, subscription81);
        strBuilder20.subscription = subscription81;
        strKafkaSpoutConfig9.subscription = subscription81;
        strBuilder5.subscription = subscription81;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder5.setSSLKeystore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer91 = null;
        strBuilder90.valueDes = strSerializableDeserializer91;
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.String> strKafkaSpoutConfig93 = strBuilder90.build();
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNull(strRecordTranslator10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNull(strDeserializer12);
        org.junit.Assert.assertNull(objSerializableDeserializer13);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertTrue("'" + boolean19 + "' != '" + true + "'", boolean19 == true);
        org.junit.Assert.assertNotNull(strBuilder20);
// flaky:         org.junit.Assert.assertTrue("'" + long23 + "' != '" + 32L + "'", long23 == 32L);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(strBuilder44);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strArray49);
        org.junit.Assert.assertTrue("'" + boolean51 + "' != '" + true + "'", boolean51 == true);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strArray63);
        org.junit.Assert.assertTrue("'" + boolean65 + "' != '" + true + "'", boolean65 == true);
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(wildcardClass67);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy68 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy68.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray72);
        org.junit.Assert.assertTrue("'" + boolean74 + "' != '" + true + "'", boolean74 == true);
        org.junit.Assert.assertNotNull(strBuilder75);
        org.junit.Assert.assertNotNull(strMap78);
        org.junit.Assert.assertNotNull(strBuilder79);
        org.junit.Assert.assertNotNull(strBuilder80);
        org.junit.Assert.assertNotNull(subscription81);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strKafkaSpoutConfig93);
    }

    @Test
    public void test03475() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03475");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.util.Map<java.lang.String, java.lang.Object> strMap6 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator7 = null;
        strBuilder5.translator = strRecordTranslator7;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setMaxUncommittedOffsets(1);
        long long11 = strBuilder5.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setBootstrapServers("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = null;
        strBuilder5.keyDes = strSerializableDeserializer14;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap6);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(strBuilder13);
    }

    @Test
    public void test03476() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03476");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig0.maxRetries = (short) 1;
        long long3 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.Object>> wildcardClass4 = strKafkaSpoutConfig0.valueDesClazz;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator5;
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNull(wildcardClass4);
    }

    @Test
    public void test03477() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03477");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator5 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.pollTimeoutMs = 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.kafkaProps;
        org.apache.storm.kafka.spout.Subscription subscription9 = strKafkaSpoutConfig0.getSubscription();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService4);
        org.junit.Assert.assertNull(strRecordTranslator5);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertNull(subscription9);
    }

    @Test
    public void test03478() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03478");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        long long2 = strKafkaSpoutConfig0.getPollTimeoutMs();
        java.util.Map<java.lang.String, java.lang.Object> strMap3 = strKafkaSpoutConfig0.getKafkaProps();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator4 = strKafkaSpoutConfig0.translator;
        int int5 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        strKafkaSpoutConfig0.pollTimeoutMs = 32L;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = null;
        strKafkaSpoutConfig0.translator = strRecordTranslator8;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer10 = strKafkaSpoutConfig0.keyDes;
        // The following exception was thrown during execution in test generation
        try {
            boolean boolean11 = strKafkaSpoutConfig0.isConsumerAutoCommitMode();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNull(strMap3);
        org.junit.Assert.assertNull(strRecordTranslator4);
        org.junit.Assert.assertTrue("'" + int5 + "' != '" + 0 + "'", int5 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer10);
    }

    @Test
    public void test03479() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03479");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        java.lang.String[] strArray13 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList14 = new java.util.ArrayList<java.lang.String>();
        boolean boolean15 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList14, strArray13);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList14);
        strBuilder16.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap19 = strBuilder16.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder21 = strBuilder16.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = strBuilder16.setSecurityProtocol("hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = strBuilder16.setFetchMinBytes(2147483647);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig26 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        strKafkaSpoutConfig26.maxRetries = (short) 1;
        long long29 = strKafkaSpoutConfig26.offsetCommitPeriodMs;
        java.lang.String str30 = strKafkaSpoutConfig26.toString();
        int int31 = strKafkaSpoutConfig26.getMaxTupleRetries();
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        strBuilder37.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap40 = strBuilder37.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setPartitionRefreshPeriodMs((long) 1);
        int int43 = strBuilder42.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = strBuilder42.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder49 = strBuilder42.setSecurityProtocol("hi!");
        java.lang.String[] strArray52 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList53 = new java.util.ArrayList<java.lang.String>();
        boolean boolean54 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList53, strArray52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList53);
        strBuilder55.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder61 = strBuilder55.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder61.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray66 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList67 = new java.util.ArrayList<java.lang.String>();
        boolean boolean68 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList67, strArray66);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder69 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList67);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass70 = strBuilder69.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder69.firstPollOffsetStrategy = firstPollOffsetStrategy71;
        java.lang.String[] strArray75 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList76 = new java.util.ArrayList<java.lang.String>();
        boolean boolean77 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList76, strArray75);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder78 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList76);
        strBuilder78.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap81 = strBuilder78.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder82 = strBuilder69.setProp(strMap81);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder83 = strBuilder61.setProp(strMap81);
        org.apache.storm.kafka.spout.Subscription subscription84 = strBuilder61.subscription;
        strBuilder49.subscription = subscription84;
        subscription84.refreshAssignment();
        strKafkaSpoutConfig26.subscription = subscription84;
        strBuilder16.subscription = subscription84;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator89 = strBuilder16.translator;
        org.apache.storm.tuple.Fields fields90 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder91 = strBuilder10.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator89, fields90);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder91.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder95 = strBuilder93.setPollTimeoutMs(0L);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService96 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder97 = strBuilder95.setRetry(kafkaSpoutRetryService96);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: retryService cannot be null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertNotNull(strArray13);
        org.junit.Assert.assertTrue("'" + boolean15 + "' != '" + true + "'", boolean15 == true);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNotNull(strMap19);
        org.junit.Assert.assertNotNull(strBuilder21);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertEquals("'" + str30 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str30, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 1 + "'", int31 == 1);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(strMap40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + (-1) + "'", int43 == (-1));
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strBuilder49);
        org.junit.Assert.assertNotNull(strArray52);
        org.junit.Assert.assertTrue("'" + boolean54 + "' != '" + true + "'", boolean54 == true);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertNotNull(strBuilder61);
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strArray66);
        org.junit.Assert.assertTrue("'" + boolean68 + "' != '" + true + "'", boolean68 == true);
        org.junit.Assert.assertNotNull(strBuilder69);
        org.junit.Assert.assertNotNull(wildcardClass70);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy71 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy71.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray75);
        org.junit.Assert.assertTrue("'" + boolean77 + "' != '" + true + "'", boolean77 == true);
        org.junit.Assert.assertNotNull(strBuilder78);
        org.junit.Assert.assertNotNull(strMap81);
        org.junit.Assert.assertNotNull(strBuilder82);
        org.junit.Assert.assertNotNull(strBuilder83);
        org.junit.Assert.assertNotNull(subscription84);
        org.junit.Assert.assertNotNull(strRecordTranslator89);
        org.junit.Assert.assertNotNull(strBuilder91);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strBuilder95);
    }

    @Test
    public void test03480() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03480");
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>> strKafkaSpoutConfigSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> firstPollOffsetStrategySerializableDeserializer2 = null;
        java.util.regex.Pattern pattern3 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy> strKafkaSpoutConfigBuilder4 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>, org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strKafkaSpoutConfigSerializableDeserializer1, firstPollOffsetStrategySerializableDeserializer2, pattern3);
    }

    @Test
    public void test03481() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03481");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.ArrayList<java.lang.String>> strListSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Iterable<java.lang.String>> strIterableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.AnnotatedElement> annotatedElementSerializableDeserializer6 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> strConsumerRecordFuncSerializableDeserializer7 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String[]> strArraySerializableDeserializer9 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer10 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer12 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.AbstractCollection<java.lang.String>> strCollectionSerializableDeserializer13 = null;
        java.lang.String[] strArray17 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>> strComparableBuilder19 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.Comparable<java.lang.String>, java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strComparableSerializableDeserializer12, strCollectionSerializableDeserializer13, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>> strArrayBuilder20 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String[], java.util.AbstractCollection<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArraySerializableDeserializer9, strCollectionSerializableDeserializer10, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>> annotatedElementBuilder21 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.AnnotatedElement, org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=35, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", annotatedElementSerializableDeserializer6, strConsumerRecordFuncSerializableDeserializer7, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder22 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=10, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=35, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListBuilder24 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strListSerializableDeserializer1, strIterableSerializableDeserializer2, strArray17);
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>> strListKafkaSpoutConfig25 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.ArrayList<java.lang.String>, java.lang.Iterable<java.lang.String>>(strListBuilder24);
        org.junit.Assert.assertNotNull(strArray17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertNotNull(strBuilder22);
        org.junit.Assert.assertNotNull(strBuilder23);
    }

    @Test
    public void test03482() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03482");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = strKafkaSpoutConfig0.keyDes;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        int int6 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService7 = strKafkaSpoutConfig0.retryService;
        long long8 = strKafkaSpoutConfig0.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy9 = strKafkaSpoutConfig0.getFirstPollOffsetStrategy();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer4);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService7);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNull(firstPollOffsetStrategy9);
    }

    @Test
    public void test03483() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03483");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator3 = strKafkaSpoutConfig0.getTranslator();
        strKafkaSpoutConfig0.partitionRefreshPeriodMs = (byte) 10;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertNull(strRecordTranslator3);
    }

    @Test
    public void test03484() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03484");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strBuilder5.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = strBuilder5.setPartitionRefreshPeriodMs((long) 1);
        int int11 = strBuilder10.maxRetries;
        java.lang.String[] strArray14 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList15 = new java.util.ArrayList<java.lang.String>();
        boolean boolean16 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList15, strArray14);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList15);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass18 = strBuilder17.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder17.firstPollOffsetStrategy = firstPollOffsetStrategy19;
        java.lang.String[] strArray23 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList24 = new java.util.ArrayList<java.lang.String>();
        boolean boolean25 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList24, strArray23);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder26 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList24);
        strBuilder26.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap29 = strBuilder26.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = strBuilder17.setProp(strMap29);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy31 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder30.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        strBuilder10.firstPollOffsetStrategy = firstPollOffsetStrategy31;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer35 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer36 = null;
        java.lang.String[] strArray38 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList39 = new java.util.ArrayList<java.lang.String>();
        boolean boolean40 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList39, strArray38);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer35, strSerializableDeserializer36, (java.util.Collection<java.lang.String>) strList39);
        java.lang.String[] strArray44 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList45 = new java.util.ArrayList<java.lang.String>();
        boolean boolean46 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList45, strArray44);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder47 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList45);
        strBuilder47.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap50 = strBuilder47.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = strBuilder47.setPartitionRefreshPeriodMs((long) 1);
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService53 = null;
        strBuilder52.retryService = kafkaSpoutRetryService53;
        java.util.Map<java.lang.String, java.lang.Object> strMap55 = strBuilder52.kafkaProps;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator56 = strBuilder52.translator;
        strBuilder41.translator = strRecordTranslator56;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder58 = strBuilder10.setRecordTranslator(strRecordTranslator56);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder58.setOffsetCommitPeriodMs(97L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy61 = strBuilder58.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder63 = strBuilder58.setPartitionRefreshPeriodMs(141902646130682494L);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder65 = strBuilder63.setMaxRetries((int) (short) -1);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass66 = strBuilder65.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strMap8);
        org.junit.Assert.assertNotNull(strBuilder10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(strArray14);
        org.junit.Assert.assertTrue("'" + boolean16 + "' != '" + true + "'", boolean16 == true);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(wildcardClass18);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy19 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy19.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray23);
        org.junit.Assert.assertTrue("'" + boolean25 + "' != '" + true + "'", boolean25 == true);
        org.junit.Assert.assertNotNull(strBuilder26);
        org.junit.Assert.assertNotNull(strMap29);
        org.junit.Assert.assertNotNull(strBuilder30);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy31 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy31.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray38);
        org.junit.Assert.assertTrue("'" + boolean40 + "' != '" + true + "'", boolean40 == true);
        org.junit.Assert.assertNotNull(strArray44);
        org.junit.Assert.assertTrue("'" + boolean46 + "' != '" + true + "'", boolean46 == true);
        org.junit.Assert.assertNotNull(strBuilder47);
        org.junit.Assert.assertNotNull(strMap50);
        org.junit.Assert.assertNotNull(strBuilder52);
        org.junit.Assert.assertNotNull(strMap55);
        org.junit.Assert.assertNotNull(strRecordTranslator56);
        org.junit.Assert.assertNotNull(strBuilder58);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy61 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy61.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder63);
        org.junit.Assert.assertNotNull(strBuilder65);
        org.junit.Assert.assertNotNull(wildcardClass66);
    }

    @Test
    public void test03485() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03485");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer6 = null;
        strBuilder5.keyDes = strSerializableDeserializer6;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder9 = strBuilder5.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=100, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        long long10 = strBuilder5.offsetCommitPeriodMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder5.setSSLTruststore("", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer14 = strBuilder5.keyDes;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder9);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 1L + "'", long10 == 1L);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNull(strSerializableDeserializer14);
    }

    @Test
    public void test03486() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03486");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray16 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList17 = new java.util.ArrayList<java.lang.String>();
        boolean boolean18 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList17, strArray16);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder19 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList17);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass20 = strBuilder19.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy21 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder19.firstPollOffsetStrategy = firstPollOffsetStrategy21;
        java.lang.String[] strArray25 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList26 = new java.util.ArrayList<java.lang.String>();
        boolean boolean27 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList26, strArray25);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder28 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList26);
        strBuilder28.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap31 = strBuilder28.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder19.setProp(strMap31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder33 = strBuilder11.setProp(strMap31);
        strBuilder33.partitionRefreshPeriodMs = 35L;
        strBuilder33.partitionRefreshPeriodMs = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder39 = strBuilder33.setSecurityProtocol("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer42 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.CharSequence> charSequenceSerializableDeserializer43 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer45 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer46 = null;
        java.lang.String[] strArray50 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder52 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer45, strSerializableDeserializer46, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence> genericDeclarationBuilder53 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.CharSequence>("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", genericDeclarationSerializableDeserializer42, charSequenceSerializableDeserializer43, strArray50);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder54 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strArray50);
        java.lang.String[] strArray57 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList58 = new java.util.ArrayList<java.lang.String>();
        boolean boolean59 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList58, strArray57);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList58);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer61 = null;
        strBuilder60.keyDes = strSerializableDeserializer61;
        java.util.Map<java.lang.String, java.lang.Object> strMap63 = strBuilder60.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder64 = strBuilder54.setProp(strMap63);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy65 = strBuilder54.firstPollOffsetStrategy;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder66 = strBuilder33.setFirstPollOffsetStrategy(firstPollOffsetStrategy65);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder68 = strBuilder33.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=100, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strArray16);
        org.junit.Assert.assertTrue("'" + boolean18 + "' != '" + true + "'", boolean18 == true);
        org.junit.Assert.assertNotNull(strBuilder19);
        org.junit.Assert.assertNotNull(wildcardClass20);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy21 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy21.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray25);
        org.junit.Assert.assertTrue("'" + boolean27 + "' != '" + true + "'", boolean27 == true);
        org.junit.Assert.assertNotNull(strBuilder28);
        org.junit.Assert.assertNotNull(strMap31);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strBuilder33);
        org.junit.Assert.assertNotNull(strBuilder39);
        org.junit.Assert.assertNotNull(strArray50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(strBuilder54);
        org.junit.Assert.assertNotNull(strArray57);
        org.junit.Assert.assertTrue("'" + boolean59 + "' != '" + true + "'", boolean59 == true);
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertNotNull(strMap63);
        org.junit.Assert.assertNotNull(strBuilder64);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy65 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST + "'", firstPollOffsetStrategy65.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.UNCOMMITTED_EARLIEST));
        org.junit.Assert.assertNotNull(strBuilder66);
        org.junit.Assert.assertNotNull(strBuilder68);
    }

    @Test
    public void test03487() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03487");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        strKafkaSpoutConfig0.maxUncommittedOffsets = 0;
        strKafkaSpoutConfig0.maxUncommittedOffsets = 35;
        strKafkaSpoutConfig0.maxRetries = (byte) 1;
        java.util.Map<java.lang.String, java.lang.Object> strMap8 = strKafkaSpoutConfig0.getKafkaProps();
        long long9 = strKafkaSpoutConfig0.getPartitionRefreshPeriodMs();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService10 = strKafkaSpoutConfig0.retryService;
        java.util.Map<java.lang.String, java.lang.Object> strMap11 = strKafkaSpoutConfig0.getKafkaProps();
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(strMap8);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNull(kafkaSpoutRetryService10);
        org.junit.Assert.assertNull(strMap11);
    }

    @Test
    public void test03488() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03488");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int1 = strKafkaSpoutConfig0.getMaxTupleRetries();
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService2 = strKafkaSpoutConfig0.retryService;
        java.lang.String str3 = strKafkaSpoutConfig0.toString();
        long long4 = strKafkaSpoutConfig0.offsetCommitPeriodMs;
        java.lang.String str5 = strKafkaSpoutConfig0.toString();
        strKafkaSpoutConfig0.pollTimeoutMs = 52;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator8 = strKafkaSpoutConfig0.translator;
        org.junit.Assert.assertTrue("'" + int1 + "' != '" + 0 + "'", int1 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService2);
        org.junit.Assert.assertEquals("'" + str3 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str3, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertEquals("'" + str5 + "' != '" + "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" + "'", str5, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.junit.Assert.assertNull(strRecordTranslator8);
    }

    @Test
    public void test03489() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03489");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        strBuilder5.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = strBuilder5.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setMaxPartitionFectchBytes((-1));
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder11.setFetchMinBytes(100);
        long long18 = strBuilder17.pollTimeoutMs;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder20 = strBuilder17.setOffsetCommitPeriodMs((long) (short) -1);
        strBuilder20.partitionRefreshPeriodMs = (byte) 100;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer24 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer25 = null;
        java.lang.String[] strArray27 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList28 = new java.util.ArrayList<java.lang.String>();
        boolean boolean29 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList28, strArray27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder30 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strSerializableDeserializer24, strSerializableDeserializer25, (java.util.Collection<java.lang.String>) strList28);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder32 = strBuilder30.setMaxRetries((-1));
        strBuilder32.offsetCommitPeriodMs = 32L;
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator35 = strBuilder32.translator;
        strBuilder20.translator = strRecordTranslator35;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(strBuilder20);
        org.junit.Assert.assertNotNull(strArray27);
        org.junit.Assert.assertTrue("'" + boolean29 + "' != '" + true + "'", boolean29 == true);
        org.junit.Assert.assertNotNull(strBuilder32);
        org.junit.Assert.assertNotNull(strRecordTranslator35);
    }

    @Test
    public void test03490() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03490");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.DEFAULT_POLL_TIMEOUT_MS = 30000L;
    }

    @Test
    public void test03491() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03491");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.lang.Iterable<java.lang.String>> strListKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.util.List<java.lang.String>, java.lang.Iterable<java.lang.String>>();
    }

    @Test
    public void test03492() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03492");
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass1 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03493() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03493");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer5 = null;
        java.lang.String[] strArray7 = new java.lang.String[] { "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        java.util.ArrayList<java.lang.String> strList8 = new java.util.ArrayList<java.lang.String>();
        boolean boolean9 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList8, strArray7);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder10 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer4, strSerializableDeserializer5, (java.util.Collection<java.lang.String>) strList8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer1, strSerializableDeserializer2, (java.util.Collection<java.lang.String>) strList8);
        int int12 = strBuilder11.maxUncommittedOffsets;
        strBuilder11.maxRetries = 'a';
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder16 = strBuilder11.setSecurityProtocol("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=1, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass17 = strBuilder16.keyDesClazz;
        org.junit.Assert.assertNotNull(strArray7);
        org.junit.Assert.assertTrue("'" + boolean9 + "' != '" + true + "'", boolean9 == true);
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 10 + "'", int12 == 10);
        org.junit.Assert.assertNotNull(strBuilder16);
        org.junit.Assert.assertNull(wildcardClass17);
    }

    @Test
    public void test03494() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03494");
        org.apache.storm.kafka.spout.SerializableDeserializer<java.util.Map<java.lang.String, java.lang.Object>> strMapSerializableDeserializer1 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.Comparable<java.lang.String>> strComparableSerializableDeserializer2 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.GenericDeclaration> genericDeclarationSerializableDeserializer4 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.reflect.Type> typeSerializableDeserializer5 = null;
        java.lang.String[] strArray8 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList9 = new java.util.ArrayList<java.lang.String>();
        boolean boolean10 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList9, strArray8);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder11 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList9);
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator12 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder13 = strBuilder11.setRecordTranslator(strRecordTranslator12);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder15 = strBuilder11.setBootstrapServers("");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder17 = strBuilder15.setMaxPollRecords((int) (short) 1);
        java.lang.String[] strArray20 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList21 = new java.util.ArrayList<java.lang.String>();
        boolean boolean22 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList21, strArray20);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder23 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList21);
        strBuilder23.maxRetries = (byte) -1;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder23.setSSLKeystore("", "", "hi!");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setMaxPartitionFectchBytes((-1));
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder37.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        java.lang.String[] strArray43 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList44 = new java.util.ArrayList<java.lang.String>();
        boolean boolean45 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList44, strArray43);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder46 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList44);
        strBuilder46.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap49 = strBuilder46.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = strBuilder37.setProp(strMap49);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder51 = strBuilder29.setProp(strMap49);
        org.apache.storm.kafka.spout.Subscription subscription52 = strBuilder29.subscription;
        strBuilder17.subscription = subscription52;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.Type> genericDeclarationBuilder54 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.reflect.GenericDeclaration, java.lang.reflect.Type>("hi!", genericDeclarationSerializableDeserializer4, typeSerializableDeserializer5, subscription52);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Comparable<java.lang.String>> strMapBuilder55 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Comparable<java.lang.String>>("KafkaSpoutConfig{kafkaProps={enable.auto.commit=false, bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=32, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", strMapSerializableDeserializer1, strComparableSerializableDeserializer2, subscription52);
        org.junit.Assert.assertNotNull(strArray8);
        org.junit.Assert.assertTrue("'" + boolean10 + "' != '" + true + "'", boolean10 == true);
        org.junit.Assert.assertNotNull(strBuilder11);
        org.junit.Assert.assertNotNull(strBuilder13);
        org.junit.Assert.assertNotNull(strBuilder15);
        org.junit.Assert.assertNotNull(strBuilder17);
        org.junit.Assert.assertNotNull(strArray20);
        org.junit.Assert.assertTrue("'" + boolean22 + "' != '" + true + "'", boolean22 == true);
        org.junit.Assert.assertNotNull(strBuilder23);
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray43);
        org.junit.Assert.assertTrue("'" + boolean45 + "' != '" + true + "'", boolean45 == true);
        org.junit.Assert.assertNotNull(strBuilder46);
        org.junit.Assert.assertNotNull(strMap49);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strBuilder51);
        org.junit.Assert.assertNotNull(subscription52);
    }

    @Test
    public void test03495() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03495");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.Object> strRecordTranslator1 = strKafkaSpoutConfig0.translator;
        org.apache.kafka.common.serialization.Deserializer<java.lang.String> strDeserializer2 = strKafkaSpoutConfig0.getKeyDeserializer();
        int int3 = strKafkaSpoutConfig0.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService4 = null;
        strKafkaSpoutConfig0.retryService = kafkaSpoutRetryService4;
        int int6 = strKafkaSpoutConfig0.maxUncommittedOffsets;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer7 = strKafkaSpoutConfig0.keyDes;
        strKafkaSpoutConfig0.offsetCommitPeriodMs = 0L;
        org.apache.storm.kafka.spout.Subscription subscription10 = strKafkaSpoutConfig0.subscription;
        int int11 = strKafkaSpoutConfig0.maxRetries;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.String str12 = strKafkaSpoutConfig0.getConsumerGroupId();
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
        // Expected exception.
        }
        org.junit.Assert.assertNull(strRecordTranslator1);
        org.junit.Assert.assertNull(strDeserializer2);
        org.junit.Assert.assertTrue("'" + int3 + "' != '" + 0 + "'", int3 == 0);
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNull(strSerializableDeserializer7);
        org.junit.Assert.assertNull(subscription10);
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test03496() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03496");
        java.util.regex.Pattern pattern1 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder2 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("KafkaSpoutConfig{kafkaProps={bootstrap.servers=hi!}, key=null, value=null, pollTimeoutMs=100, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", pattern1);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer3 = strBuilder2.keyDes;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass4 = strBuilder2.valueDesClazz;
        org.junit.Assert.assertNotNull(strBuilder2);
        org.junit.Assert.assertNull(strSerializableDeserializer3);
        org.junit.Assert.assertNotNull(wildcardClass4);
    }

    @Test
    public void test03497() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03497");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        java.lang.String[] strArray31 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList32 = new java.util.ArrayList<java.lang.String>();
        boolean boolean33 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList32, strArray31);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder34 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList32);
        strBuilder34.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap37 = strBuilder34.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder38 = strBuilder25.setProp(strMap37);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy39 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder38.firstPollOffsetStrategy = firstPollOffsetStrategy39;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder41 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy39);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder43 = strBuilder41.setGroupId("hi!");
        strBuilder43.pollTimeoutMs = (short) -1;
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass46 = strBuilder43.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder48 = strBuilder43.setBootstrapServers("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=1, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        strBuilder43.partitionRefreshPeriodMs = (short) -1;
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray31);
        org.junit.Assert.assertTrue("'" + boolean33 + "' != '" + true + "'", boolean33 == true);
        org.junit.Assert.assertNotNull(strBuilder34);
        org.junit.Assert.assertNotNull(strMap37);
        org.junit.Assert.assertNotNull(strBuilder38);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy39 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy39.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder41);
        org.junit.Assert.assertNotNull(strBuilder43);
        org.junit.Assert.assertNotNull(wildcardClass46);
        org.junit.Assert.assertNotNull(strBuilder48);
    }

    @Test
    public void test03498() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03498");
        java.lang.ClassLoader classLoader2 = null;
        // The following exception was thrown during execution in test generation
        try {
            java.lang.Class<?> wildcardClass3 = java.lang.Class.forName("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", true, classLoader2);
            org.junit.Assert.fail("Expected exception of type java.lang.ClassNotFoundException; message: KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=97, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        } catch (java.lang.ClassNotFoundException e) {
        // Expected exception.
        }
    }

    @Test
    public void test03499() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03499");
        java.lang.String[] strArray2 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList3 = new java.util.ArrayList<java.lang.String>();
        boolean boolean4 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList3, strArray2);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder5 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList3);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass6 = strBuilder5.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy7 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder5.firstPollOffsetStrategy = firstPollOffsetStrategy7;
        java.lang.String[] strArray11 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList12 = new java.util.ArrayList<java.lang.String>();
        boolean boolean13 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList12, strArray11);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder14 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList12);
        strBuilder14.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap17 = strBuilder14.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder18 = strBuilder5.setProp(strMap17);
        long long19 = strBuilder5.pollTimeoutMs;
        java.lang.String[] strArray22 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList23 = new java.util.ArrayList<java.lang.String>();
        boolean boolean24 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList23, strArray22);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder25 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList23);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass26 = strBuilder25.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy27 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder25.firstPollOffsetStrategy = firstPollOffsetStrategy27;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder29 = strBuilder5.setFirstPollOffsetStrategy(firstPollOffsetStrategy27);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder31 = strBuilder29.setOffsetCommitPeriodMs(35L);
        java.lang.String[] strArray34 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList35 = new java.util.ArrayList<java.lang.String>();
        boolean boolean36 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList35, strArray34);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder37 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList35);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass38 = strBuilder37.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder40 = strBuilder37.setFetchMinBytes((int) (byte) 0);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder42 = strBuilder37.setSecurityProtocol("");
        strBuilder42.maxUncommittedOffsets = 'a';
        java.lang.String[] strArray47 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList48 = new java.util.ArrayList<java.lang.String>();
        boolean boolean49 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList48, strArray47);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder50 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList48);
        strBuilder50.maxRetries = (byte) -1;
        java.util.Map<java.lang.String, java.lang.Object> strMap53 = strBuilder50.kafkaProps;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder55 = strBuilder50.setPartitionRefreshPeriodMs((long) 1);
        int int56 = strBuilder55.maxRetries;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder60 = strBuilder55.setSSLKeystore("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}", "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object> strKafkaSpoutConfig61 = new org.apache.storm.kafka.spout.KafkaSpoutConfig<java.lang.String, java.lang.Object>();
        int int62 = strKafkaSpoutConfig61.getMaxTupleRetries();
        strKafkaSpoutConfig61.maxUncommittedOffsets = 0;
        org.apache.storm.kafka.spout.KafkaSpoutRetryService kafkaSpoutRetryService65 = strKafkaSpoutConfig61.retryService;
        java.lang.String[] strArray68 = new java.lang.String[] { "" };
        java.util.ArrayList<java.lang.String> strList69 = new java.util.ArrayList<java.lang.String>();
        boolean boolean70 = java.util.Collections.addAll((java.util.Collection<java.lang.String>) strList69, strArray68);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder71 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", (java.util.Collection<java.lang.String>) strList69);
        java.lang.Class<? extends org.apache.kafka.common.serialization.Deserializer<java.lang.String>> wildcardClass72 = strBuilder71.keyDesClazz;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy firstPollOffsetStrategy73 = org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST;
        strBuilder71.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        strKafkaSpoutConfig61.firstPollOffsetStrategy = firstPollOffsetStrategy73;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder76 = strBuilder55.setFirstPollOffsetStrategy(firstPollOffsetStrategy73);
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer78 = null;
        org.apache.storm.kafka.spout.SerializableDeserializer<java.lang.String> strSerializableDeserializer79 = null;
        java.lang.String[] strArray83 = new java.lang.String[] { "hi!", "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}" };
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder84 = org.apache.storm.kafka.spout.KafkaSpoutConfig.builder("hi!", strArray83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder85 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String>("hi!", strSerializableDeserializer78, strSerializableDeserializer79, strArray83);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder87 = strBuilder85.setGroupId("KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=0, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        org.apache.storm.kafka.spout.RecordTranslator<java.lang.String, java.lang.String> strRecordTranslator88 = strBuilder85.translator;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder89 = strBuilder76.setRecordTranslator(strRecordTranslator88);
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder90 = strBuilder42.setRecordTranslator(strRecordTranslator88);
        org.apache.storm.tuple.Fields fields91 = null;
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<java.lang.String, java.lang.String> strBuilder93 = strBuilder31.setRecordTranslator((org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>) strRecordTranslator88, fields91, "KafkaSpoutConfig{kafkaProps=null, key=null, value=null, pollTimeoutMs=0, offsetCommitPeriodMs=0, maxRetries=1, maxUncommittedOffsets=0, firstPollOffsetStrategy=null, subscription=null, translator=null, retryService=null}");
        java.util.Map<java.lang.String, java.lang.Object> strMap94 = strBuilder31.kafkaProps;
        java.util.Map<java.lang.String, java.lang.Object> strMap95 = org.apache.storm.kafka.spout.KafkaSpoutConfig.setDefaultsAndGetKafkaProps(strMap94);
        org.junit.Assert.assertNotNull(strArray2);
        org.junit.Assert.assertTrue("'" + boolean4 + "' != '" + true + "'", boolean4 == true);
        org.junit.Assert.assertNotNull(strBuilder5);
        org.junit.Assert.assertNotNull(wildcardClass6);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy7 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy7.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strArray11);
        org.junit.Assert.assertTrue("'" + boolean13 + "' != '" + true + "'", boolean13 == true);
        org.junit.Assert.assertNotNull(strBuilder14);
        org.junit.Assert.assertNotNull(strMap17);
        org.junit.Assert.assertNotNull(strBuilder18);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 30000L + "'", long19 == 30000L);
        org.junit.Assert.assertNotNull(strArray22);
        org.junit.Assert.assertTrue("'" + boolean24 + "' != '" + true + "'", boolean24 == true);
        org.junit.Assert.assertNotNull(strBuilder25);
        org.junit.Assert.assertNotNull(wildcardClass26);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy27 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy27.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder29);
        org.junit.Assert.assertNotNull(strBuilder31);
        org.junit.Assert.assertNotNull(strArray34);
        org.junit.Assert.assertTrue("'" + boolean36 + "' != '" + true + "'", boolean36 == true);
        org.junit.Assert.assertNotNull(strBuilder37);
        org.junit.Assert.assertNotNull(wildcardClass38);
        org.junit.Assert.assertNotNull(strBuilder40);
        org.junit.Assert.assertNotNull(strBuilder42);
        org.junit.Assert.assertNotNull(strArray47);
        org.junit.Assert.assertTrue("'" + boolean49 + "' != '" + true + "'", boolean49 == true);
        org.junit.Assert.assertNotNull(strBuilder50);
        org.junit.Assert.assertNotNull(strMap53);
        org.junit.Assert.assertNotNull(strBuilder55);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(strBuilder60);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNull(kafkaSpoutRetryService65);
        org.junit.Assert.assertNotNull(strArray68);
        org.junit.Assert.assertTrue("'" + boolean70 + "' != '" + true + "'", boolean70 == true);
        org.junit.Assert.assertNotNull(strBuilder71);
        org.junit.Assert.assertNotNull(wildcardClass72);
        org.junit.Assert.assertTrue("'" + firstPollOffsetStrategy73 + "' != '" + org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST + "'", firstPollOffsetStrategy73.equals(org.apache.storm.kafka.spout.KafkaSpoutConfig.FirstPollOffsetStrategy.LATEST));
        org.junit.Assert.assertNotNull(strBuilder76);
        org.junit.Assert.assertNotNull(strArray83);
        org.junit.Assert.assertNotNull(strBuilder84);
        org.junit.Assert.assertNotNull(strBuilder87);
        org.junit.Assert.assertNotNull(strRecordTranslator88);
        org.junit.Assert.assertNotNull(strBuilder89);
        org.junit.Assert.assertNotNull(strBuilder90);
        org.junit.Assert.assertNotNull(strBuilder93);
        org.junit.Assert.assertNotNull(strMap94);
        org.junit.Assert.assertNotNull(strMap95);
    }

    @Test
    public void test03500() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest6.test03500");
        org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.util.RandomAccess> strConsumerRecordFuncBuilder0 = new org.apache.storm.kafka.spout.KafkaSpoutConfig.Builder<org.apache.storm.kafka.spout.Func<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String, java.lang.String>, java.util.List<java.lang.Object>>, java.util.RandomAccess>();
    }
}
